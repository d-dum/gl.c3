module gl;

def GLenum =  uint;
def GLboolean =  char;
def GLbitfield =  uint;
def GLvoid =  void;
def GLbyte = ichar;
def GLubyte = char;
def GLshort = short;
def GLushort = ushort;
def GLint =  int;
def GLuint =  uint;
def GLclampx = int;
def GLsizei =  int;
def GLdouble =  double;
def GLclampd =  double;
def GLeglClientBufferEXT =  void*;
def GLeglImageOES =  void*;
def GLchar =  char;
def GLcharARB =  char;
def GLhalf = ushort;
def GLhalfARB = ushort;
def GLfixed = int;
def GLintptr = int*;
def GLintptrARB = int*;
def GLint64 = long;
def GLint64EXT = long;
def GLuint64 = ulong;
def GLuint64EXT = ulong;
def GLhalfNV =  ushort;
def GLvdpauSurfaceNV =  GLintptr;


const GL_CURRENT_BIT = 0x00000001;
const GL_POINT_BIT = 0x00000002;
const GL_LINE_BIT = 0x00000004;
const GL_POLYGON_BIT = 0x00000008;
const GL_POLYGON_STIPPLE_BIT = 0x00000010;
const GL_PIXEL_MODE_BIT = 0x00000020;
const GL_LIGHTING_BIT = 0x00000040;
const GL_FOG_BIT = 0x00000080;
const GL_DEPTH_BUFFER_BIT = 0x00000100;
const GL_ACCUM_BUFFER_BIT = 0x00000200;
const GL_STENCIL_BUFFER_BIT = 0x00000400;
const GL_VIEWPORT_BIT = 0x00000800;
const GL_TRANSFORM_BIT = 0x00001000;
const GL_ENABLE_BIT = 0x00002000;
const GL_COLOR_BUFFER_BIT = 0x00004000;
const GL_HINT_BIT = 0x00008000;
const GL_EVAL_BIT = 0x00010000;
const GL_LIST_BIT = 0x00020000;
const GL_TEXTURE_BIT = 0x00040000;
const GL_SCISSOR_BIT = 0x00080000;
const GL_MULTISAMPLE_BIT = 0x20000000;
const GL_MULTISAMPLE_BIT_ARB = 0x20000000;
const GL_MULTISAMPLE_BIT_EXT = 0x20000000;
const GL_MULTISAMPLE_BIT_3DFX = 0x20000000;
const GL_ALL_ATTRIB_BITS = 0xFFFFFFFF;
const GL_DYNAMIC_STORAGE_BIT = 0x0100;
const GL_DYNAMIC_STORAGE_BIT_EXT = 0x0100;
const GL_CLIENT_STORAGE_BIT = 0x0200;
const GL_CLIENT_STORAGE_BIT_EXT = 0x0200;
const GL_SPARSE_STORAGE_BIT_ARB = 0x0400;
const GL_CLIENT_PIXEL_STORE_BIT = 0x00000001;
const GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002;
const GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF;
const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001;
const GL_CONTEXT_FLAG_DEBUG_BIT = 0x00000002;
const GL_CONTEXT_FLAG_DEBUG_BIT_KHR = 0x00000002;
const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004;
const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004;
const GL_CONTEXT_FLAG_NO_ERROR_BIT = 0x00000008;
const GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = 0x00000008;
const GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT = 0x00000010;
const GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
const GL_MAP_READ_BIT = 0x0001;
const GL_MAP_READ_BIT_EXT = 0x0001;
const GL_MAP_WRITE_BIT = 0x0002;
const GL_MAP_WRITE_BIT_EXT = 0x0002;
const GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;
const GL_MAP_FLUSH_EXPLICIT_BIT_EXT = 0x0010;
const GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;
const GL_MAP_UNSYNCHRONIZED_BIT_EXT = 0x0020;
const GL_MAP_PERSISTENT_BIT = 0x0040;
const GL_MAP_PERSISTENT_BIT_EXT = 0x0040;
const GL_MAP_COHERENT_BIT = 0x0080;
const GL_MAP_COHERENT_BIT_EXT = 0x0080;
const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001;
const GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
const GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002;
const GL_UNIFORM_BARRIER_BIT = 0x00000004;
const GL_UNIFORM_BARRIER_BIT_EXT = 0x00000004;
const GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
const GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008;
const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020;
const GL_COMMAND_BARRIER_BIT = 0x00000040;
const GL_COMMAND_BARRIER_BIT_EXT = 0x00000040;
const GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
const GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080;
const GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
const GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100;
const GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
const GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200;
const GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400;
const GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400;
const GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
const GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800;
const GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
const GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000;
const GL_SHADER_STORAGE_BARRIER_BIT = 0x00002000;
const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000;
const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = 0x00004000;
const GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000;
const GL_ALL_BARRIER_BITS = 0xFFFFFFFF;
const GL_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF;
const GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001;
const GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002;
const GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004;
const GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008;
const GL_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF;
const GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
const GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = 0x00000001;
const GL_VERTEX_SHADER_BIT = 0x00000001;
const GL_VERTEX_SHADER_BIT_EXT = 0x00000001;
const GL_FRAGMENT_SHADER_BIT = 0x00000002;
const GL_FRAGMENT_SHADER_BIT_EXT = 0x00000002;
const GL_GEOMETRY_SHADER_BIT = 0x00000004;
const GL_GEOMETRY_SHADER_BIT_EXT = 0x00000004;
const GL_GEOMETRY_SHADER_BIT_OES = 0x00000004;
const GL_TESS_CONTROL_SHADER_BIT = 0x00000008;
const GL_TESS_CONTROL_SHADER_BIT_EXT = 0x00000008;
const GL_TESS_CONTROL_SHADER_BIT_OES = 0x00000008;
const GL_TESS_EVALUATION_SHADER_BIT = 0x00000010;
const GL_TESS_EVALUATION_SHADER_BIT_EXT = 0x00000010;
const GL_TESS_EVALUATION_SHADER_BIT_OES = 0x00000010;
const GL_COMPUTE_SHADER_BIT = 0x00000020;
const GL_ALL_SHADER_BITS = 0xFFFFFFFF;
const GL_ALL_SHADER_BITS_EXT = 0xFFFFFFFF;
const GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = 0x00000001;
const GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = 0x00000002;
const GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = 0x00000004;
const GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = 0x00000008;
const GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = 0x00000010;
const GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = 0x00000020;
const GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = 0x00000040;
const GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = 0x00000080;
const GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001;
const GL_RED_BIT_ATI = 0x00000001;
const GL_GREEN_BIT_ATI = 0x00000002;
const GL_BLUE_BIT_ATI = 0x00000004;
const GL_2X_BIT_ATI = 0x00000001;
const GL_4X_BIT_ATI = 0x00000002;
const GL_8X_BIT_ATI = 0x00000004;
const GL_HALF_BIT_ATI = 0x00000008;
const GL_QUARTER_BIT_ATI = 0x00000010;
const GL_EIGHTH_BIT_ATI = 0x00000020;
const GL_SATURATE_BIT_ATI = 0x00000040;
const GL_COMP_BIT_ATI = 0x00000002;
const GL_NEGATE_BIT_ATI = 0x00000004;
const GL_BIAS_BIT_ATI = 0x00000008;
const GL_TRACE_OPERATIONS_BIT_MESA = 0x0001;
const GL_TRACE_PRIMITIVES_BIT_MESA = 0x0002;
const GL_TRACE_ARRAYS_BIT_MESA = 0x0004;
const GL_TRACE_TEXTURES_BIT_MESA = 0x0008;
const GL_TRACE_PIXELS_BIT_MESA = 0x0010;
const GL_TRACE_ERRORS_BIT_MESA = 0x0020;
const GL_TRACE_ALL_BITS_MESA = 0xFFFF;
const GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000;
const GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001;
const GL_VERTEX23_BIT_PGI = 0x00000004;
const GL_VERTEX4_BIT_PGI = 0x00000008;
const GL_COLOR3_BIT_PGI = 0x00010000;
const GL_COLOR4_BIT_PGI = 0x00020000;
const GL_EDGEFLAG_BIT_PGI = 0x00040000;
const GL_INDEX_BIT_PGI = 0x00080000;
const GL_NORMAL_BIT_PGI = 0x08000000;
const GL_TEXCOORD1_BIT_PGI = 0x10000000;
const GL_TEXCOORD2_BIT_PGI = 0x20000000;
const GL_TEXCOORD3_BIT_PGI = 0x40000000;
const GL_TEXCOORD4_BIT_PGI = 0x80000000;
const GL_COLOR_BUFFER_BIT0_QCOM = 0x00000001;
const GL_COLOR_BUFFER_BIT1_QCOM = 0x00000002;
const GL_COLOR_BUFFER_BIT2_QCOM = 0x00000004;
const GL_COLOR_BUFFER_BIT3_QCOM = 0x00000008;
const GL_COLOR_BUFFER_BIT4_QCOM = 0x00000010;
const GL_COLOR_BUFFER_BIT5_QCOM = 0x00000020;
const GL_COLOR_BUFFER_BIT6_QCOM = 0x00000040;
const GL_COLOR_BUFFER_BIT7_QCOM = 0x00000080;
const GL_DEPTH_BUFFER_BIT0_QCOM = 0x00000100;
const GL_DEPTH_BUFFER_BIT1_QCOM = 0x00000200;
const GL_DEPTH_BUFFER_BIT2_QCOM = 0x00000400;
const GL_DEPTH_BUFFER_BIT3_QCOM = 0x00000800;
const GL_DEPTH_BUFFER_BIT4_QCOM = 0x00001000;
const GL_DEPTH_BUFFER_BIT5_QCOM = 0x00002000;
const GL_DEPTH_BUFFER_BIT6_QCOM = 0x00004000;
const GL_DEPTH_BUFFER_BIT7_QCOM = 0x00008000;
const GL_STENCIL_BUFFER_BIT0_QCOM = 0x00010000;
const GL_STENCIL_BUFFER_BIT1_QCOM = 0x00020000;
const GL_STENCIL_BUFFER_BIT2_QCOM = 0x00040000;
const GL_STENCIL_BUFFER_BIT3_QCOM = 0x00080000;
const GL_STENCIL_BUFFER_BIT4_QCOM = 0x00100000;
const GL_STENCIL_BUFFER_BIT5_QCOM = 0x00200000;
const GL_STENCIL_BUFFER_BIT6_QCOM = 0x00400000;
const GL_STENCIL_BUFFER_BIT7_QCOM = 0x00800000;
const GL_MULTISAMPLE_BUFFER_BIT0_QCOM = 0x01000000;
const GL_MULTISAMPLE_BUFFER_BIT1_QCOM = 0x02000000;
const GL_MULTISAMPLE_BUFFER_BIT2_QCOM = 0x04000000;
const GL_MULTISAMPLE_BUFFER_BIT3_QCOM = 0x08000000;
const GL_MULTISAMPLE_BUFFER_BIT4_QCOM = 0x10000000;
const GL_MULTISAMPLE_BUFFER_BIT5_QCOM = 0x20000000;
const GL_MULTISAMPLE_BUFFER_BIT6_QCOM = 0x40000000;
const GL_MULTISAMPLE_BUFFER_BIT7_QCOM = 0x80000000;
const GL_FOVEATION_ENABLE_BIT_QCOM = 0x00000001;
const GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM = 0x00000002;
const GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM = 0x00000004;
const GL_LAYOUT_DEFAULT_INTEL = 0;
const GL_LAYOUT_LINEAR_INTEL = 1;
const GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2;
const GL_RESTART_SUN = 0x0001;
const GL_REPLACE_MIDDLE_SUN = 0x0002;
const GL_REPLACE_OLDEST_SUN = 0x0003;
const GL_FALSE = 0;
const GL_NO_ERROR = 0;
const GL_ZERO = 0;
const GL_NONE = 0;
const GL_NONE_OES = 0;
const GL_TRUE = 1;
const GL_ONE = 1;
const GL_ALL_PIXELS_AMD = 0xFFFFFFFF;
const GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF;
const GL_TIMEOUT_IGNORED_APPLE = 0xFFFFFFFFFFFFFFFF;
const GL_VERSION_ES_CL_1_0 = 1;
const GL_VERSION_ES_CM_1_1 = 1;
const GL_VERSION_ES_CL_1_1 = 1;
const GL_UUID_SIZE_EXT = 16;
const GL_LUID_SIZE_EXT = 8;
const GL_POINTS = 0x0000;
const GL_LINES = 0x0001;
const GL_LINE_LOOP = 0x0002;
const GL_LINE_STRIP = 0x0003;
const GL_TRIANGLES = 0x0004;
const GL_TRIANGLE_STRIP = 0x0005;
const GL_TRIANGLE_FAN = 0x0006;
const GL_QUADS = 0x0007;
const GL_QUADS_EXT = 0x0007;
const GL_QUADS_OES = 0x0007;
const GL_QUAD_STRIP = 0x0008;
const GL_POLYGON = 0x0009;
const GL_LINES_ADJACENCY = 0x000A;
const GL_LINES_ADJACENCY_ARB = 0x000A;
const GL_LINES_ADJACENCY_EXT = 0x000A;
const GL_LINES_ADJACENCY_OES = 0x000A;
const GL_LINE_STRIP_ADJACENCY = 0x000B;
const GL_LINE_STRIP_ADJACENCY_ARB = 0x000B;
const GL_LINE_STRIP_ADJACENCY_EXT = 0x000B;
const GL_LINE_STRIP_ADJACENCY_OES = 0x000B;
const GL_TRIANGLES_ADJACENCY = 0x000C;
const GL_TRIANGLES_ADJACENCY_ARB = 0x000C;
const GL_TRIANGLES_ADJACENCY_EXT = 0x000C;
const GL_TRIANGLES_ADJACENCY_OES = 0x000C;
const GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
const GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D;
const GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D;
const GL_TRIANGLE_STRIP_ADJACENCY_OES = 0x000D;
const GL_PATCHES = 0x000E;
const GL_PATCHES_EXT = 0x000E;
const GL_PATCHES_OES = 0x000E;
const GL_ACCUM = 0x0100;
const GL_LOAD = 0x0101;
const GL_RETURN = 0x0102;
const GL_MULT = 0x0103;
const GL_ADD = 0x0104;
const GL_NEVER = 0x0200;
const GL_LESS = 0x0201;
const GL_EQUAL = 0x0202;
const GL_LEQUAL = 0x0203;
const GL_GREATER = 0x0204;
const GL_NOTEQUAL = 0x0205;
const GL_GEQUAL = 0x0206;
const GL_ALWAYS = 0x0207;
const GL_SRC_COLOR = 0x0300;
const GL_ONE_MINUS_SRC_COLOR = 0x0301;
const GL_SRC_ALPHA = 0x0302;
const GL_ONE_MINUS_SRC_ALPHA = 0x0303;
const GL_DST_ALPHA = 0x0304;
const GL_ONE_MINUS_DST_ALPHA = 0x0305;
const GL_DST_COLOR = 0x0306;
const GL_ONE_MINUS_DST_COLOR = 0x0307;
const GL_SRC_ALPHA_SATURATE = 0x0308;
const GL_SRC_ALPHA_SATURATE_EXT = 0x0308;
const GL_FRONT_LEFT = 0x0400;
const GL_FRONT_RIGHT = 0x0401;
const GL_BACK_LEFT = 0x0402;
const GL_BACK_RIGHT = 0x0403;
const GL_FRONT = 0x0404;
const GL_BACK = 0x0405;
const GL_LEFT = 0x0406;
const GL_RIGHT = 0x0407;
const GL_FRONT_AND_BACK = 0x0408;
const GL_AUX0 = 0x0409;
const GL_AUX1 = 0x040A;
const GL_AUX2 = 0x040B;
const GL_AUX3 = 0x040C;
const GL_STACK_OVERFLOW = 0x0503;
const GL_STACK_OVERFLOW_KHR = 0x0503;
const GL_STACK_UNDERFLOW = 0x0504;
const GL_STACK_UNDERFLOW_KHR = 0x0504;
const GL_OUT_OF_MEMORY = 0x0505;
const GL_CONTEXT_LOST = 0x0507;
const GL_CONTEXT_LOST_KHR = 0x0507;
const GL_2D = 0x0600;
const GL_3D = 0x0601;
const GL_3D_COLOR = 0x0602;
const GL_3D_COLOR_TEXTURE = 0x0603;
const GL_4D_COLOR_TEXTURE = 0x0604;
const GL_PASS_THROUGH_TOKEN = 0x0700;
const GL_POINT_TOKEN = 0x0701;
const GL_LINE_TOKEN = 0x0702;
const GL_POLYGON_TOKEN = 0x0703;
const GL_BITMAP_TOKEN = 0x0704;
const GL_DRAW_PIXEL_TOKEN = 0x0705;
const GL_COPY_PIXEL_TOKEN = 0x0706;
const GL_LINE_RESET_TOKEN = 0x0707;
const GL_EXP = 0x0800;
const GL_EXP2 = 0x0801;
const GL_CW = 0x0900;
const GL_CCW = 0x0901;
const GL_COEFF = 0x0A00;
const GL_ORDER = 0x0A01;
const GL_DOMAIN = 0x0A02;
const GL_CURRENT_COLOR = 0x0B00;
const GL_CURRENT_INDEX = 0x0B01;
const GL_CURRENT_NORMAL = 0x0B02;
const GL_CURRENT_TEXTURE_COORDS = 0x0B03;
const GL_CURRENT_RASTER_COLOR = 0x0B04;
const GL_CURRENT_RASTER_INDEX = 0x0B05;
const GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
const GL_CURRENT_RASTER_POSITION = 0x0B07;
const GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;
const GL_CURRENT_RASTER_DISTANCE = 0x0B09;
const GL_POINT_SMOOTH = 0x0B10;
const GL_POINT_SIZE = 0x0B11;
const GL_POINT_SIZE_RANGE = 0x0B12;
const GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
const GL_POINT_SIZE_GRANULARITY = 0x0B13;
const GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
const GL_LINE_SMOOTH = 0x0B20;
const GL_LINE_WIDTH = 0x0B21;
const GL_LINE_WIDTH_RANGE = 0x0B22;
const GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
const GL_LINE_WIDTH_GRANULARITY = 0x0B23;
const GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
const GL_LINE_STIPPLE = 0x0B24;
const GL_LINE_STIPPLE_PATTERN = 0x0B25;
const GL_LINE_STIPPLE_REPEAT = 0x0B26;
const GL_LIST_MODE = 0x0B30;
const GL_MAX_LIST_NESTING = 0x0B31;
const GL_LIST_BASE = 0x0B32;
const GL_LIST_INDEX = 0x0B33;
const GL_POLYGON_MODE = 0x0B40;
const GL_POLYGON_SMOOTH = 0x0B41;
const GL_POLYGON_STIPPLE = 0x0B42;
const GL_EDGE_FLAG = 0x0B43;
const GL_CULL_FACE = 0x0B44;
const GL_CULL_FACE_MODE = 0x0B45;
const GL_FRONT_FACE = 0x0B46;
const GL_LIGHTING = 0x0B50;
const GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
const GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
const GL_LIGHT_MODEL_AMBIENT = 0x0B53;
const GL_SHADE_MODEL = 0x0B54;
const GL_FOG = 0x0B60;
const GL_FOG_INDEX = 0x0B61;
const GL_FOG_DENSITY = 0x0B62;
const GL_FOG_START = 0x0B63;
const GL_FOG_END = 0x0B64;
const GL_FOG_MODE = 0x0B65;
const GL_FOG_COLOR = 0x0B66;
const GL_DEPTH_RANGE = 0x0B70;
const GL_DEPTH_TEST = 0x0B71;
const GL_DEPTH_WRITEMASK = 0x0B72;
const GL_DEPTH_CLEAR_VALUE = 0x0B73;
const GL_DEPTH_FUNC = 0x0B74;
const GL_ACCUM_CLEAR_VALUE = 0x0B80;
const GL_STENCIL_TEST = 0x0B90;
const GL_STENCIL_CLEAR_VALUE = 0x0B91;
const GL_STENCIL_FUNC = 0x0B92;
const GL_STENCIL_VALUE_MASK = 0x0B93;
const GL_STENCIL_FAIL = 0x0B94;
const GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
const GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
const GL_STENCIL_REF = 0x0B97;
const GL_STENCIL_WRITEMASK = 0x0B98;
const GL_NORMALIZE = 0x0BA1;
const GL_VIEWPORT = 0x0BA2;
const GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
const GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3;
const GL_PROJECTION_STACK_DEPTH = 0x0BA4;
const GL_TEXTURE_STACK_DEPTH = 0x0BA5;
const GL_ATTRIB_STACK_DEPTH = 0x0BB0;
const GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
const GL_ALPHA_TEST = 0x0BC0;
const GL_ALPHA_TEST_QCOM = 0x0BC0;
const GL_ALPHA_TEST_FUNC = 0x0BC1;
const GL_ALPHA_TEST_FUNC_QCOM = 0x0BC1;
const GL_ALPHA_TEST_REF = 0x0BC2;
const GL_ALPHA_TEST_REF_QCOM = 0x0BC2;
const GL_DITHER = 0x0BD0;
const GL_BLEND_DST = 0x0BE0;
const GL_BLEND_SRC = 0x0BE1;
const GL_BLEND = 0x0BE2;
const GL_LOGIC_OP_MODE = 0x0BF0;
const GL_INDEX_LOGIC_OP = 0x0BF1;
const GL_LOGIC_OP = 0x0BF1;
const GL_COLOR_LOGIC_OP = 0x0BF2;
const GL_AUX_BUFFERS = 0x0C00;
const GL_DRAW_BUFFER = 0x0C01;
const GL_DRAW_BUFFER_EXT = 0x0C01;
const GL_READ_BUFFER = 0x0C02;
const GL_READ_BUFFER_EXT = 0x0C02;
const GL_SCISSOR_BOX = 0x0C10;
const GL_SCISSOR_TEST = 0x0C11;
const GL_INDEX_CLEAR_VALUE = 0x0C20;
const GL_INDEX_WRITEMASK = 0x0C21;
const GL_COLOR_CLEAR_VALUE = 0x0C22;
const GL_COLOR_WRITEMASK = 0x0C23;
const GL_INDEX_MODE = 0x0C30;
const GL_RGBA_MODE = 0x0C31;
const GL_DOUBLEBUFFER = 0x0C32;
const GL_STEREO = 0x0C33;
const GL_RENDER_MODE = 0x0C40;
const GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
const GL_POINT_SMOOTH_HINT = 0x0C51;
const GL_LINE_SMOOTH_HINT = 0x0C52;
const GL_POLYGON_SMOOTH_HINT = 0x0C53;
const GL_FOG_HINT = 0x0C54;
const GL_TEXTURE_GEN_S = 0x0C60;
const GL_TEXTURE_GEN_T = 0x0C61;
const GL_TEXTURE_GEN_R = 0x0C62;
const GL_TEXTURE_GEN_Q = 0x0C63;
const GL_PIXEL_MAP_I_TO_I = 0x0C70;
const GL_PIXEL_MAP_S_TO_S = 0x0C71;
const GL_PIXEL_MAP_I_TO_R = 0x0C72;
const GL_PIXEL_MAP_I_TO_G = 0x0C73;
const GL_PIXEL_MAP_I_TO_B = 0x0C74;
const GL_PIXEL_MAP_I_TO_A = 0x0C75;
const GL_PIXEL_MAP_R_TO_R = 0x0C76;
const GL_PIXEL_MAP_G_TO_G = 0x0C77;
const GL_PIXEL_MAP_B_TO_B = 0x0C78;
const GL_PIXEL_MAP_A_TO_A = 0x0C79;
const GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
const GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
const GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
const GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
const GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
const GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
const GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
const GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
const GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
const GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
const GL_UNPACK_SWAP_BYTES = 0x0CF0;
const GL_UNPACK_LSB_FIRST = 0x0CF1;
const GL_UNPACK_ROW_LENGTH = 0x0CF2;
const GL_UNPACK_ROW_LENGTH_EXT = 0x0CF2;
const GL_UNPACK_SKIP_ROWS = 0x0CF3;
const GL_UNPACK_SKIP_ROWS_EXT = 0x0CF3;
const GL_UNPACK_SKIP_PIXELS = 0x0CF4;
const GL_UNPACK_SKIP_PIXELS_EXT = 0x0CF4;
const GL_UNPACK_ALIGNMENT = 0x0CF5;
const GL_PACK_SWAP_BYTES = 0x0D00;
const GL_PACK_LSB_FIRST = 0x0D01;
const GL_PACK_ROW_LENGTH = 0x0D02;
const GL_PACK_SKIP_ROWS = 0x0D03;
const GL_PACK_SKIP_PIXELS = 0x0D04;
const GL_PACK_ALIGNMENT = 0x0D05;
const GL_MAP_COLOR = 0x0D10;
const GL_MAP_STENCIL = 0x0D11;
const GL_INDEX_SHIFT = 0x0D12;
const GL_INDEX_OFFSET = 0x0D13;
const GL_RED_SCALE = 0x0D14;
const GL_RED_BIAS = 0x0D15;
const GL_ZOOM_X = 0x0D16;
const GL_ZOOM_Y = 0x0D17;
const GL_GREEN_SCALE = 0x0D18;
const GL_GREEN_BIAS = 0x0D19;
const GL_BLUE_SCALE = 0x0D1A;
const GL_BLUE_BIAS = 0x0D1B;
const GL_ALPHA_SCALE = 0x0D1C;
const GL_ALPHA_BIAS = 0x0D1D;
const GL_DEPTH_SCALE = 0x0D1E;
const GL_DEPTH_BIAS = 0x0D1F;
const GL_MAX_EVAL_ORDER = 0x0D30;
const GL_MAX_LIGHTS = 0x0D31;
const GL_MAX_CLIP_PLANES = 0x0D32;
const GL_MAX_CLIP_PLANES_IMG = 0x0D32;
const GL_MAX_CLIP_DISTANCES = 0x0D32;
const GL_MAX_CLIP_DISTANCES_EXT = 0x0D32;
const GL_MAX_CLIP_DISTANCES_APPLE = 0x0D32;
const GL_MAX_TEXTURE_SIZE = 0x0D33;
const GL_MAX_PIXEL_MAP_TABLE = 0x0D34;
const GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;
const GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
const GL_MAX_NAME_STACK_DEPTH = 0x0D37;
const GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
const GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
const GL_MAX_VIEWPORT_DIMS = 0x0D3A;
const GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
const GL_SUBPIXEL_BITS = 0x0D50;
const GL_INDEX_BITS = 0x0D51;
const GL_RED_BITS = 0x0D52;
const GL_GREEN_BITS = 0x0D53;
const GL_BLUE_BITS = 0x0D54;
const GL_ALPHA_BITS = 0x0D55;
const GL_DEPTH_BITS = 0x0D56;
const GL_STENCIL_BITS = 0x0D57;
const GL_ACCUM_RED_BITS = 0x0D58;
const GL_ACCUM_GREEN_BITS = 0x0D59;
const GL_ACCUM_BLUE_BITS = 0x0D5A;
const GL_ACCUM_ALPHA_BITS = 0x0D5B;
const GL_NAME_STACK_DEPTH = 0x0D70;
const GL_AUTO_NORMAL = 0x0D80;
const GL_MAP1_COLOR_4 = 0x0D90;
const GL_MAP1_INDEX = 0x0D91;
const GL_MAP1_NORMAL = 0x0D92;
const GL_MAP1_TEXTURE_COORD_1 = 0x0D93;
const GL_MAP1_TEXTURE_COORD_2 = 0x0D94;
const GL_MAP1_TEXTURE_COORD_3 = 0x0D95;
const GL_MAP1_TEXTURE_COORD_4 = 0x0D96;
const GL_MAP1_VERTEX_3 = 0x0D97;
const GL_MAP1_VERTEX_4 = 0x0D98;
const GL_MAP2_COLOR_4 = 0x0DB0;
const GL_MAP2_INDEX = 0x0DB1;
const GL_MAP2_NORMAL = 0x0DB2;
const GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;
const GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;
const GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;
const GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;
const GL_MAP2_VERTEX_3 = 0x0DB7;
const GL_MAP2_VERTEX_4 = 0x0DB8;
const GL_MAP1_GRID_DOMAIN = 0x0DD0;
const GL_MAP1_GRID_SEGMENTS = 0x0DD1;
const GL_MAP2_GRID_DOMAIN = 0x0DD2;
const GL_MAP2_GRID_SEGMENTS = 0x0DD3;
const GL_TEXTURE_1D = 0x0DE0;
const GL_TEXTURE_2D = 0x0DE1;
const GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;
const GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;
const GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;
const GL_SELECTION_BUFFER_POINTER = 0x0DF3;
const GL_SELECTION_BUFFER_SIZE = 0x0DF4;
const GL_TEXTURE_WIDTH = 0x1000;
const GL_TEXTURE_HEIGHT = 0x1001;
const GL_TEXTURE_COMPONENTS = 0x1003;
const GL_TEXTURE_BORDER_COLOR = 0x1004;
const GL_TEXTURE_BORDER_COLOR_EXT = 0x1004;
const GL_TEXTURE_BORDER_COLOR_OES = 0x1004;
const GL_TEXTURE_BORDER = 0x1005;
const GL_TEXTURE_TARGET = 0x1006;
const GL_DONT_CARE = 0x1100;
const GL_FASTEST = 0x1101;
const GL_NICEST = 0x1102;
const GL_AMBIENT = 0x1200;
const GL_DIFFUSE = 0x1201;
const GL_SPECULAR = 0x1202;
const GL_POSITION = 0x1203;
const GL_SPOT_DIRECTION = 0x1204;
const GL_SPOT_EXPONENT = 0x1205;
const GL_SPOT_CUTOFF = 0x1206;
const GL_CONSTANT_ATTENUATION = 0x1207;
const GL_LINEAR_ATTENUATION = 0x1208;
const GL_QUADRATIC_ATTENUATION = 0x1209;
const GL_COMPILE = 0x1300;
const GL_COMPILE_AND_EXECUTE = 0x1301;
const GL_BYTE = 0x1400;
const GL_UNSIGNED_BYTE = 0x1401;
const GL_SHORT = 0x1402;
const GL_UNSIGNED_SHORT = 0x1403;
const GL_INT = 0x1404;
const GL_UNSIGNED_INT = 0x1405;
const GL_FLOAT = 0x1406;
const GL_2_BYTES = 0x1407;
const GL_3_BYTES = 0x1408;
const GL_4_BYTES = 0x1409;
const GL_DOUBLE = 0x140A;
const GL_DOUBLE_EXT = 0x140A;
const GL_HALF_FLOAT = 0x140B;
const GL_HALF_FLOAT_ARB = 0x140B;
const GL_HALF_APPLE = 0x140B;
const GL_FIXED = 0x140C;
const GL_FIXED_OES = 0x140C;
const GL_INT64_ARB = 0x140E;
const GL_UNSIGNED_INT64_ARB = 0x140F;
const GL_CLEAR = 0x1500;
const GL_AND = 0x1501;
const GL_AND_REVERSE = 0x1502;
const GL_COPY = 0x1503;
const GL_NOOP = 0x1505;
const GL_XOR = 0x1506;
const GL_OR = 0x1507;
const GL_NOR = 0x1508;
const GL_EQUIV = 0x1509;
const GL_OR_REVERSE = 0x150B;
const GL_NAND = 0x150E;
const GL_SET = 0x150F;
const GL_EMISSION = 0x1600;
const GL_SHININESS = 0x1601;
const GL_AMBIENT_AND_DIFFUSE = 0x1602;
const GL_COLOR_INDEXES = 0x1603;
const GL_MODELVIEW = 0x1700;
const GL_MODELVIEW0_ARB = 0x1700;
const GL_MODELVIEW0_EXT = 0x1700;
const GL_PROJECTION = 0x1701;
const GL_TEXTURE = 0x1702;
const GL_COLOR = 0x1800;
const GL_COLOR_EXT = 0x1800;
const GL_DEPTH = 0x1801;
const GL_DEPTH_EXT = 0x1801;
const GL_STENCIL = 0x1802;
const GL_STENCIL_EXT = 0x1802;
const GL_COLOR_INDEX = 0x1900;
const GL_STENCIL_INDEX = 0x1901;
const GL_STENCIL_INDEX_OES = 0x1901;
const GL_DEPTH_COMPONENT = 0x1902;
const GL_RED = 0x1903;
const GL_RED_EXT = 0x1903;
const GL_GREEN = 0x1904;
const GL_BLUE = 0x1905;
const GL_ALPHA = 0x1906;
const GL_RGB = 0x1907;
const GL_RGBA = 0x1908;
const GL_LUMINANCE = 0x1909;
const GL_LUMINANCE_ALPHA = 0x190A;
const GL_BITMAP = 0x1A00;
const GL_POINT = 0x1B00;
const GL_LINE = 0x1B01;
const GL_FILL = 0x1B02;
const GL_RENDER = 0x1C00;
const GL_FEEDBACK = 0x1C01;
const GL_SELECT = 0x1C02;
const GL_FLAT = 0x1D00;
const GL_SMOOTH = 0x1D01;
const GL_KEEP = 0x1E00;
const GL_REPLACE = 0x1E01;
const GL_INCR = 0x1E02;
const GL_DECR = 0x1E03;
const GL_VENDOR = 0x1F00;
const GL_RENDERER = 0x1F01;
const GL_VERSION = 0x1F02;
const GL_EXTENSIONS = 0x1F03;
const GL_S = 0x2000;
const GL_T = 0x2001;
const GL_R = 0x2002;
const GL_Q = 0x2003;
const GL_MODULATE = 0x2100;
const GL_DECAL = 0x2101;
const GL_EYE_LINEAR = 0x2400;
const GL_OBJECT_LINEAR = 0x2401;
const GL_SPHERE_MAP = 0x2402;
const GL_TEXTURE_GEN_MODE = 0x2500;
const GL_TEXTURE_GEN_MODE_OES = 0x2500;
const GL_OBJECT_PLANE = 0x2501;
const GL_EYE_PLANE = 0x2502;
const GL_NEAREST = 0x2600;
const GL_LINEAR = 0x2601;
const GL_NEAREST_MIPMAP_NEAREST = 0x2700;
const GL_LINEAR_MIPMAP_NEAREST = 0x2701;
const GL_NEAREST_MIPMAP_LINEAR = 0x2702;
const GL_LINEAR_MIPMAP_LINEAR = 0x2703;
const GL_TEXTURE_MAG_FILTER = 0x2800;
const GL_TEXTURE_MIN_FILTER = 0x2801;
const GL_TEXTURE_WRAP_S = 0x2802;
const GL_TEXTURE_WRAP_T = 0x2803;
const GL_CLAMP = 0x2900;
const GL_REPEAT = 0x2901;
const GL_POLYGON_OFFSET_UNITS = 0x2A00;
const GL_POLYGON_OFFSET_POINT = 0x2A01;
const GL_POLYGON_OFFSET_LINE = 0x2A02;
const GL_R3_G3_B2 = 0x2A10;
const GL_V2F = 0x2A20;
const GL_V3F = 0x2A21;
const GL_C4UB_V2F = 0x2A22;
const GL_C4UB_V3F = 0x2A23;
const GL_C3F_V3F = 0x2A24;
const GL_N3F_V3F = 0x2A25;
const GL_C4F_N3F_V3F = 0x2A26;
const GL_T2F_V3F = 0x2A27;
const GL_T4F_V4F = 0x2A28;
const GL_T2F_C4UB_V3F = 0x2A29;
const GL_T2F_C3F_V3F = 0x2A2A;
const GL_T2F_N3F_V3F = 0x2A2B;
const GL_T2F_C4F_N3F_V3F = 0x2A2C;
const GL_T4F_C4F_N3F_V4F = 0x2A2D;
const GL_CLIP_PLANE0 = 0x3000;
const GL_CLIP_PLANE0_IMG = 0x3000;
const GL_CLIP_DISTANCE0 = 0x3000;
const GL_CLIP_DISTANCE0_EXT = 0x3000;
const GL_CLIP_DISTANCE0_APPLE = 0x3000;
const GL_CLIP_PLANE1 = 0x3001;
const GL_CLIP_PLANE1_IMG = 0x3001;
const GL_CLIP_DISTANCE1 = 0x3001;
const GL_CLIP_DISTANCE1_EXT = 0x3001;
const GL_CLIP_DISTANCE1_APPLE = 0x3001;
const GL_CLIP_PLANE2 = 0x3002;
const GL_CLIP_PLANE2_IMG = 0x3002;
const GL_CLIP_DISTANCE2 = 0x3002;
const GL_CLIP_DISTANCE2_EXT = 0x3002;
const GL_CLIP_DISTANCE2_APPLE = 0x3002;
const GL_CLIP_PLANE3 = 0x3003;
const GL_CLIP_PLANE3_IMG = 0x3003;
const GL_CLIP_DISTANCE3 = 0x3003;
const GL_CLIP_DISTANCE3_EXT = 0x3003;
const GL_CLIP_DISTANCE3_APPLE = 0x3003;
const GL_CLIP_PLANE4 = 0x3004;
const GL_CLIP_PLANE4_IMG = 0x3004;
const GL_CLIP_DISTANCE4 = 0x3004;
const GL_CLIP_DISTANCE4_EXT = 0x3004;
const GL_CLIP_DISTANCE4_APPLE = 0x3004;
const GL_CLIP_PLANE5 = 0x3005;
const GL_CLIP_PLANE5_IMG = 0x3005;
const GL_CLIP_DISTANCE5 = 0x3005;
const GL_CLIP_DISTANCE5_EXT = 0x3005;
const GL_CLIP_DISTANCE5_APPLE = 0x3005;
const GL_CLIP_DISTANCE6 = 0x3006;
const GL_CLIP_DISTANCE6_EXT = 0x3006;
const GL_CLIP_DISTANCE6_APPLE = 0x3006;
const GL_CLIP_DISTANCE7 = 0x3007;
const GL_CLIP_DISTANCE7_EXT = 0x3007;
const GL_CLIP_DISTANCE7_APPLE = 0x3007;
const GL_LIGHT0 = 0x4000;
const GL_LIGHT1 = 0x4001;
const GL_LIGHT2 = 0x4002;
const GL_LIGHT3 = 0x4003;
const GL_LIGHT4 = 0x4004;
const GL_LIGHT5 = 0x4005;
const GL_LIGHT6 = 0x4006;
const GL_LIGHT7 = 0x4007;
const GL_ABGR_EXT = 0x8000;
const GL_CONSTANT_COLOR = 0x8001;
const GL_CONSTANT_COLOR_EXT = 0x8001;
const GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
const GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
const GL_CONSTANT_ALPHA = 0x8003;
const GL_CONSTANT_ALPHA_EXT = 0x8003;
const GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
const GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
const GL_BLEND_COLOR = 0x8005;
const GL_BLEND_COLOR_EXT = 0x8005;
const GL_FUNC_ADD = 0x8006;
const GL_FUNC_ADD_EXT = 0x8006;
const GL_FUNC_ADD_OES = 0x8006;
const GL_MIN = 0x8007;
const GL_MIN_EXT = 0x8007;
const GL_MAX = 0x8008;
const GL_MAX_EXT = 0x8008;
const GL_BLEND_EQUATION = 0x8009;
const GL_BLEND_EQUATION_EXT = 0x8009;
const GL_BLEND_EQUATION_OES = 0x8009;
const GL_BLEND_EQUATION_RGB = 0x8009;
const GL_BLEND_EQUATION_RGB_EXT = 0x8009;
const GL_BLEND_EQUATION_RGB_OES = 0x8009;
const GL_FUNC_SUBTRACT = 0x800A;
const GL_FUNC_SUBTRACT_EXT = 0x800A;
const GL_FUNC_SUBTRACT_OES = 0x800A;
const GL_FUNC_REVERSE_SUBTRACT = 0x800B;
const GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;
const GL_FUNC_REVERSE_SUBTRACT_OES = 0x800B;
const GL_CMYK_EXT = 0x800C;
const GL_CMYKA_EXT = 0x800D;
const GL_PACK_CMYK_HINT_EXT = 0x800E;
const GL_UNPACK_CMYK_HINT_EXT = 0x800F;
const GL_SEPARABLE_2D = 0x8012;
const GL_SEPARABLE_2D_EXT = 0x8012;
const GL_REDUCE = 0x8016;
const GL_REDUCE_EXT = 0x8016;
const GL_HISTOGRAM = 0x8024;
const GL_HISTOGRAM_EXT = 0x8024;
const GL_PROXY_HISTOGRAM = 0x8025;
const GL_PROXY_HISTOGRAM_EXT = 0x8025;
const GL_HISTOGRAM_WIDTH = 0x8026;
const GL_HISTOGRAM_WIDTH_EXT = 0x8026;
const GL_HISTOGRAM_RED_SIZE = 0x8028;
const GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
const GL_HISTOGRAM_GREEN_SIZE = 0x8029;
const GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
const GL_HISTOGRAM_BLUE_SIZE = 0x802A;
const GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;
const GL_HISTOGRAM_ALPHA_SIZE = 0x802B;
const GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;
const GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;
const GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;
const GL_HISTOGRAM_SINK = 0x802D;
const GL_HISTOGRAM_SINK_EXT = 0x802D;
const GL_MINMAX = 0x802E;
const GL_MINMAX_EXT = 0x802E;
const GL_MINMAX_SINK = 0x8030;
const GL_MINMAX_SINK_EXT = 0x8030;
const GL_TABLE_TOO_LARGE_EXT = 0x8031;
const GL_TABLE_TOO_LARGE = 0x8031;
const GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
const GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
const GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
const GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
const GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
const GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
const GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
const GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
const GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
const GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;
const GL_POLYGON_OFFSET_EXT = 0x8037;
const GL_POLYGON_OFFSET_FILL = 0x8037;
const GL_POLYGON_OFFSET_FACTOR = 0x8038;
const GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
const GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;
const GL_RESCALE_NORMAL = 0x803A;
const GL_RESCALE_NORMAL_EXT = 0x803A;
const GL_ALPHA4 = 0x803B;
const GL_ALPHA4_EXT = 0x803B;
const GL_ALPHA8 = 0x803C;
const GL_ALPHA8_EXT = 0x803C;
const GL_ALPHA8_OES = 0x803C;
const GL_ALPHA12 = 0x803D;
const GL_ALPHA12_EXT = 0x803D;
const GL_ALPHA16 = 0x803E;
const GL_ALPHA16_EXT = 0x803E;
const GL_LUMINANCE4 = 0x803F;
const GL_LUMINANCE4_EXT = 0x803F;
const GL_LUMINANCE8 = 0x8040;
const GL_LUMINANCE8_EXT = 0x8040;
const GL_LUMINANCE8_OES = 0x8040;
const GL_LUMINANCE12 = 0x8041;
const GL_LUMINANCE12_EXT = 0x8041;
const GL_LUMINANCE16 = 0x8042;
const GL_LUMINANCE16_EXT = 0x8042;
const GL_LUMINANCE4_ALPHA4 = 0x8043;
const GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
const GL_LUMINANCE4_ALPHA4_OES = 0x8043;
const GL_LUMINANCE6_ALPHA2 = 0x8044;
const GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
const GL_LUMINANCE8_ALPHA8 = 0x8045;
const GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
const GL_LUMINANCE8_ALPHA8_OES = 0x8045;
const GL_LUMINANCE12_ALPHA4 = 0x8046;
const GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
const GL_LUMINANCE12_ALPHA12 = 0x8047;
const GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
const GL_LUMINANCE16_ALPHA16 = 0x8048;
const GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
const GL_INTENSITY = 0x8049;
const GL_INTENSITY_EXT = 0x8049;
const GL_INTENSITY4 = 0x804A;
const GL_INTENSITY4_EXT = 0x804A;
const GL_INTENSITY8 = 0x804B;
const GL_INTENSITY8_EXT = 0x804B;
const GL_INTENSITY12 = 0x804C;
const GL_INTENSITY12_EXT = 0x804C;
const GL_INTENSITY16 = 0x804D;
const GL_INTENSITY16_EXT = 0x804D;
const GL_RGB2_EXT = 0x804E;
const GL_RGB4 = 0x804F;
const GL_RGB4_EXT = 0x804F;
const GL_RGB5 = 0x8050;
const GL_RGB5_EXT = 0x8050;
const GL_RGB8 = 0x8051;
const GL_RGB8_EXT = 0x8051;
const GL_RGB8_OES = 0x8051;
const GL_RGB10 = 0x8052;
const GL_RGB10_EXT = 0x8052;
const GL_RGB12 = 0x8053;
const GL_RGB12_EXT = 0x8053;
const GL_RGB16 = 0x8054;
const GL_RGB16_EXT = 0x8054;
const GL_RGBA2 = 0x8055;
const GL_RGBA2_EXT = 0x8055;
const GL_RGBA4 = 0x8056;
const GL_RGBA4_EXT = 0x8056;
const GL_RGBA4_OES = 0x8056;
const GL_RGB5_A1 = 0x8057;
const GL_RGB5_A1_EXT = 0x8057;
const GL_RGB5_A1_OES = 0x8057;
const GL_RGBA8 = 0x8058;
const GL_RGBA8_EXT = 0x8058;
const GL_RGBA8_OES = 0x8058;
const GL_RGB10_A2 = 0x8059;
const GL_RGB10_A2_EXT = 0x8059;
const GL_RGBA12 = 0x805A;
const GL_RGBA12_EXT = 0x805A;
const GL_RGBA16 = 0x805B;
const GL_RGBA16_EXT = 0x805B;
const GL_TEXTURE_RED_SIZE = 0x805C;
const GL_TEXTURE_RED_SIZE_EXT = 0x805C;
const GL_TEXTURE_GREEN_SIZE = 0x805D;
const GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;
const GL_TEXTURE_BLUE_SIZE = 0x805E;
const GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;
const GL_TEXTURE_ALPHA_SIZE = 0x805F;
const GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;
const GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
const GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
const GL_TEXTURE_INTENSITY_SIZE = 0x8061;
const GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
const GL_REPLACE_EXT = 0x8062;
const GL_PROXY_TEXTURE_1D = 0x8063;
const GL_PROXY_TEXTURE_1D_EXT = 0x8063;
const GL_PROXY_TEXTURE_2D = 0x8064;
const GL_PROXY_TEXTURE_2D_EXT = 0x8064;
const GL_TEXTURE_TOO_LARGE_EXT = 0x8065;
const GL_TEXTURE_PRIORITY = 0x8066;
const GL_TEXTURE_PRIORITY_EXT = 0x8066;
const GL_TEXTURE_RESIDENT = 0x8067;
const GL_TEXTURE_RESIDENT_EXT = 0x8067;
const GL_TEXTURE_1D_BINDING_EXT = 0x8068;
const GL_TEXTURE_BINDING_1D = 0x8068;
const GL_TEXTURE_2D_BINDING_EXT = 0x8069;
const GL_TEXTURE_BINDING_2D = 0x8069;
const GL_TEXTURE_3D_BINDING_EXT = 0x806A;
const GL_TEXTURE_3D_BINDING_OES = 0x806A;
const GL_TEXTURE_BINDING_3D = 0x806A;
const GL_TEXTURE_BINDING_3D_OES = 0x806A;
const GL_PACK_SKIP_IMAGES = 0x806B;
const GL_PACK_SKIP_IMAGES_EXT = 0x806B;
const GL_PACK_IMAGE_HEIGHT = 0x806C;
const GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;
const GL_UNPACK_SKIP_IMAGES = 0x806D;
const GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;
const GL_UNPACK_IMAGE_HEIGHT = 0x806E;
const GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;
const GL_TEXTURE_3D = 0x806F;
const GL_TEXTURE_3D_EXT = 0x806F;
const GL_TEXTURE_3D_OES = 0x806F;
const GL_PROXY_TEXTURE_3D = 0x8070;
const GL_PROXY_TEXTURE_3D_EXT = 0x8070;
const GL_TEXTURE_DEPTH = 0x8071;
const GL_TEXTURE_DEPTH_EXT = 0x8071;
const GL_TEXTURE_WRAP_R = 0x8072;
const GL_TEXTURE_WRAP_R_EXT = 0x8072;
const GL_TEXTURE_WRAP_R_OES = 0x8072;
const GL_MAX_3D_TEXTURE_SIZE = 0x8073;
const GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;
const GL_MAX_3D_TEXTURE_SIZE_OES = 0x8073;
const GL_VERTEX_ARRAY = 0x8074;
const GL_VERTEX_ARRAY_EXT = 0x8074;
const GL_VERTEX_ARRAY_KHR = 0x8074;
const GL_NORMAL_ARRAY = 0x8075;
const GL_NORMAL_ARRAY_EXT = 0x8075;
const GL_COLOR_ARRAY = 0x8076;
const GL_COLOR_ARRAY_EXT = 0x8076;
const GL_INDEX_ARRAY = 0x8077;
const GL_INDEX_ARRAY_EXT = 0x8077;
const GL_TEXTURE_COORD_ARRAY = 0x8078;
const GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
const GL_EDGE_FLAG_ARRAY = 0x8079;
const GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
const GL_VERTEX_ARRAY_SIZE = 0x807A;
const GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;
const GL_VERTEX_ARRAY_TYPE = 0x807B;
const GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;
const GL_VERTEX_ARRAY_STRIDE = 0x807C;
const GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;
const GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;
const GL_NORMAL_ARRAY_TYPE = 0x807E;
const GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;
const GL_NORMAL_ARRAY_STRIDE = 0x807F;
const GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;
const GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
const GL_COLOR_ARRAY_SIZE = 0x8081;
const GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
const GL_COLOR_ARRAY_TYPE = 0x8082;
const GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
const GL_COLOR_ARRAY_STRIDE = 0x8083;
const GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
const GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
const GL_INDEX_ARRAY_TYPE = 0x8085;
const GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
const GL_INDEX_ARRAY_STRIDE = 0x8086;
const GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
const GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
const GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
const GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
const GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
const GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
const GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
const GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
const GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;
const GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;
const GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;
const GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;
const GL_VERTEX_ARRAY_POINTER = 0x808E;
const GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;
const GL_NORMAL_ARRAY_POINTER = 0x808F;
const GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;
const GL_COLOR_ARRAY_POINTER = 0x8090;
const GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
const GL_INDEX_ARRAY_POINTER = 0x8091;
const GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
const GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
const GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
const GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
const GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;
const GL_INTERLACE_SGIX = 0x8094;
const GL_DETAIL_TEXTURE_2D_SGIS = 0x8095;
const GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096;
const GL_LINEAR_DETAIL_SGIS = 0x8097;
const GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098;
const GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099;
const GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A;
const GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B;
const GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C;
const GL_MULTISAMPLE = 0x809D;
const GL_MULTISAMPLE_ARB = 0x809D;
const GL_MULTISAMPLE_EXT = 0x809D;
const GL_MULTISAMPLE_SGIS = 0x809D;
const GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E;
const GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;
const GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E;
const GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
const GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F;
const GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;
const GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F;
const GL_SAMPLE_COVERAGE = 0x80A0;
const GL_SAMPLE_COVERAGE_ARB = 0x80A0;
const GL_SAMPLE_MASK_EXT = 0x80A0;
const GL_SAMPLE_MASK_SGIS = 0x80A0;
const GL_1PASS_EXT = 0x80A1;
const GL_1PASS_SGIS = 0x80A1;
const GL_2PASS_0_EXT = 0x80A2;
const GL_2PASS_0_SGIS = 0x80A2;
const GL_2PASS_1_EXT = 0x80A3;
const GL_2PASS_1_SGIS = 0x80A3;
const GL_4PASS_0_EXT = 0x80A4;
const GL_4PASS_0_SGIS = 0x80A4;
const GL_4PASS_1_EXT = 0x80A5;
const GL_4PASS_1_SGIS = 0x80A5;
const GL_4PASS_2_EXT = 0x80A6;
const GL_4PASS_2_SGIS = 0x80A6;
const GL_4PASS_3_EXT = 0x80A7;
const GL_4PASS_3_SGIS = 0x80A7;
const GL_SAMPLE_BUFFERS = 0x80A8;
const GL_SAMPLE_BUFFERS_ARB = 0x80A8;
const GL_SAMPLE_BUFFERS_EXT = 0x80A8;
const GL_SAMPLE_BUFFERS_SGIS = 0x80A8;
const GL_SAMPLES = 0x80A9;
const GL_SAMPLES_ARB = 0x80A9;
const GL_SAMPLES_EXT = 0x80A9;
const GL_SAMPLES_SGIS = 0x80A9;
const GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
const GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA;
const GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;
const GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA;
const GL_SAMPLE_PATTERN_EXT = 0x80AC;
const GL_SAMPLE_PATTERN_SGIS = 0x80AC;
const GL_LINEAR_SHARPEN_SGIS = 0x80AD;
const GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE;
const GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF;
const GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0;
const GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC;
const GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD;
const GL_SHADOW_AMBIENT_SGIX = 0x80BF;
const GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF;
const GL_BLEND_DST_RGB = 0x80C8;
const GL_BLEND_DST_RGB_EXT = 0x80C8;
const GL_BLEND_DST_RGB_OES = 0x80C8;
const GL_BLEND_SRC_RGB = 0x80C9;
const GL_BLEND_SRC_RGB_EXT = 0x80C9;
const GL_BLEND_SRC_RGB_OES = 0x80C9;
const GL_BLEND_DST_ALPHA = 0x80CA;
const GL_BLEND_DST_ALPHA_EXT = 0x80CA;
const GL_BLEND_DST_ALPHA_OES = 0x80CA;
const GL_BLEND_SRC_ALPHA = 0x80CB;
const GL_BLEND_SRC_ALPHA_EXT = 0x80CB;
const GL_BLEND_SRC_ALPHA_OES = 0x80CB;
const GL_422_EXT = 0x80CC;
const GL_422_REV_EXT = 0x80CD;
const GL_422_AVERAGE_EXT = 0x80CE;
const GL_422_REV_AVERAGE_EXT = 0x80CF;
const GL_COLOR_TABLE = 0x80D0;
const GL_COLOR_TABLE_SGI = 0x80D0;
const GL_PROXY_COLOR_TABLE = 0x80D3;
const GL_PROXY_COLOR_TABLE_SGI = 0x80D3;
const GL_COLOR_TABLE_SCALE = 0x80D6;
const GL_COLOR_TABLE_SCALE_SGI = 0x80D6;
const GL_COLOR_TABLE_BIAS = 0x80D7;
const GL_COLOR_TABLE_BIAS_SGI = 0x80D7;
const GL_COLOR_TABLE_WIDTH = 0x80D9;
const GL_COLOR_TABLE_WIDTH_SGI = 0x80D9;
const GL_COLOR_TABLE_RED_SIZE = 0x80DA;
const GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA;
const GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;
const GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB;
const GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;
const GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC;
const GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;
const GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD;
const GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
const GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE;
const GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
const GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF;
const GL_BGR = 0x80E0;
const GL_BGR_EXT = 0x80E0;
const GL_BGRA = 0x80E1;
const GL_BGRA_EXT = 0x80E1;
const GL_BGRA_IMG = 0x80E1;
const GL_COLOR_INDEX1_EXT = 0x80E2;
const GL_COLOR_INDEX2_EXT = 0x80E3;
const GL_COLOR_INDEX4_EXT = 0x80E4;
const GL_COLOR_INDEX8_EXT = 0x80E5;
const GL_COLOR_INDEX12_EXT = 0x80E6;
const GL_COLOR_INDEX16_EXT = 0x80E7;
const GL_MAX_ELEMENTS_VERTICES = 0x80E8;
const GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8;
const GL_MAX_ELEMENTS_INDICES = 0x80E9;
const GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9;
const GL_PHONG_WIN = 0x80EA;
const GL_PHONG_HINT_WIN = 0x80EB;
const GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC;
const GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;
const GL_PARAMETER_BUFFER = 0x80EE;
const GL_PARAMETER_BUFFER_ARB = 0x80EE;
const GL_PARAMETER_BUFFER_BINDING = 0x80EF;
const GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF;
const GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;
const GL_DUAL_ALPHA4_SGIS = 0x8110;
const GL_DUAL_ALPHA8_SGIS = 0x8111;
const GL_DUAL_ALPHA12_SGIS = 0x8112;
const GL_DUAL_ALPHA16_SGIS = 0x8113;
const GL_DUAL_LUMINANCE4_SGIS = 0x8114;
const GL_DUAL_LUMINANCE8_SGIS = 0x8115;
const GL_DUAL_LUMINANCE12_SGIS = 0x8116;
const GL_DUAL_LUMINANCE16_SGIS = 0x8117;
const GL_DUAL_INTENSITY4_SGIS = 0x8118;
const GL_DUAL_INTENSITY8_SGIS = 0x8119;
const GL_DUAL_INTENSITY12_SGIS = 0x811A;
const GL_DUAL_INTENSITY16_SGIS = 0x811B;
const GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C;
const GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D;
const GL_QUAD_ALPHA4_SGIS = 0x811E;
const GL_QUAD_ALPHA8_SGIS = 0x811F;
const GL_QUAD_LUMINANCE4_SGIS = 0x8120;
const GL_QUAD_LUMINANCE8_SGIS = 0x8121;
const GL_QUAD_INTENSITY4_SGIS = 0x8122;
const GL_QUAD_INTENSITY8_SGIS = 0x8123;
const GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124;
const GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125;
const GL_POINT_SIZE_MIN = 0x8126;
const GL_POINT_SIZE_MIN_ARB = 0x8126;
const GL_POINT_SIZE_MIN_EXT = 0x8126;
const GL_POINT_SIZE_MIN_SGIS = 0x8126;
const GL_POINT_SIZE_MAX = 0x8127;
const GL_POINT_SIZE_MAX_ARB = 0x8127;
const GL_POINT_SIZE_MAX_EXT = 0x8127;
const GL_POINT_SIZE_MAX_SGIS = 0x8127;
const GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
const GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128;
const GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;
const GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128;
const GL_DISTANCE_ATTENUATION_EXT = 0x8129;
const GL_DISTANCE_ATTENUATION_SGIS = 0x8129;
const GL_POINT_DISTANCE_ATTENUATION = 0x8129;
const GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;
const GL_FOG_FUNC_SGIS = 0x812A;
const GL_FOG_FUNC_POINTS_SGIS = 0x812B;
const GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C;
const GL_CLAMP_TO_BORDER = 0x812D;
const GL_CLAMP_TO_BORDER_ARB = 0x812D;
const GL_CLAMP_TO_BORDER_EXT = 0x812D;
const GL_CLAMP_TO_BORDER_SGIS = 0x812D;
const GL_CLAMP_TO_BORDER_OES = 0x812D;
const GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E;
const GL_CLAMP_TO_EDGE = 0x812F;
const GL_CLAMP_TO_EDGE_SGIS = 0x812F;
const GL_PACK_SKIP_VOLUMES_SGIS = 0x8130;
const GL_PACK_IMAGE_DEPTH_SGIS = 0x8131;
const GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132;
const GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133;
const GL_TEXTURE_4D_SGIS = 0x8134;
const GL_PROXY_TEXTURE_4D_SGIS = 0x8135;
const GL_TEXTURE_4DSIZE_SGIS = 0x8136;
const GL_TEXTURE_WRAP_Q_SGIS = 0x8137;
const GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138;
const GL_PIXEL_TEX_GEN_SGIX = 0x8139;
const GL_TEXTURE_MIN_LOD = 0x813A;
const GL_TEXTURE_MIN_LOD_SGIS = 0x813A;
const GL_TEXTURE_MAX_LOD = 0x813B;
const GL_TEXTURE_MAX_LOD_SGIS = 0x813B;
const GL_TEXTURE_BASE_LEVEL = 0x813C;
const GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C;
const GL_TEXTURE_MAX_LEVEL = 0x813D;
const GL_TEXTURE_MAX_LEVEL_APPLE = 0x813D;
const GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D;
const GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E;
const GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F;
const GL_PIXEL_TILE_WIDTH_SGIX = 0x8140;
const GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141;
const GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142;
const GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143;
const GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144;
const GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145;
const GL_FILTER4_SGIS = 0x8146;
const GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147;
const GL_SPRITE_SGIX = 0x8148;
const GL_SPRITE_MODE_SGIX = 0x8149;
const GL_SPRITE_AXIS_SGIX = 0x814A;
const GL_SPRITE_TRANSLATION_SGIX = 0x814B;
const GL_SPRITE_AXIAL_SGIX = 0x814C;
const GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D;
const GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E;
const GL_TEXTURE_4D_BINDING_SGIS = 0x814F;
const GL_IGNORE_BORDER_HP = 0x8150;
const GL_CONSTANT_BORDER = 0x8151;
const GL_CONSTANT_BORDER_HP = 0x8151;
const GL_REPLICATE_BORDER = 0x8153;
const GL_REPLICATE_BORDER_HP = 0x8153;
const GL_IMAGE_SCALE_X_HP = 0x8155;
const GL_IMAGE_SCALE_Y_HP = 0x8156;
const GL_IMAGE_TRANSLATE_X_HP = 0x8157;
const GL_IMAGE_TRANSLATE_Y_HP = 0x8158;
const GL_IMAGE_ROTATE_ANGLE_HP = 0x8159;
const GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A;
const GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B;
const GL_IMAGE_MAG_FILTER_HP = 0x815C;
const GL_IMAGE_MIN_FILTER_HP = 0x815D;
const GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E;
const GL_CUBIC_HP = 0x815F;
const GL_AVERAGE_HP = 0x8160;
const GL_IMAGE_TRANSFORM_2D_HP = 0x8161;
const GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162;
const GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163;
const GL_OCCLUSION_TEST_HP = 0x8165;
const GL_OCCLUSION_TEST_RESULT_HP = 0x8166;
const GL_TEXTURE_LIGHTING_MODE_HP = 0x8167;
const GL_TEXTURE_POST_SPECULAR_HP = 0x8168;
const GL_TEXTURE_PRE_SPECULAR_HP = 0x8169;
const GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170;
const GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171;
const GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172;
const GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173;
const GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174;
const GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175;
const GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176;
const GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177;
const GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178;
const GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179;
const GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A;
const GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B;
const GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C;
const GL_REFERENCE_PLANE_SGIX = 0x817D;
const GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E;
const GL_IR_INSTRUMENT1_SGIX = 0x817F;
const GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180;
const GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181;
const GL_LIST_PRIORITY_SGIX = 0x8182;
const GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183;
const GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184;
const GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185;
const GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186;
const GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189;
const GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A;
const GL_FRAMEZOOM_SGIX = 0x818B;
const GL_FRAMEZOOM_FACTOR_SGIX = 0x818C;
const GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D;
const GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E;
const GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F;
const GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190;
const GL_GENERATE_MIPMAP = 0x8191;
const GL_GENERATE_MIPMAP_SGIS = 0x8191;
const GL_GENERATE_MIPMAP_HINT = 0x8192;
const GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192;
const GL_FOG_OFFSET_SGIX = 0x8198;
const GL_FOG_OFFSET_VALUE_SGIX = 0x8199;
const GL_TEXTURE_COMPARE_SGIX = 0x819A;
const GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B;
const GL_TEXTURE_LEQUAL_R_SGIX = 0x819C;
const GL_TEXTURE_GEQUAL_R_SGIX = 0x819D;
const GL_DEPTH_COMPONENT16 = 0x81A5;
const GL_DEPTH_COMPONENT16_ARB = 0x81A5;
const GL_DEPTH_COMPONENT16_OES = 0x81A5;
const GL_DEPTH_COMPONENT16_SGIX = 0x81A5;
const GL_DEPTH_COMPONENT24 = 0x81A6;
const GL_DEPTH_COMPONENT24_ARB = 0x81A6;
const GL_DEPTH_COMPONENT24_OES = 0x81A6;
const GL_DEPTH_COMPONENT24_SGIX = 0x81A6;
const GL_DEPTH_COMPONENT32 = 0x81A7;
const GL_DEPTH_COMPONENT32_ARB = 0x81A7;
const GL_DEPTH_COMPONENT32_OES = 0x81A7;
const GL_DEPTH_COMPONENT32_SGIX = 0x81A7;
const GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;
const GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;
const GL_CULL_VERTEX_EXT = 0x81AA;
const GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB;
const GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;
const GL_IUI_V2F_EXT = 0x81AD;
const GL_IUI_V3F_EXT = 0x81AE;
const GL_IUI_N3F_V2F_EXT = 0x81AF;
const GL_IUI_N3F_V3F_EXT = 0x81B0;
const GL_T2F_IUI_V2F_EXT = 0x81B1;
const GL_T2F_IUI_V3F_EXT = 0x81B2;
const GL_T2F_IUI_N3F_V2F_EXT = 0x81B3;
const GL_T2F_IUI_N3F_V3F_EXT = 0x81B4;
const GL_INDEX_TEST_EXT = 0x81B5;
const GL_INDEX_TEST_FUNC_EXT = 0x81B6;
const GL_INDEX_TEST_REF_EXT = 0x81B7;
const GL_YCRCB_422_SGIX = 0x81BB;
const GL_YCRCB_444_SGIX = 0x81BC;
const GL_WRAP_BORDER_SUN = 0x81D4;
const GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5;
const GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6;
const GL_TRIANGLE_LIST_SUN = 0x81D7;
const GL_REPLACEMENT_CODE_SUN = 0x81D8;
const GL_GLOBAL_ALPHA_SUN = 0x81D9;
const GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA;
const GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF;
const GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0;
const GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1;
const GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2;
const GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3;
const GL_EYE_POINT_SGIS = 0x81F4;
const GL_OBJECT_POINT_SGIS = 0x81F5;
const GL_EYE_LINE_SGIS = 0x81F6;
const GL_OBJECT_LINE_SGIS = 0x81F7;
const GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
const GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;
const GL_SINGLE_COLOR = 0x81F9;
const GL_SINGLE_COLOR_EXT = 0x81F9;
const GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
const GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;
const GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;
const GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200;
const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210;
const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;
const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
const GL_FRAMEBUFFER_DEFAULT = 0x8218;
const GL_FRAMEBUFFER_UNDEFINED = 0x8219;
const GL_FRAMEBUFFER_UNDEFINED_OES = 0x8219;
const GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
const GL_MAJOR_VERSION = 0x821B;
const GL_MINOR_VERSION = 0x821C;
const GL_NUM_EXTENSIONS = 0x821D;
const GL_CONTEXT_FLAGS = 0x821E;
const GL_BUFFER_IMMUTABLE_STORAGE = 0x821F;
const GL_BUFFER_IMMUTABLE_STORAGE_EXT = 0x821F;
const GL_BUFFER_STORAGE_FLAGS = 0x8220;
const GL_BUFFER_STORAGE_FLAGS_EXT = 0x8220;
const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221;
const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = 0x8221;
const GL_INDEX = 0x8222;
const GL_COMPRESSED_RED = 0x8225;
const GL_COMPRESSED_RG = 0x8226;
const GL_RG = 0x8227;
const GL_RG_EXT = 0x8227;
const GL_RG_INTEGER = 0x8228;
const GL_R8 = 0x8229;
const GL_R8_EXT = 0x8229;
const GL_R16 = 0x822A;
const GL_R16_EXT = 0x822A;
const GL_RG8 = 0x822B;
const GL_RG8_EXT = 0x822B;
const GL_RG16 = 0x822C;
const GL_RG16_EXT = 0x822C;
const GL_R16F = 0x822D;
const GL_R16F_EXT = 0x822D;
const GL_R32F = 0x822E;
const GL_R32F_EXT = 0x822E;
const GL_RG16F = 0x822F;
const GL_RG16F_EXT = 0x822F;
const GL_RG32F = 0x8230;
const GL_RG32F_EXT = 0x8230;
const GL_R8I = 0x8231;
const GL_R8UI = 0x8232;
const GL_R16I = 0x8233;
const GL_R16UI = 0x8234;
const GL_R32I = 0x8235;
const GL_R32UI = 0x8236;
const GL_RG8I = 0x8237;
const GL_RG8UI = 0x8238;
const GL_RG16I = 0x8239;
const GL_RG16UI = 0x823A;
const GL_RG32I = 0x823B;
const GL_RG32UI = 0x823C;
const GL_SYNC_CL_EVENT_ARB = 0x8240;
const GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241;
const GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242;
const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242;
const GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = 0x8242;
const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243;
const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243;
const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = 0x8243;
const GL_DEBUG_CALLBACK_FUNCTION = 0x8244;
const GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244;
const GL_DEBUG_CALLBACK_FUNCTION_KHR = 0x8244;
const GL_DEBUG_CALLBACK_USER_PARAM = 0x8245;
const GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245;
const GL_DEBUG_CALLBACK_USER_PARAM_KHR = 0x8245;
const GL_DEBUG_SOURCE_API = 0x8246;
const GL_DEBUG_SOURCE_API_ARB = 0x8246;
const GL_DEBUG_SOURCE_API_KHR = 0x8246;
const GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247;
const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247;
const GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = 0x8247;
const GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248;
const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248;
const GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = 0x8248;
const GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249;
const GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249;
const GL_DEBUG_SOURCE_THIRD_PARTY_KHR = 0x8249;
const GL_DEBUG_SOURCE_APPLICATION = 0x824A;
const GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A;
const GL_DEBUG_SOURCE_APPLICATION_KHR = 0x824A;
const GL_DEBUG_SOURCE_OTHER = 0x824B;
const GL_DEBUG_SOURCE_OTHER_ARB = 0x824B;
const GL_DEBUG_SOURCE_OTHER_KHR = 0x824B;
const GL_DEBUG_TYPE_ERROR = 0x824C;
const GL_DEBUG_TYPE_ERROR_ARB = 0x824C;
const GL_DEBUG_TYPE_ERROR_KHR = 0x824C;
const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D;
const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D;
const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = 0x824D;
const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E;
const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E;
const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = 0x824E;
const GL_DEBUG_TYPE_PORTABILITY = 0x824F;
const GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F;
const GL_DEBUG_TYPE_PORTABILITY_KHR = 0x824F;
const GL_DEBUG_TYPE_PERFORMANCE = 0x8250;
const GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250;
const GL_DEBUG_TYPE_PERFORMANCE_KHR = 0x8250;
const GL_DEBUG_TYPE_OTHER = 0x8251;
const GL_DEBUG_TYPE_OTHER_ARB = 0x8251;
const GL_DEBUG_TYPE_OTHER_KHR = 0x8251;
const GL_LOSE_CONTEXT_ON_RESET = 0x8252;
const GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
const GL_LOSE_CONTEXT_ON_RESET_EXT = 0x8252;
const GL_LOSE_CONTEXT_ON_RESET_KHR = 0x8252;
const GL_GUILTY_CONTEXT_RESET = 0x8253;
const GL_GUILTY_CONTEXT_RESET_ARB = 0x8253;
const GL_GUILTY_CONTEXT_RESET_EXT = 0x8253;
const GL_GUILTY_CONTEXT_RESET_KHR = 0x8253;
const GL_INNOCENT_CONTEXT_RESET = 0x8254;
const GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254;
const GL_INNOCENT_CONTEXT_RESET_EXT = 0x8254;
const GL_INNOCENT_CONTEXT_RESET_KHR = 0x8254;
const GL_UNKNOWN_CONTEXT_RESET = 0x8255;
const GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255;
const GL_UNKNOWN_CONTEXT_RESET_EXT = 0x8255;
const GL_UNKNOWN_CONTEXT_RESET_KHR = 0x8255;
const GL_RESET_NOTIFICATION_STRATEGY = 0x8256;
const GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
const GL_RESET_NOTIFICATION_STRATEGY_EXT = 0x8256;
const GL_RESET_NOTIFICATION_STRATEGY_KHR = 0x8256;
const GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
const GL_PROGRAM_SEPARABLE = 0x8258;
const GL_PROGRAM_SEPARABLE_EXT = 0x8258;
const GL_ACTIVE_PROGRAM = 0x8259;
const GL_ACTIVE_PROGRAM_EXT = 0x8B8D;
const GL_PROGRAM_PIPELINE_BINDING = 0x825A;
const GL_PROGRAM_PIPELINE_BINDING_EXT = 0x825A;
const GL_MAX_VIEWPORTS = 0x825B;
const GL_MAX_VIEWPORTS_OES = 0x825B;
const GL_VIEWPORT_SUBPIXEL_BITS = 0x825C;
const GL_VIEWPORT_SUBPIXEL_BITS_EXT = 0x825C;
const GL_VIEWPORT_SUBPIXEL_BITS_OES = 0x825C;
const GL_VIEWPORT_BOUNDS_RANGE = 0x825D;
const GL_VIEWPORT_BOUNDS_RANGE_EXT = 0x825D;
const GL_VIEWPORT_BOUNDS_RANGE_OES = 0x825D;
const GL_LAYER_PROVOKING_VERTEX = 0x825E;
const GL_LAYER_PROVOKING_VERTEX_EXT = 0x825E;
const GL_LAYER_PROVOKING_VERTEX_OES = 0x825E;
const GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT = 0x825F;
const GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES = 0x825F;
const GL_UNDEFINED_VERTEX = 0x8260;
const GL_UNDEFINED_VERTEX_EXT = 0x8260;
const GL_UNDEFINED_VERTEX_OES = 0x8260;
const GL_NO_RESET_NOTIFICATION = 0x8261;
const GL_NO_RESET_NOTIFICATION_ARB = 0x8261;
const GL_NO_RESET_NOTIFICATION_EXT = 0x8261;
const GL_NO_RESET_NOTIFICATION_KHR = 0x8261;
const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
const GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
const GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
const GL_COMPUTE_WORK_GROUP_SIZE = 0x8267;
const GL_DEBUG_TYPE_MARKER = 0x8268;
const GL_DEBUG_TYPE_MARKER_KHR = 0x8268;
const GL_DEBUG_TYPE_PUSH_GROUP = 0x8269;
const GL_DEBUG_TYPE_PUSH_GROUP_KHR = 0x8269;
const GL_DEBUG_TYPE_POP_GROUP = 0x826A;
const GL_DEBUG_TYPE_POP_GROUP_KHR = 0x826A;
const GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B;
const GL_DEBUG_SEVERITY_NOTIFICATION_KHR = 0x826B;
const GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C;
const GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826C;
const GL_DEBUG_GROUP_STACK_DEPTH = 0x826D;
const GL_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826D;
const GL_MAX_UNIFORM_LOCATIONS = 0x826E;
const GL_MAX_WIDTH = 0x827E;
const GL_MAX_HEIGHT = 0x827F;
const GL_MAX_DEPTH = 0x8280;
const GL_MAX_LAYERS = 0x8281;
const GL_MAX_COMBINED_DIMENSIONS = 0x8282;
const GL_COLOR_COMPONENTS = 0x8283;
const GL_DEPTH_COMPONENTS = 0x8284;
const GL_STENCIL_COMPONENTS = 0x8285;
const GL_COLOR_RENDERABLE = 0x8286;
const GL_DEPTH_RENDERABLE = 0x8287;
const GL_STENCIL_RENDERABLE = 0x8288;
const GL_FRAMEBUFFER_RENDERABLE = 0x8289;
const GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A;
const GL_FRAMEBUFFER_BLEND = 0x828B;
const GL_READ_PIXELS = 0x828C;
const GL_READ_PIXELS_TYPE = 0x828E;
const GL_TEXTURE_IMAGE_TYPE = 0x8290;
const GL_GET_TEXTURE_IMAGE_TYPE = 0x8292;
const GL_MIPMAP = 0x8293;
const GL_MANUAL_GENERATE_MIPMAP = 0x8294;
const GL_AUTO_GENERATE_MIPMAP = 0x8295;
const GL_COLOR_ENCODING = 0x8296;
const GL_SRGB_READ = 0x8297;
const GL_SRGB_WRITE = 0x8298;
const GL_SRGB_DECODE_ARB = 0x8299;
const GL_FILTER = 0x829A;
const GL_VERTEX_TEXTURE = 0x829B;
const GL_TESS_CONTROL_TEXTURE = 0x829C;
const GL_TESS_EVALUATION_TEXTURE = 0x829D;
const GL_GEOMETRY_TEXTURE = 0x829E;
const GL_FRAGMENT_TEXTURE = 0x829F;
const GL_COMPUTE_TEXTURE = 0x82A0;
const GL_TEXTURE_SHADOW = 0x82A1;
const GL_TEXTURE_GATHER = 0x82A2;
const GL_TEXTURE_GATHER_SHADOW = 0x82A3;
const GL_SHADER_IMAGE_LOAD = 0x82A4;
const GL_SHADER_IMAGE_STORE = 0x82A5;
const GL_SHADER_IMAGE_ATOMIC = 0x82A6;
const GL_IMAGE_TEXEL_SIZE = 0x82A7;
const GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8;
const GL_IMAGE_PIXEL_TYPE = 0x82AA;
const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC;
const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD;
const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE;
const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF;
const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1;
const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2;
const GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3;
const GL_CLEAR_BUFFER = 0x82B4;
const GL_TEXTURE_VIEW = 0x82B5;
const GL_VIEW_COMPATIBILITY_CLASS = 0x82B6;
const GL_FULL_SUPPORT = 0x82B7;
const GL_CAVEAT_SUPPORT = 0x82B8;
const GL_IMAGE_CLASS_4_X_32 = 0x82B9;
const GL_IMAGE_CLASS_2_X_32 = 0x82BA;
const GL_IMAGE_CLASS_1_X_32 = 0x82BB;
const GL_IMAGE_CLASS_4_X_16 = 0x82BC;
const GL_IMAGE_CLASS_2_X_16 = 0x82BD;
const GL_IMAGE_CLASS_1_X_16 = 0x82BE;
const GL_IMAGE_CLASS_4_X_8 = 0x82BF;
const GL_IMAGE_CLASS_2_X_8 = 0x82C0;
const GL_IMAGE_CLASS_1_X_8 = 0x82C1;
const GL_IMAGE_CLASS_11_11_10 = 0x82C2;
const GL_IMAGE_CLASS_10_10_10_2 = 0x82C3;
const GL_VIEW_CLASS_128_BITS = 0x82C4;
const GL_VIEW_CLASS_96_BITS = 0x82C5;
const GL_VIEW_CLASS_64_BITS = 0x82C6;
const GL_VIEW_CLASS_48_BITS = 0x82C7;
const GL_VIEW_CLASS_32_BITS = 0x82C8;
const GL_VIEW_CLASS_24_BITS = 0x82C9;
const GL_VIEW_CLASS_16_BITS = 0x82CA;
const GL_VIEW_CLASS_8_BITS = 0x82CB;
const GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC;
const GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD;
const GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE;
const GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF;
const GL_VIEW_CLASS_RGTC1_RED = 0x82D0;
const GL_VIEW_CLASS_RGTC2_RG = 0x82D1;
const GL_VIEW_CLASS_BPTC_UNORM = 0x82D2;
const GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3;
const GL_VERTEX_ATTRIB_BINDING = 0x82D4;
const GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
const GL_VERTEX_BINDING_DIVISOR = 0x82D6;
const GL_VERTEX_BINDING_OFFSET = 0x82D7;
const GL_VERTEX_BINDING_STRIDE = 0x82D8;
const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
const GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
const GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB;
const GL_TEXTURE_VIEW_MIN_LEVEL_EXT = 0x82DB;
const GL_TEXTURE_VIEW_MIN_LEVEL_OES = 0x82DB;
const GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC;
const GL_TEXTURE_VIEW_NUM_LEVELS_EXT = 0x82DC;
const GL_TEXTURE_VIEW_NUM_LEVELS_OES = 0x82DC;
const GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD;
const GL_TEXTURE_VIEW_MIN_LAYER_EXT = 0x82DD;
const GL_TEXTURE_VIEW_MIN_LAYER_OES = 0x82DD;
const GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE;
const GL_TEXTURE_VIEW_NUM_LAYERS_EXT = 0x82DE;
const GL_TEXTURE_VIEW_NUM_LAYERS_OES = 0x82DE;
const GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
const GL_BUFFER = 0x82E0;
const GL_BUFFER_KHR = 0x82E0;
const GL_SHADER = 0x82E1;
const GL_SHADER_KHR = 0x82E1;
const GL_PROGRAM = 0x82E2;
const GL_PROGRAM_KHR = 0x82E2;
const GL_QUERY = 0x82E3;
const GL_QUERY_KHR = 0x82E3;
const GL_PROGRAM_PIPELINE = 0x82E4;
const GL_PROGRAM_PIPELINE_KHR = 0x82E4;
const GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
const GL_SAMPLER = 0x82E6;
const GL_SAMPLER_KHR = 0x82E6;
const GL_DISPLAY_LIST = 0x82E7;
const GL_MAX_LABEL_LENGTH = 0x82E8;
const GL_MAX_LABEL_LENGTH_KHR = 0x82E8;
const GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
const GL_QUERY_TARGET = 0x82EA;
const GL_TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC;
const GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC;
const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED;
const GL_VERTICES_SUBMITTED = 0x82EE;
const GL_VERTICES_SUBMITTED_ARB = 0x82EE;
const GL_PRIMITIVES_SUBMITTED = 0x82EF;
const GL_PRIMITIVES_SUBMITTED_ARB = 0x82EF;
const GL_TESS_CONTROL_SHADER_PATCHES = 0x82F1;
const GL_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1;
const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3;
const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3;
const GL_CLIPPING_INPUT_PRIMITIVES = 0x82F6;
const GL_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6;
const GL_CLIPPING_OUTPUT_PRIMITIVES = 0x82F7;
const GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7;
const GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8;
const GL_MAX_CULL_DISTANCES = 0x82F9;
const GL_MAX_CULL_DISTANCES_EXT = 0x82F9;
const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA;
const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT = 0x82FA;
const GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB;
const GL_CONTEXT_RELEASE_BEHAVIOR_KHR = 0x82FB;
const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC;
const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = 0x82FC;
const GL_ROBUST_GPU_TIMEOUT_MS_KHR = 0x82FD;
const GL_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310;
const GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311;
const GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312;
const GL_FRAGMENTS_INSTRUMENT_SGIX = 0x8313;
const GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = 0x8314;
const GL_FRAGMENTS_INSTRUMENT_MAX_SGIX = 0x8315;
const GL_YCRCB_SGIX = 0x8318;
const GL_YCRCBA_SGIX = 0x8319;
const GL_UNPACK_COMPRESSED_SIZE_SGIX = 0x831A;
const GL_PACK_MAX_COMPRESSED_SIZE_SGIX = 0x831B;
const GL_PACK_COMPRESSED_SIZE_SGIX = 0x831C;
const GL_SLIM8U_SGIX = 0x831D;
const GL_SLIM10U_SGIX = 0x831E;
const GL_SLIM12S_SGIX = 0x831F;
const GL_ALPHA_MIN_SGIX = 0x8320;
const GL_ALPHA_MAX_SGIX = 0x8321;
const GL_SCALEBIAS_HINT_SGIX = 0x8322;
const GL_ASYNC_MARKER_SGIX = 0x8329;
const GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B;
const GL_ASYNC_HISTOGRAM_SGIX = 0x832C;
const GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D;
const GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;
const GL_PIXEL_MAG_FILTER_EXT = 0x8331;
const GL_PIXEL_MIN_FILTER_EXT = 0x8332;
const GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;
const GL_CUBIC_EXT = 0x8334;
const GL_AVERAGE_EXT = 0x8335;
const GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;
const GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;
const GL_FRAGMENT_NORMAL_EXT = 0x834A;
const GL_FRAGMENT_COLOR_EXT = 0x834C;
const GL_ATTENUATION_EXT = 0x834D;
const GL_SHADOW_ATTENUATION_EXT = 0x834E;
const GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;
const GL_TEXTURE_LIGHT_EXT = 0x8350;
const GL_PIXEL_TEXTURE_SGIS = 0x8353;
const GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354;
const GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355;
const GL_PIXEL_GROUP_COLOR_SGIS = 0x8356;
const GL_LINE_QUALITY_HINT_SGIX = 0x835B;
const GL_ASYNC_TEX_IMAGE_SGIX = 0x835C;
const GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D;
const GL_ASYNC_READ_PIXELS_SGIX = 0x835E;
const GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F;
const GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360;
const GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361;
const GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
const GL_UNSIGNED_BYTE_2_3_3_REV_EXT = 0x8362;
const GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
const GL_UNSIGNED_SHORT_5_6_5_EXT = 0x8363;
const GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
const GL_UNSIGNED_SHORT_5_6_5_REV_EXT = 0x8364;
const GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
const GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = 0x8365;
const GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 0x8365;
const GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
const GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = 0x8366;
const GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
const GL_UNSIGNED_INT_8_8_8_8_REV_EXT = 0x8367;
const GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
const GL_UNSIGNED_INT_2_10_10_10_REV_EXT = 0x8368;
const GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369;
const GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A;
const GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B;
const GL_MIRRORED_REPEAT = 0x8370;
const GL_MIRRORED_REPEAT_ARB = 0x8370;
const GL_MIRRORED_REPEAT_IBM = 0x8370;
const GL_MIRRORED_REPEAT_OES = 0x8370;
const GL_RGB_S3TC = 0x83A0;
const GL_RGB4_S3TC = 0x83A1;
const GL_RGBA_S3TC = 0x83A2;
const GL_RGBA4_S3TC = 0x83A3;
const GL_RGBA_DXT5_S3TC = 0x83A4;
const GL_RGBA4_DXT5_S3TC = 0x83A5;
const GL_VERTEX_PRECLIP_SGIX = 0x83EE;
const GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF;
const GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
const GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
const GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = 0x83F2;
const GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
const GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = 0x83F3;
const GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;
const GL_PARALLEL_ARRAYS_INTEL = 0x83F4;
const GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5;
const GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6;
const GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7;
const GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8;
const GL_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9;
const GL_PERFQUERY_FLUSH_INTEL = 0x83FA;
const GL_PERFQUERY_WAIT_INTEL = 0x83FB;
const GL_BLACKHOLE_RENDER_INTEL = 0x83FC;
const GL_CONSERVATIVE_RASTERIZATION_INTEL = 0x83FE;
const GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF;
const GL_FRAGMENT_LIGHTING_SGIX = 0x8400;
const GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404;
const GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405;
const GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406;
const GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408;
const GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409;
const GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A;
const GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B;
const GL_FRAGMENT_LIGHT0_SGIX = 0x840C;
const GL_FRAGMENT_LIGHT1_SGIX = 0x840D;
const GL_FRAGMENT_LIGHT2_SGIX = 0x840E;
const GL_FRAGMENT_LIGHT3_SGIX = 0x840F;
const GL_FRAGMENT_LIGHT4_SGIX = 0x8410;
const GL_FRAGMENT_LIGHT5_SGIX = 0x8411;
const GL_FRAGMENT_LIGHT6_SGIX = 0x8412;
const GL_FRAGMENT_LIGHT7_SGIX = 0x8413;
const GL_PACK_RESAMPLE_SGIX = 0x842E;
const GL_UNPACK_RESAMPLE_SGIX = 0x842F;
const GL_RESAMPLE_REPLICATE_SGIX = 0x8433;
const GL_RESAMPLE_ZERO_FILL_SGIX = 0x8434;
const GL_TANGENT_ARRAY_EXT = 0x8439;
const GL_BINORMAL_ARRAY_EXT = 0x843A;
const GL_CURRENT_TANGENT_EXT = 0x843B;
const GL_CURRENT_BINORMAL_EXT = 0x843C;
const GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;
const GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;
const GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;
const GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;
const GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;
const GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;
const GL_MAP1_TANGENT_EXT = 0x8444;
const GL_MAP2_TANGENT_EXT = 0x8445;
const GL_MAP1_BINORMAL_EXT = 0x8446;
const GL_MAP2_BINORMAL_EXT = 0x8447;
const GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D;
const GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E;
const GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F;
const GL_FOG_COORDINATE_SOURCE = 0x8450;
const GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;
const GL_FOG_COORD_SRC = 0x8450;
const GL_FOG_COORDINATE = 0x8451;
const GL_FOG_COORDINATE_EXT = 0x8451;
const GL_FOG_COORD = 0x8451;
const GL_FRAGMENT_DEPTH = 0x8452;
const GL_FRAGMENT_DEPTH_EXT = 0x8452;
const GL_CURRENT_FOG_COORDINATE = 0x8453;
const GL_CURRENT_FOG_COORD = 0x8453;
const GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;
const GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
const GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;
const GL_FOG_COORD_ARRAY_TYPE = 0x8454;
const GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
const GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;
const GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
const GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
const GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;
const GL_FOG_COORD_ARRAY_POINTER = 0x8456;
const GL_FOG_COORDINATE_ARRAY = 0x8457;
const GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;
const GL_FOG_COORD_ARRAY = 0x8457;
const GL_COLOR_SUM = 0x8458;
const GL_COLOR_SUM_ARB = 0x8458;
const GL_COLOR_SUM_EXT = 0x8458;
const GL_CURRENT_SECONDARY_COLOR = 0x8459;
const GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;
const GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
const GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;
const GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
const GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;
const GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
const GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;
const GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
const GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;
const GL_SECONDARY_COLOR_ARRAY = 0x845E;
const GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;
const GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
const GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
const GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
const GL_SCREEN_COORDINATES_REND = 0x8490;
const GL_TEXTURE0 = 0x84C0;
const GL_TEXTURE0_ARB = 0x84C0;
const GL_TEXTURE1 = 0x84C1;
const GL_TEXTURE1_ARB = 0x84C1;
const GL_TEXTURE2 = 0x84C2;
const GL_TEXTURE2_ARB = 0x84C2;
const GL_TEXTURE3 = 0x84C3;
const GL_TEXTURE3_ARB = 0x84C3;
const GL_TEXTURE4 = 0x84C4;
const GL_TEXTURE4_ARB = 0x84C4;
const GL_TEXTURE5 = 0x84C5;
const GL_TEXTURE5_ARB = 0x84C5;
const GL_TEXTURE6 = 0x84C6;
const GL_TEXTURE6_ARB = 0x84C6;
const GL_TEXTURE7 = 0x84C7;
const GL_TEXTURE7_ARB = 0x84C7;
const GL_TEXTURE8 = 0x84C8;
const GL_TEXTURE8_ARB = 0x84C8;
const GL_TEXTURE9 = 0x84C9;
const GL_TEXTURE9_ARB = 0x84C9;
const GL_TEXTURE10 = 0x84CA;
const GL_TEXTURE10_ARB = 0x84CA;
const GL_TEXTURE11 = 0x84CB;
const GL_TEXTURE11_ARB = 0x84CB;
const GL_TEXTURE12 = 0x84CC;
const GL_TEXTURE12_ARB = 0x84CC;
const GL_TEXTURE13 = 0x84CD;
const GL_TEXTURE13_ARB = 0x84CD;
const GL_TEXTURE14 = 0x84CE;
const GL_TEXTURE14_ARB = 0x84CE;
const GL_TEXTURE15 = 0x84CF;
const GL_TEXTURE15_ARB = 0x84CF;
const GL_TEXTURE16 = 0x84D0;
const GL_TEXTURE16_ARB = 0x84D0;
const GL_TEXTURE17 = 0x84D1;
const GL_TEXTURE17_ARB = 0x84D1;
const GL_TEXTURE18 = 0x84D2;
const GL_TEXTURE18_ARB = 0x84D2;
const GL_TEXTURE19 = 0x84D3;
const GL_TEXTURE19_ARB = 0x84D3;
const GL_TEXTURE20 = 0x84D4;
const GL_TEXTURE20_ARB = 0x84D4;
const GL_TEXTURE21 = 0x84D5;
const GL_TEXTURE21_ARB = 0x84D5;
const GL_TEXTURE22 = 0x84D6;
const GL_TEXTURE22_ARB = 0x84D6;
const GL_TEXTURE23 = 0x84D7;
const GL_TEXTURE23_ARB = 0x84D7;
const GL_TEXTURE24 = 0x84D8;
const GL_TEXTURE24_ARB = 0x84D8;
const GL_TEXTURE25 = 0x84D9;
const GL_TEXTURE25_ARB = 0x84D9;
const GL_TEXTURE26 = 0x84DA;
const GL_TEXTURE26_ARB = 0x84DA;
const GL_TEXTURE27 = 0x84DB;
const GL_TEXTURE27_ARB = 0x84DB;
const GL_TEXTURE28 = 0x84DC;
const GL_TEXTURE28_ARB = 0x84DC;
const GL_TEXTURE29 = 0x84DD;
const GL_TEXTURE29_ARB = 0x84DD;
const GL_TEXTURE30 = 0x84DE;
const GL_TEXTURE30_ARB = 0x84DE;
const GL_TEXTURE31 = 0x84DF;
const GL_TEXTURE31_ARB = 0x84DF;
const GL_ACTIVE_TEXTURE = 0x84E0;
const GL_ACTIVE_TEXTURE_ARB = 0x84E0;
const GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
const GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1;
const GL_MAX_TEXTURE_UNITS = 0x84E2;
const GL_MAX_TEXTURE_UNITS_ARB = 0x84E2;
const GL_SUBTRACT = 0x84E7;
const GL_SUBTRACT_ARB = 0x84E7;
const GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
const GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;
const GL_MAX_RENDERBUFFER_SIZE_OES = 0x84E8;
const GL_COMPRESSED_ALPHA = 0x84E9;
const GL_COMPRESSED_ALPHA_ARB = 0x84E9;
const GL_COMPRESSED_LUMINANCE = 0x84EA;
const GL_COMPRESSED_LUMINANCE_ARB = 0x84EA;
const GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
const GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB;
const GL_COMPRESSED_INTENSITY = 0x84EC;
const GL_COMPRESSED_INTENSITY_ARB = 0x84EC;
const GL_COMPRESSED_RGB = 0x84ED;
const GL_COMPRESSED_RGB_ARB = 0x84ED;
const GL_COMPRESSED_RGBA = 0x84EE;
const GL_COMPRESSED_RGBA_ARB = 0x84EE;
const GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
const GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF;
const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
const GL_TEXTURE_RECTANGLE = 0x84F5;
const GL_TEXTURE_RECTANGLE_ARB = 0x84F5;
const GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;
const GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6;
const GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;
const GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7;
const GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
const GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8;
const GL_DEPTH_STENCIL = 0x84F9;
const GL_DEPTH_STENCIL_EXT = 0x84F9;
const GL_DEPTH_STENCIL_OES = 0x84F9;
const GL_UNSIGNED_INT_24_8 = 0x84FA;
const GL_UNSIGNED_INT_24_8_EXT = 0x84FA;
const GL_UNSIGNED_INT_24_8_OES = 0x84FA;
const GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
const GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;
const GL_TEXTURE_MAX_ANISOTROPY = 0x84FE;
const GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
const GL_MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF;
const GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;
const GL_TEXTURE_FILTER_CONTROL = 0x8500;
const GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;
const GL_TEXTURE_LOD_BIAS = 0x8501;
const GL_TEXTURE_LOD_BIAS_EXT = 0x8501;
const GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;
const GL_INCR_WRAP = 0x8507;
const GL_INCR_WRAP_EXT = 0x8507;
const GL_INCR_WRAP_OES = 0x8507;
const GL_DECR_WRAP = 0x8508;
const GL_DECR_WRAP_EXT = 0x8508;
const GL_DECR_WRAP_OES = 0x8508;
const GL_VERTEX_WEIGHTING_EXT = 0x8509;
const GL_MODELVIEW1_ARB = 0x850A;
const GL_MODELVIEW1_EXT = 0x850A;
const GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;
const GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;
const GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;
const GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;
const GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;
const GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;
const GL_NORMAL_MAP = 0x8511;
const GL_NORMAL_MAP_ARB = 0x8511;
const GL_NORMAL_MAP_EXT = 0x8511;
const GL_NORMAL_MAP_OES = 0x8511;
const GL_REFLECTION_MAP = 0x8512;
const GL_REFLECTION_MAP_ARB = 0x8512;
const GL_REFLECTION_MAP_EXT = 0x8512;
const GL_REFLECTION_MAP_OES = 0x8512;
const GL_TEXTURE_CUBE_MAP = 0x8513;
const GL_TEXTURE_CUBE_MAP_ARB = 0x8513;
const GL_TEXTURE_CUBE_MAP_EXT = 0x8513;
const GL_TEXTURE_CUBE_MAP_OES = 0x8513;
const GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
const GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514;
const GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;
const GL_TEXTURE_BINDING_CUBE_MAP_OES = 0x8514;
const GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
const GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515;
const GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;
const GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = 0x8515;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = 0x8516;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = 0x8517;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = 0x8518;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = 0x8519;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = 0x851A;
const GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
const GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B;
const GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;
const GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
const GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C;
const GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;
const GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = 0x851C;
const GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D;
const GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E;
const GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F;
const GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521;
const GL_RED_MIN_CLAMP_INGR = 0x8560;
const GL_GREEN_MIN_CLAMP_INGR = 0x8561;
const GL_BLUE_MIN_CLAMP_INGR = 0x8562;
const GL_ALPHA_MIN_CLAMP_INGR = 0x8563;
const GL_RED_MAX_CLAMP_INGR = 0x8564;
const GL_GREEN_MAX_CLAMP_INGR = 0x8565;
const GL_BLUE_MAX_CLAMP_INGR = 0x8566;
const GL_ALPHA_MAX_CLAMP_INGR = 0x8567;
const GL_INTERLACE_READ_INGR = 0x8568;
const GL_COMBINE = 0x8570;
const GL_COMBINE_ARB = 0x8570;
const GL_COMBINE_EXT = 0x8570;
const GL_COMBINE_RGB = 0x8571;
const GL_COMBINE_RGB_ARB = 0x8571;
const GL_COMBINE_RGB_EXT = 0x8571;
const GL_COMBINE_ALPHA = 0x8572;
const GL_COMBINE_ALPHA_ARB = 0x8572;
const GL_COMBINE_ALPHA_EXT = 0x8572;
const GL_RGB_SCALE = 0x8573;
const GL_RGB_SCALE_ARB = 0x8573;
const GL_RGB_SCALE_EXT = 0x8573;
const GL_ADD_SIGNED = 0x8574;
const GL_ADD_SIGNED_ARB = 0x8574;
const GL_ADD_SIGNED_EXT = 0x8574;
const GL_INTERPOLATE = 0x8575;
const GL_INTERPOLATE_ARB = 0x8575;
const GL_INTERPOLATE_EXT = 0x8575;
const GL_CONSTANT = 0x8576;
const GL_CONSTANT_ARB = 0x8576;
const GL_CONSTANT_EXT = 0x8576;
const GL_PRIMARY_COLOR = 0x8577;
const GL_PRIMARY_COLOR_ARB = 0x8577;
const GL_PRIMARY_COLOR_EXT = 0x8577;
const GL_PREVIOUS = 0x8578;
const GL_PREVIOUS_ARB = 0x8578;
const GL_PREVIOUS_EXT = 0x8578;
const GL_SOURCE0_RGB = 0x8580;
const GL_SOURCE0_RGB_ARB = 0x8580;
const GL_SOURCE0_RGB_EXT = 0x8580;
const GL_SRC0_RGB = 0x8580;
const GL_SOURCE1_RGB = 0x8581;
const GL_SOURCE1_RGB_ARB = 0x8581;
const GL_SOURCE1_RGB_EXT = 0x8581;
const GL_SRC1_RGB = 0x8581;
const GL_SOURCE2_RGB = 0x8582;
const GL_SOURCE2_RGB_ARB = 0x8582;
const GL_SOURCE2_RGB_EXT = 0x8582;
const GL_SRC2_RGB = 0x8582;
const GL_SOURCE0_ALPHA = 0x8588;
const GL_SOURCE0_ALPHA_ARB = 0x8588;
const GL_SOURCE0_ALPHA_EXT = 0x8588;
const GL_SRC0_ALPHA = 0x8588;
const GL_SOURCE1_ALPHA = 0x8589;
const GL_SOURCE1_ALPHA_ARB = 0x8589;
const GL_SOURCE1_ALPHA_EXT = 0x8589;
const GL_SRC1_ALPHA = 0x8589;
const GL_SRC1_ALPHA_EXT = 0x8589;
const GL_SOURCE2_ALPHA = 0x858A;
const GL_SOURCE2_ALPHA_ARB = 0x858A;
const GL_SOURCE2_ALPHA_EXT = 0x858A;
const GL_SRC2_ALPHA = 0x858A;
const GL_OPERAND0_RGB = 0x8590;
const GL_OPERAND0_RGB_ARB = 0x8590;
const GL_OPERAND0_RGB_EXT = 0x8590;
const GL_OPERAND1_RGB = 0x8591;
const GL_OPERAND1_RGB_ARB = 0x8591;
const GL_OPERAND1_RGB_EXT = 0x8591;
const GL_OPERAND2_RGB = 0x8592;
const GL_OPERAND2_RGB_ARB = 0x8592;
const GL_OPERAND2_RGB_EXT = 0x8592;
const GL_OPERAND0_ALPHA = 0x8598;
const GL_OPERAND0_ALPHA_ARB = 0x8598;
const GL_OPERAND0_ALPHA_EXT = 0x8598;
const GL_OPERAND1_ALPHA = 0x8599;
const GL_OPERAND1_ALPHA_ARB = 0x8599;
const GL_OPERAND1_ALPHA_EXT = 0x8599;
const GL_OPERAND2_ALPHA = 0x859A;
const GL_OPERAND2_ALPHA_ARB = 0x859A;
const GL_OPERAND2_ALPHA_EXT = 0x859A;
const GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0;
const GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1;
const GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2;
const GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3;
const GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4;
const GL_PERTURB_EXT = 0x85AE;
const GL_TEXTURE_NORMAL_EXT = 0x85AF;
const GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0;
const GL_TRANSFORM_HINT_APPLE = 0x85B1;
const GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2;
const GL_BUFFER_OBJECT_APPLE = 0x85B3;
const GL_STORAGE_CLIENT_APPLE = 0x85B4;
const GL_VERTEX_ARRAY_BINDING = 0x85B5;
const GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5;
const GL_VERTEX_ARRAY_BINDING_OES = 0x85B5;
const GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7;
const GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8;
const GL_YCBCR_422_APPLE = 0x85B9;
const GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA;
const GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA;
const GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB;
const GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB;
const GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC;
const GL_STORAGE_PRIVATE_APPLE = 0x85BD;
const GL_STORAGE_CACHED_APPLE = 0x85BE;
const GL_STORAGE_SHARED_APPLE = 0x85BF;
const GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0;
const GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1;
const GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2;
const GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3;
const GL_R1UI_V3F_SUN = 0x85C4;
const GL_R1UI_C4UB_V3F_SUN = 0x85C5;
const GL_R1UI_C3F_V3F_SUN = 0x85C6;
const GL_R1UI_N3F_V3F_SUN = 0x85C7;
const GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8;
const GL_R1UI_T2F_V3F_SUN = 0x85C9;
const GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA;
const GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB;
const GL_SLICE_ACCUM_SUN = 0x85CC;
const GL_QUAD_MESH_SUN = 0x8614;
const GL_TRIANGLE_MESH_SUN = 0x8615;
const GL_VERTEX_PROGRAM_ARB = 0x8620;
const GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622;
const GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623;
const GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624;
const GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625;
const GL_CURRENT_VERTEX_ATTRIB = 0x8626;
const GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626;
const GL_PROGRAM_LENGTH_ARB = 0x8627;
const GL_PROGRAM_STRING_ARB = 0x8628;
const GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
const GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642;
const GL_PROGRAM_POINT_SIZE = 0x8642;
const GL_PROGRAM_POINT_SIZE_ARB = 0x8642;
const GL_PROGRAM_POINT_SIZE_EXT = 0x8642;
const GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
const GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643;
const GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
const GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645;
const GL_PROGRAM_ERROR_POSITION_ARB = 0x864B;
const GL_DEPTH_CLAMP = 0x864F;
const GL_DEPTH_CLAMP_EXT = 0x864F;
const GL_PROGRAM_BINDING_ARB = 0x8677;
const GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0;
const GL_TEXTURE_COMPRESSED = 0x86A1;
const GL_TEXTURE_COMPRESSED_ARB = 0x86A1;
const GL_MAX_VERTEX_UNITS_ARB = 0x86A4;
const GL_MAX_VERTEX_UNITS_OES = 0x86A4;
const GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
const GL_WEIGHT_SUM_UNITY_ARB = 0x86A6;
const GL_VERTEX_BLEND_ARB = 0x86A7;
const GL_CURRENT_WEIGHT_ARB = 0x86A8;
const GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
const GL_WEIGHT_ARRAY_TYPE_OES = 0x86A9;
const GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
const GL_WEIGHT_ARRAY_STRIDE_OES = 0x86AA;
const GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
const GL_WEIGHT_ARRAY_SIZE_OES = 0x86AB;
const GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
const GL_WEIGHT_ARRAY_POINTER_OES = 0x86AC;
const GL_WEIGHT_ARRAY_ARB = 0x86AD;
const GL_WEIGHT_ARRAY_OES = 0x86AD;
const GL_DOT3_RGB = 0x86AE;
const GL_DOT3_RGB_ARB = 0x86AE;
const GL_DOT3_RGBA = 0x86AF;
const GL_DOT3_RGBA_ARB = 0x86AF;
const GL_DOT3_RGBA_IMG = 0x86AF;
const GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;
const GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;
const GL_MULTISAMPLE_3DFX = 0x86B2;
const GL_SAMPLE_BUFFERS_3DFX = 0x86B3;
const GL_SAMPLES_3DFX = 0x86B4;
const GL_MODELVIEW2_ARB = 0x8722;
const GL_MODELVIEW3_ARB = 0x8723;
const GL_MODELVIEW4_ARB = 0x8724;
const GL_MODELVIEW5_ARB = 0x8725;
const GL_MODELVIEW6_ARB = 0x8726;
const GL_MODELVIEW7_ARB = 0x8727;
const GL_MODELVIEW8_ARB = 0x8728;
const GL_MODELVIEW9_ARB = 0x8729;
const GL_MODELVIEW10_ARB = 0x872A;
const GL_MODELVIEW11_ARB = 0x872B;
const GL_MODELVIEW12_ARB = 0x872C;
const GL_MODELVIEW13_ARB = 0x872D;
const GL_MODELVIEW14_ARB = 0x872E;
const GL_MODELVIEW15_ARB = 0x872F;
const GL_MODELVIEW16_ARB = 0x8730;
const GL_MODELVIEW17_ARB = 0x8731;
const GL_MODELVIEW18_ARB = 0x8732;
const GL_MODELVIEW19_ARB = 0x8733;
const GL_MODELVIEW20_ARB = 0x8734;
const GL_MODELVIEW21_ARB = 0x8735;
const GL_MODELVIEW22_ARB = 0x8736;
const GL_MODELVIEW23_ARB = 0x8737;
const GL_MODELVIEW24_ARB = 0x8738;
const GL_MODELVIEW25_ARB = 0x8739;
const GL_MODELVIEW26_ARB = 0x873A;
const GL_MODELVIEW27_ARB = 0x873B;
const GL_MODELVIEW28_ARB = 0x873C;
const GL_MODELVIEW29_ARB = 0x873D;
const GL_MODELVIEW30_ARB = 0x873E;
const GL_MODELVIEW31_ARB = 0x873F;
const GL_DOT3_RGB_EXT = 0x8740;
const GL_Z400_BINARY_AMD = 0x8740;
const GL_DOT3_RGBA_EXT = 0x8741;
const GL_PROGRAM_BINARY_LENGTH_OES = 0x8741;
const GL_PROGRAM_BINARY_LENGTH = 0x8741;
const GL_MIRROR_CLAMP_ATI = 0x8742;
const GL_MIRROR_CLAMP_EXT = 0x8742;
const GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
const GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743;
const GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;
const GL_MODULATE_ADD_ATI = 0x8744;
const GL_MODULATE_SIGNED_ADD_ATI = 0x8745;
const GL_MODULATE_SUBTRACT_ATI = 0x8746;
const GL_SET_AMD = 0x874A;
const GL_REPLACE_VALUE_AMD = 0x874B;
const GL_STENCIL_OP_VALUE_AMD = 0x874C;
const GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D;
const GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E;
const GL_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F;
const GL_DEPTH_STENCIL_MESA = 0x8750;
const GL_UNSIGNED_INT_24_8_MESA = 0x8751;
const GL_UNSIGNED_INT_8_24_REV_MESA = 0x8752;
const GL_UNSIGNED_SHORT_15_1_MESA = 0x8753;
const GL_UNSIGNED_SHORT_1_15_REV_MESA = 0x8754;
const GL_TRACE_MASK_MESA = 0x8755;
const GL_TRACE_NAME_MESA = 0x8756;
const GL_YCBCR_MESA = 0x8757;
const GL_DEBUG_OBJECT_MESA = 0x8759;
const GL_TEXTURE_1D_STACK_MESAX = 0x8759;
const GL_DEBUG_PRINT_MESA = 0x875A;
const GL_TEXTURE_2D_STACK_MESAX = 0x875A;
const GL_DEBUG_ASSERT_MESA = 0x875B;
const GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B;
const GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C;
const GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D;
const GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E;
const GL_STATIC_ATI = 0x8760;
const GL_DYNAMIC_ATI = 0x8761;
const GL_PRESERVE_ATI = 0x8762;
const GL_DISCARD_ATI = 0x8763;
const GL_BUFFER_SIZE = 0x8764;
const GL_BUFFER_SIZE_ARB = 0x8764;
const GL_OBJECT_BUFFER_SIZE_ATI = 0x8764;
const GL_BUFFER_USAGE = 0x8765;
const GL_BUFFER_USAGE_ARB = 0x8765;
const GL_OBJECT_BUFFER_USAGE_ATI = 0x8765;
const GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766;
const GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767;
const GL_ELEMENT_ARRAY_ATI = 0x8768;
const GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769;
const GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A;
const GL_MAX_VERTEX_STREAMS_ATI = 0x876B;
const GL_VERTEX_STREAM0_ATI = 0x876C;
const GL_VERTEX_STREAM1_ATI = 0x876D;
const GL_VERTEX_STREAM2_ATI = 0x876E;
const GL_VERTEX_STREAM3_ATI = 0x876F;
const GL_VERTEX_STREAM4_ATI = 0x8770;
const GL_VERTEX_STREAM5_ATI = 0x8771;
const GL_VERTEX_STREAM6_ATI = 0x8772;
const GL_VERTEX_STREAM7_ATI = 0x8773;
const GL_VERTEX_SOURCE_ATI = 0x8774;
const GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777;
const GL_BUMP_TEX_UNITS_ATI = 0x8778;
const GL_DUDV_ATI = 0x8779;
const GL_DU8DV8_ATI = 0x877A;
const GL_BUMP_TARGET_ATI = 0x877C;
const GL_VERTEX_SHADER_EXT = 0x8780;
const GL_VERTEX_SHADER_BINDING_EXT = 0x8781;
const GL_OP_INDEX_EXT = 0x8782;
const GL_OP_NEGATE_EXT = 0x8783;
const GL_OP_DOT3_EXT = 0x8784;
const GL_OP_DOT4_EXT = 0x8785;
const GL_OP_MUL_EXT = 0x8786;
const GL_OP_ADD_EXT = 0x8787;
const GL_OP_MADD_EXT = 0x8788;
const GL_OP_FRAC_EXT = 0x8789;
const GL_OP_MAX_EXT = 0x878A;
const GL_OP_MIN_EXT = 0x878B;
const GL_OP_SET_GE_EXT = 0x878C;
const GL_OP_SET_LT_EXT = 0x878D;
const GL_OP_CLAMP_EXT = 0x878E;
const GL_OP_FLOOR_EXT = 0x878F;
const GL_OP_ROUND_EXT = 0x8790;
const GL_OP_EXP_BASE_2_EXT = 0x8791;
const GL_OP_LOG_BASE_2_EXT = 0x8792;
const GL_OP_POWER_EXT = 0x8793;
const GL_OP_RECIP_EXT = 0x8794;
const GL_OP_RECIP_SQRT_EXT = 0x8795;
const GL_OP_SUB_EXT = 0x8796;
const GL_OP_CROSS_PRODUCT_EXT = 0x8797;
const GL_OP_MOV_EXT = 0x8799;
const GL_OUTPUT_VERTEX_EXT = 0x879A;
const GL_OUTPUT_COLOR0_EXT = 0x879B;
const GL_OUTPUT_COLOR1_EXT = 0x879C;
const GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
const GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
const GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
const GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
const GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
const GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
const GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
const GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
const GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
const GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
const GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
const GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
const GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
const GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
const GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
const GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
const GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
const GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
const GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
const GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
const GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
const GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
const GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
const GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
const GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
const GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
const GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
const GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
const GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
const GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
const GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
const GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
const GL_OUTPUT_FOG_EXT = 0x87BD;
const GL_SCALAR_EXT = 0x87BE;
const GL_VECTOR_EXT = 0x87BF;
const GL_VARIANT_EXT = 0x87C1;
const GL_LOCAL_CONSTANT_EXT = 0x87C3;
const GL_LOCAL_EXT = 0x87C4;
const GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
const GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
const GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
const GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
const GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
const GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
const GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
const GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
const GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
const GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;
const GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
const GL_X_EXT = 0x87D5;
const GL_Y_EXT = 0x87D6;
const GL_Z_EXT = 0x87D7;
const GL_W_EXT = 0x87D8;
const GL_NEGATIVE_X_EXT = 0x87D9;
const GL_NEGATIVE_Y_EXT = 0x87DA;
const GL_NEGATIVE_Z_EXT = 0x87DB;
const GL_NEGATIVE_W_EXT = 0x87DC;
const GL_ZERO_EXT = 0x87DD;
const GL_ONE_EXT = 0x87DE;
const GL_NEGATIVE_ONE_EXT = 0x87DF;
const GL_NORMALIZED_RANGE_EXT = 0x87E0;
const GL_FULL_RANGE_EXT = 0x87E1;
const GL_CURRENT_VERTEX_EXT = 0x87E2;
const GL_VARIANT_VALUE_EXT = 0x87E4;
const GL_VARIANT_DATATYPE_EXT = 0x87E5;
const GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
const GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;
const GL_VARIANT_ARRAY_EXT = 0x87E8;
const GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;
const GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
const GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;
const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 0x87EE;
const GL_PN_TRIANGLES_ATI = 0x87F0;
const GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1;
const GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2;
const GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3;
const GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4;
const GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5;
const GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6;
const GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7;
const GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8;
const GL_3DC_X_AMD = 0x87F9;
const GL_3DC_XY_AMD = 0x87FA;
const GL_VBO_FREE_MEMORY_ATI = 0x87FB;
const GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC;
const GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD;
const GL_STENCIL_BACK_FUNC = 0x8800;
const GL_STENCIL_BACK_FUNC_ATI = 0x8800;
const GL_STENCIL_BACK_FAIL = 0x8801;
const GL_STENCIL_BACK_FAIL_ATI = 0x8801;
const GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
const GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802;
const GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
const GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803;
const GL_FRAGMENT_PROGRAM_ARB = 0x8804;
const GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805;
const GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806;
const GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807;
const GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808;
const GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809;
const GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A;
const GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B;
const GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C;
const GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D;
const GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E;
const GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F;
const GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810;
const GL_RGBA32F = 0x8814;
const GL_RGBA32F_ARB = 0x8814;
const GL_RGBA32F_EXT = 0x8814;
const GL_RGBA_FLOAT32_APPLE = 0x8814;
const GL_RGBA_FLOAT32_ATI = 0x8814;
const GL_RGB32F = 0x8815;
const GL_RGB32F_ARB = 0x8815;
const GL_RGB32F_EXT = 0x8815;
const GL_RGB_FLOAT32_APPLE = 0x8815;
const GL_RGB_FLOAT32_ATI = 0x8815;
const GL_ALPHA32F_ARB = 0x8816;
const GL_ALPHA32F_EXT = 0x8816;
const GL_ALPHA_FLOAT32_APPLE = 0x8816;
const GL_ALPHA_FLOAT32_ATI = 0x8816;
const GL_INTENSITY32F_ARB = 0x8817;
const GL_INTENSITY_FLOAT32_APPLE = 0x8817;
const GL_INTENSITY_FLOAT32_ATI = 0x8817;
const GL_LUMINANCE32F_ARB = 0x8818;
const GL_LUMINANCE32F_EXT = 0x8818;
const GL_LUMINANCE_FLOAT32_APPLE = 0x8818;
const GL_LUMINANCE_FLOAT32_ATI = 0x8818;
const GL_LUMINANCE_ALPHA32F_ARB = 0x8819;
const GL_LUMINANCE_ALPHA32F_EXT = 0x8819;
const GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819;
const GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819;
const GL_RGBA16F = 0x881A;
const GL_RGBA16F_ARB = 0x881A;
const GL_RGBA16F_EXT = 0x881A;
const GL_RGBA_FLOAT16_APPLE = 0x881A;
const GL_RGBA_FLOAT16_ATI = 0x881A;
const GL_RGB16F = 0x881B;
const GL_RGB16F_ARB = 0x881B;
const GL_RGB16F_EXT = 0x881B;
const GL_RGB_FLOAT16_APPLE = 0x881B;
const GL_RGB_FLOAT16_ATI = 0x881B;
const GL_ALPHA16F_ARB = 0x881C;
const GL_ALPHA16F_EXT = 0x881C;
const GL_ALPHA_FLOAT16_APPLE = 0x881C;
const GL_ALPHA_FLOAT16_ATI = 0x881C;
const GL_INTENSITY16F_ARB = 0x881D;
const GL_INTENSITY_FLOAT16_APPLE = 0x881D;
const GL_INTENSITY_FLOAT16_ATI = 0x881D;
const GL_LUMINANCE16F_ARB = 0x881E;
const GL_LUMINANCE16F_EXT = 0x881E;
const GL_LUMINANCE_FLOAT16_APPLE = 0x881E;
const GL_LUMINANCE_FLOAT16_ATI = 0x881E;
const GL_LUMINANCE_ALPHA16F_ARB = 0x881F;
const GL_LUMINANCE_ALPHA16F_EXT = 0x881F;
const GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F;
const GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F;
const GL_RGBA_FLOAT_MODE_ARB = 0x8820;
const GL_RGBA_FLOAT_MODE_ATI = 0x8820;
const GL_WRITEONLY_RENDERING_QCOM = 0x8823;
const GL_MAX_DRAW_BUFFERS = 0x8824;
const GL_MAX_DRAW_BUFFERS_ARB = 0x8824;
const GL_MAX_DRAW_BUFFERS_ATI = 0x8824;
const GL_MAX_DRAW_BUFFERS_EXT = 0x8824;
const GL_DRAW_BUFFER0 = 0x8825;
const GL_DRAW_BUFFER0_ARB = 0x8825;
const GL_DRAW_BUFFER0_ATI = 0x8825;
const GL_DRAW_BUFFER0_EXT = 0x8825;
const GL_DRAW_BUFFER1 = 0x8826;
const GL_DRAW_BUFFER1_ARB = 0x8826;
const GL_DRAW_BUFFER1_ATI = 0x8826;
const GL_DRAW_BUFFER1_EXT = 0x8826;
const GL_DRAW_BUFFER2 = 0x8827;
const GL_DRAW_BUFFER2_ARB = 0x8827;
const GL_DRAW_BUFFER2_ATI = 0x8827;
const GL_DRAW_BUFFER2_EXT = 0x8827;
const GL_DRAW_BUFFER3 = 0x8828;
const GL_DRAW_BUFFER3_ARB = 0x8828;
const GL_DRAW_BUFFER3_ATI = 0x8828;
const GL_DRAW_BUFFER3_EXT = 0x8828;
const GL_DRAW_BUFFER4 = 0x8829;
const GL_DRAW_BUFFER4_ARB = 0x8829;
const GL_DRAW_BUFFER4_ATI = 0x8829;
const GL_DRAW_BUFFER4_EXT = 0x8829;
const GL_DRAW_BUFFER5 = 0x882A;
const GL_DRAW_BUFFER5_ARB = 0x882A;
const GL_DRAW_BUFFER5_ATI = 0x882A;
const GL_DRAW_BUFFER5_EXT = 0x882A;
const GL_DRAW_BUFFER6 = 0x882B;
const GL_DRAW_BUFFER6_ARB = 0x882B;
const GL_DRAW_BUFFER6_ATI = 0x882B;
const GL_DRAW_BUFFER6_EXT = 0x882B;
const GL_DRAW_BUFFER7 = 0x882C;
const GL_DRAW_BUFFER7_ARB = 0x882C;
const GL_DRAW_BUFFER7_ATI = 0x882C;
const GL_DRAW_BUFFER7_EXT = 0x882C;
const GL_DRAW_BUFFER8 = 0x882D;
const GL_DRAW_BUFFER8_ARB = 0x882D;
const GL_DRAW_BUFFER8_ATI = 0x882D;
const GL_DRAW_BUFFER8_EXT = 0x882D;
const GL_DRAW_BUFFER9 = 0x882E;
const GL_DRAW_BUFFER9_ARB = 0x882E;
const GL_DRAW_BUFFER9_ATI = 0x882E;
const GL_DRAW_BUFFER9_EXT = 0x882E;
const GL_DRAW_BUFFER10 = 0x882F;
const GL_DRAW_BUFFER10_ARB = 0x882F;
const GL_DRAW_BUFFER10_ATI = 0x882F;
const GL_DRAW_BUFFER10_EXT = 0x882F;
const GL_DRAW_BUFFER11 = 0x8830;
const GL_DRAW_BUFFER11_ARB = 0x8830;
const GL_DRAW_BUFFER11_ATI = 0x8830;
const GL_DRAW_BUFFER11_EXT = 0x8830;
const GL_DRAW_BUFFER12 = 0x8831;
const GL_DRAW_BUFFER12_ARB = 0x8831;
const GL_DRAW_BUFFER12_ATI = 0x8831;
const GL_DRAW_BUFFER12_EXT = 0x8831;
const GL_DRAW_BUFFER13 = 0x8832;
const GL_DRAW_BUFFER13_ARB = 0x8832;
const GL_DRAW_BUFFER13_ATI = 0x8832;
const GL_DRAW_BUFFER13_EXT = 0x8832;
const GL_DRAW_BUFFER14 = 0x8833;
const GL_DRAW_BUFFER14_ARB = 0x8833;
const GL_DRAW_BUFFER14_ATI = 0x8833;
const GL_DRAW_BUFFER14_EXT = 0x8833;
const GL_DRAW_BUFFER15 = 0x8834;
const GL_DRAW_BUFFER15_ARB = 0x8834;
const GL_DRAW_BUFFER15_ATI = 0x8834;
const GL_DRAW_BUFFER15_EXT = 0x8834;
const GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;
const GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = 0x8837;
const GL_BLEND_EQUATION_ALPHA = 0x883D;
const GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;
const GL_BLEND_EQUATION_ALPHA_OES = 0x883D;
const GL_SUBSAMPLE_DISTANCE_AMD = 0x883F;
const GL_TEXTURE_DEPTH_SIZE = 0x884A;
const GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A;
const GL_DEPTH_TEXTURE_MODE = 0x884B;
const GL_DEPTH_TEXTURE_MODE_ARB = 0x884B;
const GL_TEXTURE_COMPARE_MODE = 0x884C;
const GL_TEXTURE_COMPARE_MODE_ARB = 0x884C;
const GL_TEXTURE_COMPARE_MODE_EXT = 0x884C;
const GL_TEXTURE_COMPARE_FUNC = 0x884D;
const GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D;
const GL_TEXTURE_COMPARE_FUNC_EXT = 0x884D;
const GL_COMPARE_R_TO_TEXTURE = 0x884E;
const GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E;
const GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E;
const GL_COMPARE_REF_TO_TEXTURE = 0x884E;
const GL_COMPARE_REF_TO_TEXTURE_EXT = 0x884E;
const GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
const GL_POINT_SPRITE = 0x8861;
const GL_POINT_SPRITE_ARB = 0x8861;
const GL_POINT_SPRITE_OES = 0x8861;
const GL_COORD_REPLACE = 0x8862;
const GL_COORD_REPLACE_ARB = 0x8862;
const GL_COORD_REPLACE_OES = 0x8862;
const GL_QUERY_COUNTER_BITS = 0x8864;
const GL_QUERY_COUNTER_BITS_ARB = 0x8864;
const GL_QUERY_COUNTER_BITS_EXT = 0x8864;
const GL_CURRENT_QUERY = 0x8865;
const GL_CURRENT_QUERY_ARB = 0x8865;
const GL_CURRENT_QUERY_EXT = 0x8865;
const GL_QUERY_RESULT = 0x8866;
const GL_QUERY_RESULT_ARB = 0x8866;
const GL_QUERY_RESULT_EXT = 0x8866;
const GL_QUERY_RESULT_AVAILABLE = 0x8867;
const GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
const GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;
const GL_MAX_VERTEX_ATTRIBS = 0x8869;
const GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869;
const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A;
const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = 0x886C;
const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = 0x886C;
const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = 0x886D;
const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = 0x886D;
const GL_MAX_TEXTURE_COORDS = 0x8871;
const GL_MAX_TEXTURE_COORDS_ARB = 0x8871;
const GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
const GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872;
const GL_PROGRAM_ERROR_STRING_ARB = 0x8874;
const GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;
const GL_DEPTH_BOUNDS_EXT = 0x8891;
const GL_ARRAY_BUFFER = 0x8892;
const GL_ARRAY_BUFFER_ARB = 0x8892;
const GL_ELEMENT_ARRAY_BUFFER = 0x8893;
const GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893;
const GL_ARRAY_BUFFER_BINDING = 0x8894;
const GL_ARRAY_BUFFER_BINDING_ARB = 0x8894;
const GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895;
const GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896;
const GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897;
const GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
const GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898;
const GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
const GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899;
const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A;
const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B;
const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C;
const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D;
const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
const GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
const GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E;
const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 0x889E;
const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F;
const GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0;
const GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1;
const GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2;
const GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3;
const GL_PROGRAM_TEMPORARIES_ARB = 0x88A4;
const GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5;
const GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6;
const GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7;
const GL_PROGRAM_PARAMETERS_ARB = 0x88A8;
const GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9;
const GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA;
const GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB;
const GL_PROGRAM_ATTRIBS_ARB = 0x88AC;
const GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD;
const GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE;
const GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF;
const GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0;
const GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1;
const GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2;
const GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3;
const GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4;
const GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6;
const GL_READ_ONLY = 0x88B8;
const GL_READ_ONLY_ARB = 0x88B8;
const GL_WRITE_ONLY = 0x88B9;
const GL_WRITE_ONLY_ARB = 0x88B9;
const GL_WRITE_ONLY_OES = 0x88B9;
const GL_READ_WRITE = 0x88BA;
const GL_READ_WRITE_ARB = 0x88BA;
const GL_BUFFER_ACCESS = 0x88BB;
const GL_BUFFER_ACCESS_ARB = 0x88BB;
const GL_BUFFER_ACCESS_OES = 0x88BB;
const GL_BUFFER_MAPPED = 0x88BC;
const GL_BUFFER_MAPPED_ARB = 0x88BC;
const GL_BUFFER_MAPPED_OES = 0x88BC;
const GL_BUFFER_MAP_POINTER = 0x88BD;
const GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
const GL_BUFFER_MAP_POINTER_OES = 0x88BD;
const GL_TIME_ELAPSED = 0x88BF;
const GL_TIME_ELAPSED_EXT = 0x88BF;
const GL_STREAM_DRAW = 0x88E0;
const GL_STREAM_DRAW_ARB = 0x88E0;
const GL_STREAM_READ = 0x88E1;
const GL_STREAM_READ_ARB = 0x88E1;
const GL_STREAM_COPY = 0x88E2;
const GL_STREAM_COPY_ARB = 0x88E2;
const GL_STATIC_DRAW = 0x88E4;
const GL_STATIC_DRAW_ARB = 0x88E4;
const GL_STATIC_READ = 0x88E5;
const GL_STATIC_READ_ARB = 0x88E5;
const GL_STATIC_COPY = 0x88E6;
const GL_STATIC_COPY_ARB = 0x88E6;
const GL_DYNAMIC_DRAW = 0x88E8;
const GL_DYNAMIC_DRAW_ARB = 0x88E8;
const GL_DYNAMIC_READ = 0x88E9;
const GL_DYNAMIC_READ_ARB = 0x88E9;
const GL_DYNAMIC_COPY = 0x88EA;
const GL_DYNAMIC_COPY_ARB = 0x88EA;
const GL_PIXEL_PACK_BUFFER = 0x88EB;
const GL_PIXEL_PACK_BUFFER_ARB = 0x88EB;
const GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;
const GL_PIXEL_UNPACK_BUFFER = 0x88EC;
const GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC;
const GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;
const GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
const GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED;
const GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;
const GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
const GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF;
const GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;
const GL_DEPTH24_STENCIL8 = 0x88F0;
const GL_DEPTH24_STENCIL8_EXT = 0x88F0;
const GL_DEPTH24_STENCIL8_OES = 0x88F0;
const GL_TEXTURE_STENCIL_SIZE = 0x88F1;
const GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1;
const GL_STENCIL_TAG_BITS_EXT = 0x88F2;
const GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;
const GL_SRC1_COLOR = 0x88F9;
const GL_SRC1_COLOR_EXT = 0x88F9;
const GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
const GL_ONE_MINUS_SRC1_COLOR_EXT = 0x88FA;
const GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
const GL_ONE_MINUS_SRC1_ALPHA_EXT = 0x88FB;
const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = 0x88FC;
const GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
const GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD;
const GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE;
const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE;
const GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = 0x88FE;
const GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
const GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF;
const GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
const GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904;
const GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
const GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905;
const GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;
const GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;
const GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;
const GL_SAMPLES_PASSED = 0x8914;
const GL_SAMPLES_PASSED_ARB = 0x8914;
const GL_GEOMETRY_VERTICES_OUT = 0x8916;
const GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = 0x8916;
const GL_GEOMETRY_LINKED_VERTICES_OUT_OES = 0x8916;
const GL_GEOMETRY_INPUT_TYPE = 0x8917;
const GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = 0x8917;
const GL_GEOMETRY_LINKED_INPUT_TYPE_OES = 0x8917;
const GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
const GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = 0x8918;
const GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = 0x8918;
const GL_SAMPLER_BINDING = 0x8919;
const GL_CLAMP_VERTEX_COLOR = 0x891A;
const GL_CLAMP_VERTEX_COLOR_ARB = 0x891A;
const GL_CLAMP_FRAGMENT_COLOR = 0x891B;
const GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B;
const GL_CLAMP_READ_COLOR = 0x891C;
const GL_CLAMP_READ_COLOR_ARB = 0x891C;
const GL_FIXED_ONLY = 0x891D;
const GL_FIXED_ONLY_ARB = 0x891D;
const GL_FRAGMENT_SHADER_ATI = 0x8920;
const GL_REG_0_ATI = 0x8921;
const GL_REG_1_ATI = 0x8922;
const GL_REG_2_ATI = 0x8923;
const GL_REG_3_ATI = 0x8924;
const GL_REG_4_ATI = 0x8925;
const GL_REG_5_ATI = 0x8926;
const GL_REG_6_ATI = 0x8927;
const GL_REG_7_ATI = 0x8928;
const GL_REG_8_ATI = 0x8929;
const GL_REG_9_ATI = 0x892A;
const GL_REG_10_ATI = 0x892B;
const GL_REG_11_ATI = 0x892C;
const GL_REG_12_ATI = 0x892D;
const GL_REG_13_ATI = 0x892E;
const GL_REG_14_ATI = 0x892F;
const GL_REG_15_ATI = 0x8930;
const GL_REG_16_ATI = 0x8931;
const GL_REG_17_ATI = 0x8932;
const GL_REG_18_ATI = 0x8933;
const GL_REG_19_ATI = 0x8934;
const GL_REG_20_ATI = 0x8935;
const GL_REG_21_ATI = 0x8936;
const GL_REG_22_ATI = 0x8937;
const GL_REG_23_ATI = 0x8938;
const GL_REG_24_ATI = 0x8939;
const GL_REG_25_ATI = 0x893A;
const GL_REG_26_ATI = 0x893B;
const GL_REG_27_ATI = 0x893C;
const GL_REG_28_ATI = 0x893D;
const GL_REG_29_ATI = 0x893E;
const GL_REG_30_ATI = 0x893F;
const GL_REG_31_ATI = 0x8940;
const GL_CON_0_ATI = 0x8941;
const GL_CON_1_ATI = 0x8942;
const GL_CON_2_ATI = 0x8943;
const GL_CON_3_ATI = 0x8944;
const GL_CON_4_ATI = 0x8945;
const GL_CON_5_ATI = 0x8946;
const GL_CON_6_ATI = 0x8947;
const GL_CON_7_ATI = 0x8948;
const GL_CON_8_ATI = 0x8949;
const GL_CON_9_ATI = 0x894A;
const GL_CON_10_ATI = 0x894B;
const GL_CON_11_ATI = 0x894C;
const GL_CON_12_ATI = 0x894D;
const GL_CON_13_ATI = 0x894E;
const GL_CON_14_ATI = 0x894F;
const GL_CON_15_ATI = 0x8950;
const GL_CON_16_ATI = 0x8951;
const GL_CON_17_ATI = 0x8952;
const GL_CON_18_ATI = 0x8953;
const GL_CON_19_ATI = 0x8954;
const GL_CON_20_ATI = 0x8955;
const GL_CON_21_ATI = 0x8956;
const GL_CON_22_ATI = 0x8957;
const GL_CON_23_ATI = 0x8958;
const GL_CON_24_ATI = 0x8959;
const GL_CON_25_ATI = 0x895A;
const GL_CON_26_ATI = 0x895B;
const GL_CON_27_ATI = 0x895C;
const GL_CON_28_ATI = 0x895D;
const GL_CON_29_ATI = 0x895E;
const GL_CON_30_ATI = 0x895F;
const GL_CON_31_ATI = 0x8960;
const GL_MOV_ATI = 0x8961;
const GL_ADD_ATI = 0x8963;
const GL_MUL_ATI = 0x8964;
const GL_SUB_ATI = 0x8965;
const GL_DOT3_ATI = 0x8966;
const GL_DOT4_ATI = 0x8967;
const GL_MAD_ATI = 0x8968;
const GL_LERP_ATI = 0x8969;
const GL_CND_ATI = 0x896A;
const GL_CND0_ATI = 0x896B;
const GL_DOT2_ADD_ATI = 0x896C;
const GL_SECONDARY_INTERPOLATOR_ATI = 0x896D;
const GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E;
const GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F;
const GL_NUM_PASSES_ATI = 0x8970;
const GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971;
const GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972;
const GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973;
const GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974;
const GL_COLOR_ALPHA_PAIRING_ATI = 0x8975;
const GL_SWIZZLE_STR_ATI = 0x8976;
const GL_SWIZZLE_STQ_ATI = 0x8977;
const GL_SWIZZLE_STR_DR_ATI = 0x8978;
const GL_SWIZZLE_STQ_DQ_ATI = 0x8979;
const GL_SWIZZLE_STRQ_ATI = 0x897A;
const GL_SWIZZLE_STRQ_DQ_ATI = 0x897B;
const GL_INTERLACE_OML = 0x8980;
const GL_INTERLACE_READ_OML = 0x8981;
const GL_PACK_RESAMPLE_OML = 0x8984;
const GL_UNPACK_RESAMPLE_OML = 0x8985;
const GL_RESAMPLE_REPLICATE_OML = 0x8986;
const GL_RESAMPLE_ZERO_FILL_OML = 0x8987;
const GL_RESAMPLE_AVERAGE_OML = 0x8988;
const GL_POINT_SIZE_ARRAY_TYPE_OES = 0x898A;
const GL_POINT_SIZE_ARRAY_STRIDE_OES = 0x898B;
const GL_POINT_SIZE_ARRAY_POINTER_OES = 0x898C;
const GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00;
const GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01;
const GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02;
const GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03;
const GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04;
const GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05;
const GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06;
const GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07;
const GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08;
const GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09;
const GL_DRAW_PIXELS_APPLE = 0x8A0A;
const GL_FENCE_APPLE = 0x8A0B;
const GL_ELEMENT_ARRAY_APPLE = 0x8A0C;
const GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D;
const GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E;
const GL_COLOR_FLOAT_APPLE = 0x8A0F;
const GL_UNIFORM_BUFFER = 0x8A11;
const GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12;
const GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13;
const GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14;
const GL_PACK_ROW_BYTES_APPLE = 0x8A15;
const GL_UNPACK_ROW_BYTES_APPLE = 0x8A16;
const GL_RELEASED_APPLE = 0x8A19;
const GL_VOLATILE_APPLE = 0x8A1A;
const GL_RETAINED_APPLE = 0x8A1B;
const GL_UNDEFINED_APPLE = 0x8A1C;
const GL_PURGEABLE_APPLE = 0x8A1D;
const GL_RGB_422_APPLE = 0x8A1F;
const GL_UNIFORM_BUFFER_BINDING = 0x8A28;
const GL_UNIFORM_BUFFER_START = 0x8A29;
const GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
const GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
const GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = 0x8A2C;
const GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = 0x8A2C;
const GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
const GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
const GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
const GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8A32;
const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8A32;
const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
const GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
const GL_UNIFORM_TYPE = 0x8A37;
const GL_UNIFORM_SIZE = 0x8A38;
const GL_UNIFORM_NAME_LENGTH = 0x8A39;
const GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
const GL_UNIFORM_OFFSET = 0x8A3B;
const GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
const GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
const GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
const GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
const GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
const GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48;
const GL_DECODE_EXT = 0x8A49;
const GL_SKIP_DECODE_EXT = 0x8A4A;
const GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F;
const GL_RGB_RAW_422_APPLE = 0x8A51;
const GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52;
const GL_SYNC_OBJECT_APPLE = 0x8A53;
const GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = 0x8A54;
const GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = 0x8A55;
const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = 0x8A56;
const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = 0x8A57;
const GL_FRAGMENT_SHADER = 0x8B30;
const GL_FRAGMENT_SHADER_ARB = 0x8B30;
const GL_VERTEX_SHADER = 0x8B31;
const GL_VERTEX_SHADER_ARB = 0x8B31;
const GL_PROGRAM_OBJECT_ARB = 0x8B40;
const GL_PROGRAM_OBJECT_EXT = 0x8B40;
const GL_SHADER_OBJECT_ARB = 0x8B48;
const GL_SHADER_OBJECT_EXT = 0x8B48;
const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49;
const GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
const GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A;
const GL_MAX_VARYING_FLOATS = 0x8B4B;
const GL_MAX_VARYING_COMPONENTS = 0x8B4B;
const GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B;
const GL_MAX_VARYING_FLOATS_ARB = 0x8B4B;
const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C;
const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D;
const GL_OBJECT_TYPE_ARB = 0x8B4E;
const GL_SHADER_TYPE = 0x8B4F;
const GL_OBJECT_SUBTYPE_ARB = 0x8B4F;
const GL_FLOAT_VEC2 = 0x8B50;
const GL_FLOAT_VEC2_ARB = 0x8B50;
const GL_FLOAT_VEC3 = 0x8B51;
const GL_FLOAT_VEC3_ARB = 0x8B51;
const GL_FLOAT_VEC4 = 0x8B52;
const GL_FLOAT_VEC4_ARB = 0x8B52;
const GL_INT_VEC2 = 0x8B53;
const GL_INT_VEC2_ARB = 0x8B53;
const GL_INT_VEC3 = 0x8B54;
const GL_INT_VEC3_ARB = 0x8B54;
const GL_INT_VEC4 = 0x8B55;
const GL_INT_VEC4_ARB = 0x8B55;
const GL_BOOL = 0x8B56;
const GL_BOOL_ARB = 0x8B56;
const GL_BOOL_VEC2 = 0x8B57;
const GL_BOOL_VEC2_ARB = 0x8B57;
const GL_BOOL_VEC3 = 0x8B58;
const GL_BOOL_VEC3_ARB = 0x8B58;
const GL_BOOL_VEC4 = 0x8B59;
const GL_BOOL_VEC4_ARB = 0x8B59;
const GL_SAMPLER_1D = 0x8B5D;
const GL_SAMPLER_1D_ARB = 0x8B5D;
const GL_SAMPLER_2D = 0x8B5E;
const GL_SAMPLER_2D_ARB = 0x8B5E;
const GL_SAMPLER_3D = 0x8B5F;
const GL_SAMPLER_3D_ARB = 0x8B5F;
const GL_SAMPLER_3D_OES = 0x8B5F;
const GL_SAMPLER_CUBE = 0x8B60;
const GL_SAMPLER_CUBE_ARB = 0x8B60;
const GL_SAMPLER_1D_SHADOW = 0x8B61;
const GL_SAMPLER_1D_SHADOW_ARB = 0x8B61;
const GL_SAMPLER_2D_SHADOW = 0x8B62;
const GL_SAMPLER_2D_SHADOW_ARB = 0x8B62;
const GL_SAMPLER_2D_SHADOW_EXT = 0x8B62;
const GL_SAMPLER_2D_RECT = 0x8B63;
const GL_SAMPLER_2D_RECT_ARB = 0x8B63;
const GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;
const GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
const GL_DELETE_STATUS = 0x8B80;
const GL_OBJECT_DELETE_STATUS_ARB = 0x8B80;
const GL_COMPILE_STATUS = 0x8B81;
const GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81;
const GL_LINK_STATUS = 0x8B82;
const GL_OBJECT_LINK_STATUS_ARB = 0x8B82;
const GL_VALIDATE_STATUS = 0x8B83;
const GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
const GL_INFO_LOG_LENGTH = 0x8B84;
const GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
const GL_ATTACHED_SHADERS = 0x8B85;
const GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
const GL_ACTIVE_UNIFORMS = 0x8B86;
const GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
const GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
const GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
const GL_SHADER_SOURCE_LENGTH = 0x8B88;
const GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;
const GL_ACTIVE_ATTRIBUTES = 0x8B89;
const GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89;
const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
const GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A;
const GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B;
const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;
const GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
const GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C;
const GL_CURRENT_PROGRAM = 0x8B8D;
const GL_PALETTE4_RGB8_OES = 0x8B90;
const GL_PALETTE4_RGBA8_OES = 0x8B91;
const GL_PALETTE4_R5_G6_B5_OES = 0x8B92;
const GL_PALETTE4_RGBA4_OES = 0x8B93;
const GL_PALETTE4_RGB5_A1_OES = 0x8B94;
const GL_PALETTE8_RGB8_OES = 0x8B95;
const GL_PALETTE8_RGBA8_OES = 0x8B96;
const GL_PALETTE8_R5_G6_B5_OES = 0x8B97;
const GL_PALETTE8_RGBA4_OES = 0x8B98;
const GL_PALETTE8_RGB5_A1_OES = 0x8B99;
const GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
const GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A;
const GL_POINT_SIZE_ARRAY_OES = 0x8B9C;
const GL_TEXTURE_CROP_RECT_OES = 0x8B9D;
const GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 0x8B9F;
const GL_FRAGMENT_PROGRAM_POSITION_MESA = 0x8BB0;
const GL_FRAGMENT_PROGRAM_CALLBACK_MESA = 0x8BB1;
const GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB2;
const GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = 0x8BB3;
const GL_VERTEX_PROGRAM_POSITION_MESA = 0x8BB4;
const GL_VERTEX_PROGRAM_CALLBACK_MESA = 0x8BB5;
const GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB6;
const GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA = 0x8BB7;
const GL_TILE_RASTER_ORDER_FIXED_MESA = 0x8BB8;
const GL_TILE_RASTER_ORDER_INCREASING_X_MESA = 0x8BB9;
const GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = 0x8BBA;
const GL_FRAMEBUFFER_FLIP_Y_MESA = 0x8BBB;
const GL_FRAMEBUFFER_FLIP_X_MESA = 0x8BBC;
const GL_FRAMEBUFFER_SWAP_XY_MESA = 0x8BBD;
const GL_COUNTER_TYPE_AMD = 0x8BC0;
const GL_COUNTER_RANGE_AMD = 0x8BC1;
const GL_UNSIGNED_INT64_AMD = 0x8BC2;
const GL_PERCENTAGE_AMD = 0x8BC3;
const GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4;
const GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5;
const GL_PERFMON_RESULT_AMD = 0x8BC6;
const GL_TEXTURE_WIDTH_QCOM = 0x8BD2;
const GL_TEXTURE_HEIGHT_QCOM = 0x8BD3;
const GL_TEXTURE_DEPTH_QCOM = 0x8BD4;
const GL_TEXTURE_TYPE_QCOM = 0x8BD7;
const GL_TEXTURE_IMAGE_VALID_QCOM = 0x8BD8;
const GL_TEXTURE_NUM_LEVELS_QCOM = 0x8BD9;
const GL_TEXTURE_TARGET_QCOM = 0x8BDA;
const GL_TEXTURE_OBJECT_VALID_QCOM = 0x8BDB;
const GL_STATE_RESTORE = 0x8BDC;
const GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = 0x8BE7;
const GL_TEXTURE_PROTECTED_EXT = 0x8BFA;
const GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM = 0x8BFB;
const GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = 0x8BFC;
const GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM = 0x8BFD;
const GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM = 0x8BFE;
const GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM = 0x8BFF;
const GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;
const GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;
const GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;
const GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;
const GL_MODULATE_COLOR_IMG = 0x8C04;
const GL_RECIP_ADD_SIGNED_ALPHA_IMG = 0x8C05;
const GL_TEXTURE_ALPHA_MODULATE_IMG = 0x8C06;
const GL_FACTOR_ALPHA_MODULATE_IMG = 0x8C07;
const GL_FRAGMENT_ALPHA_MODULATE_IMG = 0x8C08;
const GL_ADD_BLEND_IMG = 0x8C09;
const GL_SGX_BINARY_IMG = 0x8C0A;
const GL_TEXTURE_RED_TYPE = 0x8C10;
const GL_TEXTURE_RED_TYPE_ARB = 0x8C10;
const GL_TEXTURE_GREEN_TYPE = 0x8C11;
const GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11;
const GL_TEXTURE_BLUE_TYPE = 0x8C12;
const GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12;
const GL_TEXTURE_ALPHA_TYPE = 0x8C13;
const GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13;
const GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
const GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14;
const GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
const GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15;
const GL_TEXTURE_DEPTH_TYPE = 0x8C16;
const GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16;
const GL_UNSIGNED_NORMALIZED = 0x8C17;
const GL_UNSIGNED_NORMALIZED_ARB = 0x8C17;
const GL_UNSIGNED_NORMALIZED_EXT = 0x8C17;
const GL_TEXTURE_1D_ARRAY = 0x8C18;
const GL_TEXTURE_1D_ARRAY_EXT = 0x8C18;
const GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
const GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19;
const GL_TEXTURE_2D_ARRAY = 0x8C1A;
const GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A;
const GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
const GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B;
const GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
const GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C;
const GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
const GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D;
const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29;
const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29;
const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = 0x8C29;
const GL_TEXTURE_BUFFER = 0x8C2A;
const GL_TEXTURE_BUFFER_ARB = 0x8C2A;
const GL_TEXTURE_BUFFER_EXT = 0x8C2A;
const GL_TEXTURE_BUFFER_OES = 0x8C2A;
const GL_TEXTURE_BUFFER_BINDING = 0x8C2A;
const GL_TEXTURE_BUFFER_BINDING_EXT = 0x8C2A;
const GL_TEXTURE_BUFFER_BINDING_OES = 0x8C2A;
const GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
const GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B;
const GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B;
const GL_MAX_TEXTURE_BUFFER_SIZE_OES = 0x8C2B;
const GL_TEXTURE_BINDING_BUFFER = 0x8C2C;
const GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C;
const GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C;
const GL_TEXTURE_BINDING_BUFFER_OES = 0x8C2C;
const GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D;
const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D;
const GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = 0x8C2D;
const GL_ANY_SAMPLES_PASSED = 0x8C2F;
const GL_ANY_SAMPLES_PASSED_EXT = 0x8C2F;
const GL_SAMPLE_SHADING = 0x8C36;
const GL_SAMPLE_SHADING_ARB = 0x8C36;
const GL_SAMPLE_SHADING_OES = 0x8C36;
const GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37;
const GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37;
const GL_MIN_SAMPLE_SHADING_VALUE_OES = 0x8C37;
const GL_R11F_G11F_B10F = 0x8C3A;
const GL_R11F_G11F_B10F_APPLE = 0x8C3A;
const GL_R11F_G11F_B10F_EXT = 0x8C3A;
const GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
const GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = 0x8C3B;
const GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B;
const GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C;
const GL_RGB9_E5 = 0x8C3D;
const GL_RGB9_E5_APPLE = 0x8C3D;
const GL_RGB9_E5_EXT = 0x8C3D;
const GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
const GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = 0x8C3E;
const GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E;
const GL_TEXTURE_SHARED_SIZE = 0x8C3F;
const GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F;
const GL_SRGB = 0x8C40;
const GL_SRGB_EXT = 0x8C40;
const GL_SRGB8 = 0x8C41;
const GL_SRGB8_EXT = 0x8C41;
const GL_SRGB_ALPHA = 0x8C42;
const GL_SRGB_ALPHA_EXT = 0x8C42;
const GL_SRGB8_ALPHA8 = 0x8C43;
const GL_SRGB8_ALPHA8_EXT = 0x8C43;
const GL_SLUMINANCE_ALPHA = 0x8C44;
const GL_SLUMINANCE_ALPHA_EXT = 0x8C44;
const GL_SLUMINANCE8_ALPHA8 = 0x8C45;
const GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45;
const GL_SLUMINANCE = 0x8C46;
const GL_SLUMINANCE_EXT = 0x8C46;
const GL_SLUMINANCE8 = 0x8C47;
const GL_SLUMINANCE8_EXT = 0x8C47;
const GL_COMPRESSED_SRGB = 0x8C48;
const GL_COMPRESSED_SRGB_EXT = 0x8C48;
const GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
const GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49;
const GL_COMPRESSED_SLUMINANCE = 0x8C4A;
const GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A;
const GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
const GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B;
const GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;
const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;
const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;
const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;
const GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70;
const GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71;
const GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72;
const GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73;
const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;
const GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
const GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80;
const GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
const GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83;
const GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
const GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84;
const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85;
const GL_PRIMITIVES_GENERATED = 0x8C87;
const GL_PRIMITIVES_GENERATED_EXT = 0x8C87;
const GL_PRIMITIVES_GENERATED_OES = 0x8C87;
const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88;
const GL_RASTERIZER_DISCARD = 0x8C89;
const GL_RASTERIZER_DISCARD_EXT = 0x8C89;
const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B;
const GL_INTERLEAVED_ATTRIBS = 0x8C8C;
const GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C;
const GL_SEPARATE_ATTRIBS = 0x8C8D;
const GL_SEPARATE_ATTRIBS_EXT = 0x8C8D;
const GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
const GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E;
const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F;
const GL_ATC_RGB_AMD = 0x8C92;
const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = 0x8C93;
const GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
const GL_LOWER_LEFT = 0x8CA1;
const GL_LOWER_LEFT_EXT = 0x8CA1;
const GL_UPPER_LEFT = 0x8CA2;
const GL_UPPER_LEFT_EXT = 0x8CA2;
const GL_STENCIL_BACK_REF = 0x8CA3;
const GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
const GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
const GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
const GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6;
const GL_DRAW_FRAMEBUFFER_BINDING_APPLE = 0x8CA6;
const GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
const GL_FRAMEBUFFER_BINDING = 0x8CA6;
const GL_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6;
const GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
const GL_FRAMEBUFFER_BINDING_OES = 0x8CA6;
const GL_RENDERBUFFER_BINDING = 0x8CA7;
const GL_RENDERBUFFER_BINDING_ANGLE = 0x8CA7;
const GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;
const GL_RENDERBUFFER_BINDING_OES = 0x8CA7;
const GL_READ_FRAMEBUFFER = 0x8CA8;
const GL_READ_FRAMEBUFFER_ANGLE = 0x8CA8;
const GL_READ_FRAMEBUFFER_APPLE = 0x8CA8;
const GL_READ_FRAMEBUFFER_EXT = 0x8CA8;
const GL_DRAW_FRAMEBUFFER = 0x8CA9;
const GL_DRAW_FRAMEBUFFER_ANGLE = 0x8CA9;
const GL_DRAW_FRAMEBUFFER_APPLE = 0x8CA9;
const GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9;
const GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
const GL_READ_FRAMEBUFFER_BINDING_ANGLE = 0x8CAA;
const GL_READ_FRAMEBUFFER_BINDING_APPLE = 0x8CAA;
const GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;
const GL_RENDERBUFFER_SAMPLES = 0x8CAB;
const GL_RENDERBUFFER_SAMPLES_ANGLE = 0x8CAB;
const GL_RENDERBUFFER_SAMPLES_APPLE = 0x8CAB;
const GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;
const GL_DEPTH_COMPONENT32F = 0x8CAC;
const GL_DEPTH32F_STENCIL8 = 0x8CAD;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 0x8CD0;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 0x8CD1;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 0x8CD2;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 0x8CD3;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = 0x8CD4;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4;
const GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
const GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;
const GL_FRAMEBUFFER_COMPLETE_OES = 0x8CD5;
const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;
const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 0x8CD6;
const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;
const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 0x8CD7;
const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;
const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;
const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 0x8CD9;
const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;
const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = 0x8CDB;
const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;
const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = 0x8CDC;
const GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
const GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;
const GL_FRAMEBUFFER_UNSUPPORTED_OES = 0x8CDD;
const GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;
const GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;
const GL_COLOR_ATTACHMENT0 = 0x8CE0;
const GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;
const GL_COLOR_ATTACHMENT0_OES = 0x8CE0;
const GL_COLOR_ATTACHMENT1 = 0x8CE1;
const GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;
const GL_COLOR_ATTACHMENT2 = 0x8CE2;
const GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;
const GL_COLOR_ATTACHMENT3 = 0x8CE3;
const GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;
const GL_COLOR_ATTACHMENT4 = 0x8CE4;
const GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;
const GL_COLOR_ATTACHMENT5 = 0x8CE5;
const GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;
const GL_COLOR_ATTACHMENT6 = 0x8CE6;
const GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;
const GL_COLOR_ATTACHMENT7 = 0x8CE7;
const GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;
const GL_COLOR_ATTACHMENT8 = 0x8CE8;
const GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;
const GL_COLOR_ATTACHMENT9 = 0x8CE9;
const GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;
const GL_COLOR_ATTACHMENT10 = 0x8CEA;
const GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;
const GL_COLOR_ATTACHMENT11 = 0x8CEB;
const GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;
const GL_COLOR_ATTACHMENT12 = 0x8CEC;
const GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;
const GL_COLOR_ATTACHMENT13 = 0x8CED;
const GL_COLOR_ATTACHMENT13_EXT = 0x8CED;
const GL_COLOR_ATTACHMENT14 = 0x8CEE;
const GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;
const GL_COLOR_ATTACHMENT15 = 0x8CEF;
const GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;
const GL_COLOR_ATTACHMENT16 = 0x8CF0;
const GL_COLOR_ATTACHMENT17 = 0x8CF1;
const GL_COLOR_ATTACHMENT18 = 0x8CF2;
const GL_COLOR_ATTACHMENT19 = 0x8CF3;
const GL_COLOR_ATTACHMENT20 = 0x8CF4;
const GL_COLOR_ATTACHMENT21 = 0x8CF5;
const GL_COLOR_ATTACHMENT22 = 0x8CF6;
const GL_COLOR_ATTACHMENT23 = 0x8CF7;
const GL_COLOR_ATTACHMENT24 = 0x8CF8;
const GL_COLOR_ATTACHMENT25 = 0x8CF9;
const GL_COLOR_ATTACHMENT26 = 0x8CFA;
const GL_COLOR_ATTACHMENT27 = 0x8CFB;
const GL_COLOR_ATTACHMENT28 = 0x8CFC;
const GL_COLOR_ATTACHMENT29 = 0x8CFD;
const GL_COLOR_ATTACHMENT30 = 0x8CFE;
const GL_COLOR_ATTACHMENT31 = 0x8CFF;
const GL_DEPTH_ATTACHMENT = 0x8D00;
const GL_DEPTH_ATTACHMENT_EXT = 0x8D00;
const GL_DEPTH_ATTACHMENT_OES = 0x8D00;
const GL_STENCIL_ATTACHMENT = 0x8D20;
const GL_STENCIL_ATTACHMENT_EXT = 0x8D20;
const GL_STENCIL_ATTACHMENT_OES = 0x8D20;
const GL_FRAMEBUFFER = 0x8D40;
const GL_FRAMEBUFFER_EXT = 0x8D40;
const GL_FRAMEBUFFER_OES = 0x8D40;
const GL_RENDERBUFFER = 0x8D41;
const GL_RENDERBUFFER_EXT = 0x8D41;
const GL_RENDERBUFFER_OES = 0x8D41;
const GL_RENDERBUFFER_WIDTH = 0x8D42;
const GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;
const GL_RENDERBUFFER_WIDTH_OES = 0x8D42;
const GL_RENDERBUFFER_HEIGHT = 0x8D43;
const GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;
const GL_RENDERBUFFER_HEIGHT_OES = 0x8D43;
const GL_STENCIL_INDEX1 = 0x8D46;
const GL_STENCIL_INDEX1_EXT = 0x8D46;
const GL_STENCIL_INDEX1_OES = 0x8D46;
const GL_STENCIL_INDEX4 = 0x8D47;
const GL_STENCIL_INDEX4_EXT = 0x8D47;
const GL_STENCIL_INDEX4_OES = 0x8D47;
const GL_STENCIL_INDEX8 = 0x8D48;
const GL_STENCIL_INDEX8_EXT = 0x8D48;
const GL_STENCIL_INDEX8_OES = 0x8D48;
const GL_STENCIL_INDEX16 = 0x8D49;
const GL_STENCIL_INDEX16_EXT = 0x8D49;
const GL_RENDERBUFFER_RED_SIZE = 0x8D50;
const GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;
const GL_RENDERBUFFER_RED_SIZE_OES = 0x8D50;
const GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;
const GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;
const GL_RENDERBUFFER_GREEN_SIZE_OES = 0x8D51;
const GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;
const GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;
const GL_RENDERBUFFER_BLUE_SIZE_OES = 0x8D52;
const GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;
const GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;
const GL_RENDERBUFFER_ALPHA_SIZE_OES = 0x8D53;
const GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;
const GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;
const GL_RENDERBUFFER_DEPTH_SIZE_OES = 0x8D54;
const GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;
const GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;
const GL_RENDERBUFFER_STENCIL_SIZE_OES = 0x8D55;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = 0x8D56;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = 0x8D56;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56;
const GL_MAX_SAMPLES = 0x8D57;
const GL_MAX_SAMPLES_ANGLE = 0x8D57;
const GL_MAX_SAMPLES_APPLE = 0x8D57;
const GL_MAX_SAMPLES_EXT = 0x8D57;
const GL_TEXTURE_GEN_STR_OES = 0x8D60;
const GL_HALF_FLOAT_OES = 0x8D61;
const GL_RGB565_OES = 0x8D62;
const GL_RGB565 = 0x8D62;
const GL_ETC1_RGB8_OES = 0x8D64;
const GL_TEXTURE_EXTERNAL_OES = 0x8D65;
const GL_SAMPLER_EXTERNAL_OES = 0x8D66;
const GL_TEXTURE_BINDING_EXTERNAL_OES = 0x8D67;
const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 0x8D68;
const GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69;
const GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
const GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 0x8D6A;
const GL_MAX_ELEMENT_INDEX = 0x8D6B;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = 0x8D6C;
const GL_RGBA32UI = 0x8D70;
const GL_RGBA32UI_EXT = 0x8D70;
const GL_RGB32UI = 0x8D71;
const GL_RGB32UI_EXT = 0x8D71;
const GL_ALPHA32UI_EXT = 0x8D72;
const GL_INTENSITY32UI_EXT = 0x8D73;
const GL_LUMINANCE32UI_EXT = 0x8D74;
const GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75;
const GL_RGBA16UI = 0x8D76;
const GL_RGBA16UI_EXT = 0x8D76;
const GL_RGB16UI = 0x8D77;
const GL_RGB16UI_EXT = 0x8D77;
const GL_ALPHA16UI_EXT = 0x8D78;
const GL_INTENSITY16UI_EXT = 0x8D79;
const GL_LUMINANCE16UI_EXT = 0x8D7A;
const GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B;
const GL_RGBA8UI = 0x8D7C;
const GL_RGBA8UI_EXT = 0x8D7C;
const GL_RGB8UI = 0x8D7D;
const GL_RGB8UI_EXT = 0x8D7D;
const GL_ALPHA8UI_EXT = 0x8D7E;
const GL_INTENSITY8UI_EXT = 0x8D7F;
const GL_LUMINANCE8UI_EXT = 0x8D80;
const GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81;
const GL_RGBA32I = 0x8D82;
const GL_RGBA32I_EXT = 0x8D82;
const GL_RGB32I = 0x8D83;
const GL_RGB32I_EXT = 0x8D83;
const GL_ALPHA32I_EXT = 0x8D84;
const GL_INTENSITY32I_EXT = 0x8D85;
const GL_LUMINANCE32I_EXT = 0x8D86;
const GL_LUMINANCE_ALPHA32I_EXT = 0x8D87;
const GL_RGBA16I = 0x8D88;
const GL_RGBA16I_EXT = 0x8D88;
const GL_RGB16I = 0x8D89;
const GL_RGB16I_EXT = 0x8D89;
const GL_ALPHA16I_EXT = 0x8D8A;
const GL_INTENSITY16I_EXT = 0x8D8B;
const GL_LUMINANCE16I_EXT = 0x8D8C;
const GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D;
const GL_RGBA8I = 0x8D8E;
const GL_RGBA8I_EXT = 0x8D8E;
const GL_RGB8I = 0x8D8F;
const GL_RGB8I_EXT = 0x8D8F;
const GL_ALPHA8I_EXT = 0x8D90;
const GL_INTENSITY8I_EXT = 0x8D91;
const GL_LUMINANCE8I_EXT = 0x8D92;
const GL_LUMINANCE_ALPHA8I_EXT = 0x8D93;
const GL_RED_INTEGER = 0x8D94;
const GL_RED_INTEGER_EXT = 0x8D94;
const GL_GREEN_INTEGER = 0x8D95;
const GL_GREEN_INTEGER_EXT = 0x8D95;
const GL_BLUE_INTEGER = 0x8D96;
const GL_BLUE_INTEGER_EXT = 0x8D96;
const GL_ALPHA_INTEGER = 0x8D97;
const GL_ALPHA_INTEGER_EXT = 0x8D97;
const GL_RGB_INTEGER = 0x8D98;
const GL_RGB_INTEGER_EXT = 0x8D98;
const GL_RGBA_INTEGER = 0x8D99;
const GL_RGBA_INTEGER_EXT = 0x8D99;
const GL_BGR_INTEGER = 0x8D9A;
const GL_BGR_INTEGER_EXT = 0x8D9A;
const GL_BGRA_INTEGER = 0x8D9B;
const GL_BGRA_INTEGER_EXT = 0x8D9B;
const GL_LUMINANCE_INTEGER_EXT = 0x8D9C;
const GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;
const GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;
const GL_INT_2_10_10_10_REV = 0x8D9F;
const GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7;
const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7;
const GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = 0x8DA7;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = 0x8DA8;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9;
const GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
const GL_SHADER_INCLUDE_ARB = 0x8DAE;
const GL_FRAMEBUFFER_SRGB = 0x8DB9;
const GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9;
const GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA;
const GL_COMPRESSED_RED_RGTC1 = 0x8DBB;
const GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB;
const GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
const GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;
const GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;
const GL_COMPRESSED_RG_RGTC2 = 0x8DBD;
const GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;
const GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
const GL_SAMPLER_1D_ARRAY = 0x8DC0;
const GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0;
const GL_SAMPLER_2D_ARRAY = 0x8DC1;
const GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1;
const GL_SAMPLER_BUFFER = 0x8DC2;
const GL_SAMPLER_BUFFER_EXT = 0x8DC2;
const GL_SAMPLER_BUFFER_OES = 0x8DC2;
const GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
const GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3;
const GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
const GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;
const GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
const GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5;
const GL_UNSIGNED_INT_VEC2 = 0x8DC6;
const GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6;
const GL_UNSIGNED_INT_VEC3 = 0x8DC7;
const GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7;
const GL_UNSIGNED_INT_VEC4 = 0x8DC8;
const GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8;
const GL_INT_SAMPLER_1D = 0x8DC9;
const GL_INT_SAMPLER_1D_EXT = 0x8DC9;
const GL_INT_SAMPLER_2D = 0x8DCA;
const GL_INT_SAMPLER_2D_EXT = 0x8DCA;
const GL_INT_SAMPLER_3D = 0x8DCB;
const GL_INT_SAMPLER_3D_EXT = 0x8DCB;
const GL_INT_SAMPLER_CUBE = 0x8DCC;
const GL_INT_SAMPLER_CUBE_EXT = 0x8DCC;
const GL_INT_SAMPLER_2D_RECT = 0x8DCD;
const GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD;
const GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
const GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE;
const GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
const GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF;
const GL_INT_SAMPLER_BUFFER = 0x8DD0;
const GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0;
const GL_INT_SAMPLER_BUFFER_OES = 0x8DD0;
const GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
const GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1;
const GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
const GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2;
const GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
const GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3;
const GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
const GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4;
const GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
const GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5;
const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6;
const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7;
const GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
const GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8;
const GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = 0x8DD8;
const GL_GEOMETRY_SHADER = 0x8DD9;
const GL_GEOMETRY_SHADER_ARB = 0x8DD9;
const GL_GEOMETRY_SHADER_EXT = 0x8DD9;
const GL_GEOMETRY_SHADER_OES = 0x8DD9;
const GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA;
const GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA;
const GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB;
const GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB;
const GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC;
const GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC;
const GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD;
const GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD;
const GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE;
const GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE;
const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF;
const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF;
const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8DDF;
const GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
const GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0;
const GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0;
const GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = 0x8DE0;
const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1;
const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1;
const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = 0x8DE1;
const GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2;
const GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3;
const GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4;
const GL_ACTIVE_SUBROUTINES = 0x8DE5;
const GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
const GL_MAX_SUBROUTINES = 0x8DE7;
const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
const GL_NAMED_STRING_LENGTH_ARB = 0x8DE9;
const GL_NAMED_STRING_TYPE_ARB = 0x8DEA;
const GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED;
const GL_UNIFORM_BUFFER_EXT = 0x8DEE;
const GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF;
const GL_LOW_FLOAT = 0x8DF0;
const GL_MEDIUM_FLOAT = 0x8DF1;
const GL_HIGH_FLOAT = 0x8DF2;
const GL_LOW_INT = 0x8DF3;
const GL_MEDIUM_INT = 0x8DF4;
const GL_HIGH_INT = 0x8DF5;
const GL_UNSIGNED_INT_10_10_10_2_OES = 0x8DF6;
const GL_INT_10_10_10_2_OES = 0x8DF7;
const GL_SHADER_COMPILER = 0x8DFA;
const GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
const GL_MAX_VARYING_VECTORS = 0x8DFC;
const GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
const GL_QUERY_WAIT = 0x8E13;
const GL_QUERY_NO_WAIT = 0x8E14;
const GL_QUERY_BY_REGION_WAIT = 0x8E15;
const GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;
const GL_POLYGON_OFFSET_CLAMP = 0x8E1B;
const GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B;
const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E1E;
const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E1E;
const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E1F;
const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E1F;
const GL_TRANSFORM_FEEDBACK = 0x8E22;
const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;
const GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;
const GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
const GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25;
const GL_TIMESTAMP = 0x8E28;
const GL_TIMESTAMP_EXT = 0x8E28;
const GL_TEXTURE_SWIZZLE_R = 0x8E42;
const GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42;
const GL_TEXTURE_SWIZZLE_G = 0x8E43;
const GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43;
const GL_TEXTURE_SWIZZLE_B = 0x8E44;
const GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44;
const GL_TEXTURE_SWIZZLE_A = 0x8E45;
const GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45;
const GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
const GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46;
const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
const GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
const GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
const GL_COMPATIBLE_SUBROUTINES = 0x8E4B;
const GL_PROVOKING_VERTEX = 0x8E4F;
const GL_PROVOKING_VERTEX_EXT = 0x8E4F;
const GL_SAMPLE_POSITION = 0x8E50;
const GL_SAMPLE_LOCATION_ARB = 0x8E50;
const GL_SAMPLE_MASK = 0x8E51;
const GL_SAMPLE_MASK_VALUE = 0x8E52;
const GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5B;
const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5C;
const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = 0x8E5D;
const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E;
const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F;
const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
const GL_MAX_VERTEX_STREAMS = 0x8E71;
const GL_PATCH_VERTICES = 0x8E72;
const GL_PATCH_VERTICES_EXT = 0x8E72;
const GL_PATCH_VERTICES_OES = 0x8E72;
const GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
const GL_PATCH_DEFAULT_INNER_LEVEL_EXT = 0x8E73;
const GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
const GL_PATCH_DEFAULT_OUTER_LEVEL_EXT = 0x8E74;
const GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
const GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = 0x8E75;
const GL_TESS_CONTROL_OUTPUT_VERTICES_OES = 0x8E75;
const GL_TESS_GEN_MODE = 0x8E76;
const GL_TESS_GEN_MODE_EXT = 0x8E76;
const GL_TESS_GEN_MODE_OES = 0x8E76;
const GL_TESS_GEN_SPACING = 0x8E77;
const GL_TESS_GEN_SPACING_EXT = 0x8E77;
const GL_TESS_GEN_SPACING_OES = 0x8E77;
const GL_TESS_GEN_VERTEX_ORDER = 0x8E78;
const GL_TESS_GEN_VERTEX_ORDER_EXT = 0x8E78;
const GL_TESS_GEN_VERTEX_ORDER_OES = 0x8E78;
const GL_TESS_GEN_POINT_MODE = 0x8E79;
const GL_TESS_GEN_POINT_MODE_EXT = 0x8E79;
const GL_TESS_GEN_POINT_MODE_OES = 0x8E79;
const GL_ISOLINES = 0x8E7A;
const GL_ISOLINES_EXT = 0x8E7A;
const GL_ISOLINES_OES = 0x8E7A;
const GL_FRACTIONAL_ODD = 0x8E7B;
const GL_FRACTIONAL_ODD_EXT = 0x8E7B;
const GL_FRACTIONAL_ODD_OES = 0x8E7B;
const GL_FRACTIONAL_EVEN = 0x8E7C;
const GL_FRACTIONAL_EVEN_EXT = 0x8E7C;
const GL_FRACTIONAL_EVEN_OES = 0x8E7C;
const GL_MAX_PATCH_VERTICES = 0x8E7D;
const GL_MAX_PATCH_VERTICES_EXT = 0x8E7D;
const GL_MAX_PATCH_VERTICES_OES = 0x8E7D;
const GL_MAX_TESS_GEN_LEVEL = 0x8E7E;
const GL_MAX_TESS_GEN_LEVEL_EXT = 0x8E7E;
const GL_MAX_TESS_GEN_LEVEL_OES = 0x8E7E;
const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E7F;
const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E7F;
const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E80;
const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E80;
const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = 0x8E81;
const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = 0x8E81;
const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = 0x8E82;
const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = 0x8E82;
const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = 0x8E83;
const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = 0x8E83;
const GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84;
const GL_MAX_TESS_PATCH_COMPONENTS_EXT = 0x8E84;
const GL_MAX_TESS_PATCH_COMPONENTS_OES = 0x8E84;
const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8E85;
const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = 0x8E85;
const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = 0x8E86;
const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = 0x8E86;
const GL_TESS_EVALUATION_SHADER = 0x8E87;
const GL_TESS_EVALUATION_SHADER_EXT = 0x8E87;
const GL_TESS_EVALUATION_SHADER_OES = 0x8E87;
const GL_TESS_CONTROL_SHADER = 0x8E88;
const GL_TESS_CONTROL_SHADER_EXT = 0x8E88;
const GL_TESS_CONTROL_SHADER_OES = 0x8E88;
const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = 0x8E89;
const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = 0x8E89;
const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = 0x8E8A;
const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = 0x8E8A;
const GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C;
const GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C;
const GL_COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8E8C;
const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D;
const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D;
const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = 0x8E8D;
const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E;
const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E;
const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = 0x8E8E;
const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F;
const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F;
const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = 0x8E8F;
const GL_TRP_IMG = 0x8EA0;
const GL_TRP_ERROR_CONTEXT_RESET_IMG = 0x8EA1;
const GL_TRP_UNSUPPORTED_CONTEXT_IMG = 0x8EA2;
const GL_INCLUSIVE_EXT = 0x8F10;
const GL_EXCLUSIVE_EXT = 0x8F11;
const GL_WINDOW_RECTANGLE_EXT = 0x8F12;
const GL_WINDOW_RECTANGLE_MODE_EXT = 0x8F13;
const GL_MAX_WINDOW_RECTANGLES_EXT = 0x8F14;
const GL_NUM_WINDOW_RECTANGLES_EXT = 0x8F15;
const GL_COPY_READ_BUFFER = 0x8F36;
const GL_COPY_READ_BUFFER_BINDING = 0x8F36;
const GL_COPY_WRITE_BUFFER = 0x8F37;
const GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
const GL_MAX_IMAGE_UNITS = 0x8F38;
const GL_MAX_IMAGE_UNITS_EXT = 0x8F38;
const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39;
const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
const GL_IMAGE_BINDING_NAME = 0x8F3A;
const GL_IMAGE_BINDING_NAME_EXT = 0x8F3A;
const GL_IMAGE_BINDING_LEVEL = 0x8F3B;
const GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B;
const GL_IMAGE_BINDING_LAYERED = 0x8F3C;
const GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C;
const GL_IMAGE_BINDING_LAYER = 0x8F3D;
const GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D;
const GL_IMAGE_BINDING_ACCESS = 0x8F3E;
const GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E;
const GL_DRAW_INDIRECT_BUFFER = 0x8F3F;
const GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
const GL_VERTEX_BINDING_BUFFER = 0x8F4F;
const GL_MALI_SHADER_BINARY_ARM = 0x8F60;
const GL_MALI_PROGRAM_BINARY_ARM = 0x8F61;
const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = 0x8F63;
const GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = 0x8F64;
const GL_FETCH_PER_SAMPLE_ARM = 0x8F65;
const GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = 0x8F66;
const GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = 0x8F67;
const GL_TEXTURE_ASTC_DECODE_PRECISION_EXT = 0x8F69;
const GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM = 0x8F6A;
const GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT = 0x8F6E;
const GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT = 0x8F6F;
const GL_RED_SNORM = 0x8F90;
const GL_RG_SNORM = 0x8F91;
const GL_RGB_SNORM = 0x8F92;
const GL_RGBA_SNORM = 0x8F93;
const GL_R8_SNORM = 0x8F94;
const GL_RG8_SNORM = 0x8F95;
const GL_RGB8_SNORM = 0x8F96;
const GL_RGBA8_SNORM = 0x8F97;
const GL_R16_SNORM = 0x8F98;
const GL_R16_SNORM_EXT = 0x8F98;
const GL_RG16_SNORM = 0x8F99;
const GL_RG16_SNORM_EXT = 0x8F99;
const GL_RGB16_SNORM = 0x8F9A;
const GL_RGB16_SNORM_EXT = 0x8F9A;
const GL_RGBA16_SNORM = 0x8F9B;
const GL_RGBA16_SNORM_EXT = 0x8F9B;
const GL_SIGNED_NORMALIZED = 0x8F9C;
const GL_PRIMITIVE_RESTART = 0x8F9D;
const GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;
const GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F;
const GL_PERFMON_GLOBAL_MODE_QCOM = 0x8FA0;
const GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM = 0x8FA1;
const GL_BINNING_CONTROL_HINT_QCOM = 0x8FB0;
const GL_CPU_OPTIMIZED_QCOM = 0x8FB1;
const GL_GPU_OPTIMIZED_QCOM = 0x8FB2;
const GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = 0x8FB3;
const GL_GPU_DISJOINT_EXT = 0x8FBB;
const GL_SR8_EXT = 0x8FBD;
const GL_SRG8_EXT = 0x8FBE;
const GL_SHADER_BINARY_VIV = 0x8FC4;
const GL_INT64_VEC2_ARB = 0x8FE9;
const GL_INT64_VEC3_ARB = 0x8FEA;
const GL_INT64_VEC4_ARB = 0x8FEB;
const GL_UNSIGNED_INT64_VEC2_ARB = 0x8FF5;
const GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6;
const GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7;
const GL_DOUBLE_VEC2 = 0x8FFC;
const GL_DOUBLE_VEC2_EXT = 0x8FFC;
const GL_DOUBLE_VEC3 = 0x8FFD;
const GL_DOUBLE_VEC3_EXT = 0x8FFD;
const GL_DOUBLE_VEC4 = 0x8FFE;
const GL_DOUBLE_VEC4_EXT = 0x8FFE;
const GL_SAMPLER_BUFFER_AMD = 0x9001;
const GL_INT_SAMPLER_BUFFER_AMD = 0x9002;
const GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003;
const GL_TESSELLATION_MODE_AMD = 0x9004;
const GL_TESSELLATION_FACTOR_AMD = 0x9005;
const GL_DISCRETE_AMD = 0x9006;
const GL_CONTINUOUS_AMD = 0x9007;
const GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
const GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009;
const GL_TEXTURE_CUBE_MAP_ARRAY_EXT = 0x9009;
const GL_TEXTURE_CUBE_MAP_ARRAY_OES = 0x9009;
const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A;
const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = 0x900A;
const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = 0x900A;
const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B;
const GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C;
const GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C;
const GL_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900C;
const GL_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900C;
const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D;
const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = 0x900D;
const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = 0x900D;
const GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
const GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E;
const GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900E;
const GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900E;
const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F;
const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900F;
const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900F;
const GL_ALPHA_SNORM = 0x9010;
const GL_LUMINANCE_SNORM = 0x9011;
const GL_LUMINANCE_ALPHA_SNORM = 0x9012;
const GL_INTENSITY_SNORM = 0x9013;
const GL_ALPHA8_SNORM = 0x9014;
const GL_LUMINANCE8_SNORM = 0x9015;
const GL_LUMINANCE8_ALPHA8_SNORM = 0x9016;
const GL_INTENSITY8_SNORM = 0x9017;
const GL_ALPHA16_SNORM = 0x9018;
const GL_LUMINANCE16_SNORM = 0x9019;
const GL_LUMINANCE16_ALPHA16_SNORM = 0x901A;
const GL_INTENSITY16_SNORM = 0x901B;
const GL_FACTOR_MIN_AMD = 0x901C;
const GL_FACTOR_MAX_AMD = 0x901D;
const GL_DEPTH_CLAMP_NEAR_AMD = 0x901E;
const GL_DEPTH_CLAMP_FAR_AMD = 0x901F;
const GL_IMAGE_1D = 0x904C;
const GL_IMAGE_1D_EXT = 0x904C;
const GL_IMAGE_2D = 0x904D;
const GL_IMAGE_2D_EXT = 0x904D;
const GL_IMAGE_3D = 0x904E;
const GL_IMAGE_3D_EXT = 0x904E;
const GL_IMAGE_2D_RECT = 0x904F;
const GL_IMAGE_2D_RECT_EXT = 0x904F;
const GL_IMAGE_CUBE = 0x9050;
const GL_IMAGE_CUBE_EXT = 0x9050;
const GL_IMAGE_BUFFER = 0x9051;
const GL_IMAGE_BUFFER_EXT = 0x9051;
const GL_IMAGE_BUFFER_OES = 0x9051;
const GL_IMAGE_1D_ARRAY = 0x9052;
const GL_IMAGE_1D_ARRAY_EXT = 0x9052;
const GL_IMAGE_2D_ARRAY = 0x9053;
const GL_IMAGE_2D_ARRAY_EXT = 0x9053;
const GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
const GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054;
const GL_IMAGE_CUBE_MAP_ARRAY_OES = 0x9054;
const GL_IMAGE_2D_MULTISAMPLE = 0x9055;
const GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055;
const GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
const GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056;
const GL_INT_IMAGE_1D = 0x9057;
const GL_INT_IMAGE_1D_EXT = 0x9057;
const GL_INT_IMAGE_2D = 0x9058;
const GL_INT_IMAGE_2D_EXT = 0x9058;
const GL_INT_IMAGE_3D = 0x9059;
const GL_INT_IMAGE_3D_EXT = 0x9059;
const GL_INT_IMAGE_2D_RECT = 0x905A;
const GL_INT_IMAGE_2D_RECT_EXT = 0x905A;
const GL_INT_IMAGE_CUBE = 0x905B;
const GL_INT_IMAGE_CUBE_EXT = 0x905B;
const GL_INT_IMAGE_BUFFER = 0x905C;
const GL_INT_IMAGE_BUFFER_EXT = 0x905C;
const GL_INT_IMAGE_BUFFER_OES = 0x905C;
const GL_INT_IMAGE_1D_ARRAY = 0x905D;
const GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D;
const GL_INT_IMAGE_2D_ARRAY = 0x905E;
const GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E;
const GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
const GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F;
const GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x905F;
const GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060;
const GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060;
const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061;
const GL_UNSIGNED_INT_IMAGE_1D = 0x9062;
const GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062;
const GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
const GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063;
const GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
const GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064;
const GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
const GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065;
const GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
const GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066;
const GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
const GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067;
const GL_UNSIGNED_INT_IMAGE_BUFFER_OES = 0x9067;
const GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
const GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068;
const GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
const GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069;
const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A;
const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x906A;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;
const GL_MAX_IMAGE_SAMPLES = 0x906D;
const GL_MAX_IMAGE_SAMPLES_EXT = 0x906D;
const GL_RGB10_A2UI = 0x906F;
const GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA;
const GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB;
const GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
const GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = 0x90CB;
const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = 0x90CB;
const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = 0x90CC;
const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = 0x90CC;
const GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = 0x90CD;
const GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = 0x90CD;
const GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
const GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
const GL_SHADER_STORAGE_BUFFER = 0x90D2;
const GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
const GL_SHADER_STORAGE_BUFFER_START = 0x90D4;
const GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7;
const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = 0x90D7;
const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = 0x90D7;
const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8;
const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = 0x90D8;
const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = 0x90D8;
const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9;
const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = 0x90D9;
const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = 0x90D9;
const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
const GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
const GL_SYNC_X11_FENCE_EXT = 0x90E1;
const GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED;
const GL_DISPATCH_INDIRECT_BUFFER = 0x90EE;
const GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
const GL_COLOR_ATTACHMENT_EXT = 0x90F0;
const GL_MULTIVIEW_EXT = 0x90F1;
const GL_MAX_MULTIVIEW_BUFFERS_EXT = 0x90F2;
const GL_CONTEXT_ROBUST_ACCESS = 0x90F3;
const GL_CONTEXT_ROBUST_ACCESS_EXT = 0x90F3;
const GL_CONTEXT_ROBUST_ACCESS_KHR = 0x90F3;
const GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
const GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
const GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
const GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = 0x9102;
const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
const GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = 0x9105;
const GL_TEXTURE_SAMPLES = 0x9106;
const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
const GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
const GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
const GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
const GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910B;
const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910C;
const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910D;
const GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
const GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
const GL_MAX_INTEGER_SAMPLES = 0x9110;
const GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
const GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = 0x9111;
const GL_OBJECT_TYPE = 0x9112;
const GL_OBJECT_TYPE_APPLE = 0x9112;
const GL_SYNC_CONDITION = 0x9113;
const GL_SYNC_CONDITION_APPLE = 0x9113;
const GL_SYNC_STATUS = 0x9114;
const GL_SYNC_STATUS_APPLE = 0x9114;
const GL_SYNC_FLAGS = 0x9115;
const GL_SYNC_FLAGS_APPLE = 0x9115;
const GL_SYNC_FENCE = 0x9116;
const GL_SYNC_FENCE_APPLE = 0x9116;
const GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
const GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = 0x9117;
const GL_UNSIGNALED = 0x9118;
const GL_UNSIGNALED_APPLE = 0x9118;
const GL_SIGNALED = 0x9119;
const GL_SIGNALED_APPLE = 0x9119;
const GL_ALREADY_SIGNALED = 0x911A;
const GL_ALREADY_SIGNALED_APPLE = 0x911A;
const GL_TIMEOUT_EXPIRED = 0x911B;
const GL_TIMEOUT_EXPIRED_APPLE = 0x911B;
const GL_CONDITION_SATISFIED = 0x911C;
const GL_CONDITION_SATISFIED_APPLE = 0x911C;
const GL_WAIT_FAILED = 0x911D;
const GL_WAIT_FAILED_APPLE = 0x911D;
const GL_BUFFER_ACCESS_FLAGS = 0x911F;
const GL_BUFFER_MAP_LENGTH = 0x9120;
const GL_BUFFER_MAP_OFFSET = 0x9121;
const GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
const GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
const GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = 0x9123;
const GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = 0x9123;
const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = 0x9124;
const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = 0x9124;
const GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
const GL_CONTEXT_PROFILE_MASK = 0x9126;
const GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
const GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
const GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
const GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
const GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
const GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
const GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
const GL_SGX_PROGRAM_BINARY_IMG = 0x9130;
const GL_RENDERBUFFER_SAMPLES_IMG = 0x9133;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = 0x9134;
const GL_MAX_SAMPLES_IMG = 0x9135;
const GL_TEXTURE_SAMPLES_IMG = 0x9136;
const GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = 0x9137;
const GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = 0x9138;
const GL_CUBIC_IMG = 0x9139;
const GL_CUBIC_MIPMAP_NEAREST_IMG = 0x913A;
const GL_CUBIC_MIPMAP_LINEAR_IMG = 0x913B;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG = 0x913C;
const GL_NUM_DOWNSAMPLE_SCALES_IMG = 0x913D;
const GL_DOWNSAMPLE_SCALES_IMG = 0x913E;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG = 0x913F;
const GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143;
const GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143;
const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143;
const GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = 0x9143;
const GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144;
const GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144;
const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144;
const GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = 0x9144;
const GL_DEBUG_LOGGED_MESSAGES = 0x9145;
const GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145;
const GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145;
const GL_DEBUG_LOGGED_MESSAGES_KHR = 0x9145;
const GL_DEBUG_SEVERITY_HIGH = 0x9146;
const GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146;
const GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146;
const GL_DEBUG_SEVERITY_HIGH_KHR = 0x9146;
const GL_DEBUG_SEVERITY_MEDIUM = 0x9147;
const GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147;
const GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147;
const GL_DEBUG_SEVERITY_MEDIUM_KHR = 0x9147;
const GL_DEBUG_SEVERITY_LOW = 0x9148;
const GL_DEBUG_SEVERITY_LOW_AMD = 0x9148;
const GL_DEBUG_SEVERITY_LOW_ARB = 0x9148;
const GL_DEBUG_SEVERITY_LOW_KHR = 0x9148;
const GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149;
const GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A;
const GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B;
const GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C;
const GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D;
const GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E;
const GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F;
const GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150;
const GL_BUFFER_OBJECT_EXT = 0x9151;
const GL_DATA_BUFFER_AMD = 0x9151;
const GL_PERFORMANCE_MONITOR_AMD = 0x9152;
const GL_QUERY_OBJECT_AMD = 0x9153;
const GL_QUERY_OBJECT_EXT = 0x9153;
const GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154;
const GL_VERTEX_ARRAY_OBJECT_EXT = 0x9154;
const GL_SAMPLER_OBJECT_AMD = 0x9155;
const GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160;
const GL_QUERY_BUFFER = 0x9192;
const GL_QUERY_BUFFER_AMD = 0x9192;
const GL_QUERY_BUFFER_BINDING = 0x9193;
const GL_QUERY_BUFFER_BINDING_AMD = 0x9193;
const GL_QUERY_RESULT_NO_WAIT = 0x9194;
const GL_QUERY_RESULT_NO_WAIT_AMD = 0x9194;
const GL_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195;
const GL_VIRTUAL_PAGE_SIZE_X_EXT = 0x9195;
const GL_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195;
const GL_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196;
const GL_VIRTUAL_PAGE_SIZE_Y_EXT = 0x9196;
const GL_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196;
const GL_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197;
const GL_VIRTUAL_PAGE_SIZE_Z_EXT = 0x9197;
const GL_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197;
const GL_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198;
const GL_MAX_SPARSE_TEXTURE_SIZE_EXT = 0x9198;
const GL_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198;
const GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199;
const GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = 0x9199;
const GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199;
const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A;
const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A;
const GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = 0x919A;
const GL_MIN_SPARSE_LEVEL_AMD = 0x919B;
const GL_MIN_LOD_WARNING_AMD = 0x919C;
const GL_TEXTURE_BUFFER_OFFSET = 0x919D;
const GL_TEXTURE_BUFFER_OFFSET_EXT = 0x919D;
const GL_TEXTURE_BUFFER_OFFSET_OES = 0x919D;
const GL_TEXTURE_BUFFER_SIZE = 0x919E;
const GL_TEXTURE_BUFFER_SIZE_EXT = 0x919E;
const GL_TEXTURE_BUFFER_SIZE_OES = 0x919E;
const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = 0x919F;
const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = 0x919F;
const GL_STREAM_RASTERIZATION_AMD = 0x91A0;
const GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4;
const GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5;
const GL_TEXTURE_SPARSE_ARB = 0x91A6;
const GL_TEXTURE_SPARSE_EXT = 0x91A6;
const GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7;
const GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = 0x91A7;
const GL_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8;
const GL_NUM_VIRTUAL_PAGE_SIZES_EXT = 0x91A8;
const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9;
const GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = 0x91A9;
const GL_NUM_SPARSE_LEVELS_ARB = 0x91AA;
const GL_NUM_SPARSE_LEVELS_EXT = 0x91AA;
const GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = 0x91AE;
const GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = 0x91AF;
const GL_MAX_SHADER_COMPILER_THREADS_KHR = 0x91B0;
const GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0;
const GL_COMPLETION_STATUS_KHR = 0x91B1;
const GL_COMPLETION_STATUS_ARB = 0x91B1;
const GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = 0x91B2;
const GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = 0x91B3;
const GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = 0x91B4;
const GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = 0x91B5;
const GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B6;
const GL_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B7;
const GL_COMPUTE_SHADER = 0x91B9;
const GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
const GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
const GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
const GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
const GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF;
const GL_UNPACK_FLIP_Y_WEBGL = 0x9240;
const GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;
const GL_CONTEXT_LOST_WEBGL = 0x9242;
const GL_BROWSER_DEFAULT_WEBGL = 0x9244;
const GL_UNMASKED_VENDOR_WEBGL = 0x9245;
const GL_UNMASKED_RENDERER_WEBGL = 0x9246;
const GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;
const GL_TEXTURE_VIDEO_IMAGE_WEBGL = 0x9248;
const GL_SAMPLER_VIDEO_IMAGE_WEBGL = 0x9249;
const GL_SHADER_BINARY_DMP = 0x9250;
const GL_SMAPHS30_PROGRAM_BINARY_DMP = 0x9251;
const GL_SMAPHS_PROGRAM_BINARY_DMP = 0x9252;
const GL_DMP_PROGRAM_BINARY_DMP = 0x9253;
const GL_GCCSO_SHADER_BINARY_FJ = 0x9260;
const GL_COMPRESSED_R11_EAC = 0x9270;
const GL_COMPRESSED_R11_EAC_OES = 0x9270;
const GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;
const GL_COMPRESSED_SIGNED_R11_EAC_OES = 0x9271;
const GL_COMPRESSED_RG11_EAC = 0x9272;
const GL_COMPRESSED_RG11_EAC_OES = 0x9272;
const GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;
const GL_COMPRESSED_SIGNED_RG11_EAC_OES = 0x9273;
const GL_COMPRESSED_RGB8_ETC2 = 0x9274;
const GL_COMPRESSED_RGB8_ETC2_OES = 0x9274;
const GL_COMPRESSED_SRGB8_ETC2 = 0x9275;
const GL_COMPRESSED_SRGB8_ETC2_OES = 0x9275;
const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9276;
const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9277;
const GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
const GL_COMPRESSED_RGBA8_ETC2_EAC_OES = 0x9278;
const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = 0x9279;
const GL_BLEND_ADVANCED_COHERENT_KHR = 0x9285;
const GL_MULTIPLY = 0x9294;
const GL_MULTIPLY_KHR = 0x9294;
const GL_SCREEN = 0x9295;
const GL_SCREEN_KHR = 0x9295;
const GL_OVERLAY = 0x9296;
const GL_OVERLAY_KHR = 0x9296;
const GL_DARKEN = 0x9297;
const GL_DARKEN_KHR = 0x9297;
const GL_LIGHTEN = 0x9298;
const GL_LIGHTEN_KHR = 0x9298;
const GL_COLORDODGE = 0x9299;
const GL_COLORDODGE_KHR = 0x9299;
const GL_COLORBURN = 0x929A;
const GL_COLORBURN_KHR = 0x929A;
const GL_HARDLIGHT = 0x929B;
const GL_HARDLIGHT_KHR = 0x929B;
const GL_SOFTLIGHT = 0x929C;
const GL_SOFTLIGHT_KHR = 0x929C;
const GL_DIFFERENCE = 0x929E;
const GL_DIFFERENCE_KHR = 0x929E;
const GL_EXCLUSION = 0x92A0;
const GL_EXCLUSION_KHR = 0x92A0;
const GL_HSL_HUE = 0x92AD;
const GL_HSL_HUE_KHR = 0x92AD;
const GL_HSL_SATURATION = 0x92AE;
const GL_HSL_SATURATION_KHR = 0x92AE;
const GL_HSL_COLOR = 0x92AF;
const GL_HSL_COLOR_KHR = 0x92AF;
const GL_HSL_LUMINOSITY = 0x92B0;
const GL_HSL_LUMINOSITY_KHR = 0x92B0;
const GL_PRIMITIVE_BOUNDING_BOX_ARB = 0x92BE;
const GL_PRIMITIVE_BOUNDING_BOX = 0x92BE;
const GL_PRIMITIVE_BOUNDING_BOX_EXT = 0x92BE;
const GL_PRIMITIVE_BOUNDING_BOX_OES = 0x92BE;
const GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
const GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
const GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2;
const GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CD;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = 0x92CD;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CE;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = 0x92CE;
const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CF;
const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = 0x92CF;
const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
const GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = 0x92D3;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = 0x92D3;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = 0x92D4;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = 0x92D4;
const GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = 0x92D5;
const GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = 0x92D5;
const GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
const GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
const GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
const GL_DEBUG_OUTPUT = 0x92E0;
const GL_DEBUG_OUTPUT_KHR = 0x92E0;
const GL_UNIFORM = 0x92E1;
const GL_UNIFORM_BLOCK = 0x92E2;
const GL_PROGRAM_INPUT = 0x92E3;
const GL_PROGRAM_OUTPUT = 0x92E4;
const GL_BUFFER_VARIABLE = 0x92E5;
const GL_SHADER_STORAGE_BLOCK = 0x92E6;
const GL_IS_PER_PATCH = 0x92E7;
const GL_IS_PER_PATCH_EXT = 0x92E7;
const GL_IS_PER_PATCH_OES = 0x92E7;
const GL_VERTEX_SUBROUTINE = 0x92E8;
const GL_TESS_CONTROL_SUBROUTINE = 0x92E9;
const GL_TESS_EVALUATION_SUBROUTINE = 0x92EA;
const GL_GEOMETRY_SUBROUTINE = 0x92EB;
const GL_FRAGMENT_SUBROUTINE = 0x92EC;
const GL_COMPUTE_SUBROUTINE = 0x92ED;
const GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE;
const GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF;
const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0;
const GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1;
const GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2;
const GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3;
const GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4;
const GL_ACTIVE_RESOURCES = 0x92F5;
const GL_MAX_NAME_LENGTH = 0x92F6;
const GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
const GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8;
const GL_NAME_LENGTH = 0x92F9;
const GL_TYPE = 0x92FA;
const GL_ARRAY_SIZE = 0x92FB;
const GL_OFFSET = 0x92FC;
const GL_BLOCK_INDEX = 0x92FD;
const GL_ARRAY_STRIDE = 0x92FE;
const GL_IS_ROW_MAJOR = 0x9300;
const GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
const GL_BUFFER_BINDING = 0x9302;
const GL_BUFFER_DATA_SIZE = 0x9303;
const GL_NUM_ACTIVE_VARIABLES = 0x9304;
const GL_ACTIVE_VARIABLES = 0x9305;
const GL_REFERENCED_BY_VERTEX_SHADER = 0x9306;
const GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307;
const GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = 0x9307;
const GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = 0x9307;
const GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308;
const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = 0x9308;
const GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = 0x9308;
const GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309;
const GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = 0x9309;
const GL_REFERENCED_BY_GEOMETRY_SHADER_OES = 0x9309;
const GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
const GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B;
const GL_TOP_LEVEL_ARRAY_SIZE = 0x930C;
const GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D;
const GL_LOCATION = 0x930E;
const GL_LOCATION_INDEX = 0x930F;
const GL_LOCATION_INDEX_EXT = 0x930F;
const GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
const GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
const GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
const GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = 0x9312;
const GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = 0x9312;
const GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
const GL_MAX_FRAMEBUFFER_WIDTH = 0x9315;
const GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316;
const GL_MAX_FRAMEBUFFER_LAYERS = 0x9317;
const GL_MAX_FRAMEBUFFER_LAYERS_EXT = 0x9317;
const GL_MAX_FRAMEBUFFER_LAYERS_OES = 0x9317;
const GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
const GL_RASTER_MULTISAMPLE_EXT = 0x9327;
const GL_RASTER_SAMPLES_EXT = 0x9328;
const GL_MAX_RASTER_SAMPLES_EXT = 0x9329;
const GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A;
const GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B;
const GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C;
const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = 0x933D;
const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = 0x933E;
const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = 0x933F;
const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = 0x9340;
const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = 0x9341;
const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342;
const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = 0x9343;
const GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345;
const GL_LOCATION_COMPONENT = 0x934A;
const GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B;
const GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C;
const GL_CLIP_ORIGIN = 0x935C;
const GL_CLIP_ORIGIN_EXT = 0x935C;
const GL_CLIP_DEPTH_MODE = 0x935D;
const GL_CLIP_DEPTH_MODE_EXT = 0x935D;
const GL_NEGATIVE_ONE_TO_ONE = 0x935E;
const GL_NEGATIVE_ONE_TO_ONE_EXT = 0x935E;
const GL_ZERO_TO_ONE = 0x935F;
const GL_ZERO_TO_ONE_EXT = 0x935F;
const GL_CLEAR_TEXTURE = 0x9365;
const GL_TEXTURE_REDUCTION_MODE_ARB = 0x9366;
const GL_TEXTURE_REDUCTION_MODE_EXT = 0x9366;
const GL_WEIGHTED_AVERAGE_ARB = 0x9367;
const GL_WEIGHTED_AVERAGE_EXT = 0x9367;
const GL_NUM_SAMPLE_COUNTS = 0x9380;
const GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = 0x9381;
const GL_MULTISAMPLE_LINE_WIDTH_RANGE = 0x9381;
const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382;
const GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 0x9382;
const GL_VIEW_CLASS_EAC_R11 = 0x9383;
const GL_VIEW_CLASS_EAC_RG11 = 0x9384;
const GL_VIEW_CLASS_ETC2_RGB = 0x9385;
const GL_VIEW_CLASS_ETC2_RGBA = 0x9386;
const GL_VIEW_CLASS_ETC2_EAC_RGBA = 0x9387;
const GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = 0x93A0;
const GL_BGRA8_EXT = 0x93A1;
const GL_TEXTURE_USAGE_ANGLE = 0x93A2;
const GL_FRAMEBUFFER_ATTACHMENT_ANGLE = 0x93A3;
const GL_PACK_REVERSE_ROW_ORDER_ANGLE = 0x93A4;
const GL_PROGRAM_BINARY_ANGLE = 0x93A6;
const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = 0x93F0;
const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = 0x93F1;
const GL_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0;
const GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1;
const GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2;
const GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3;
const GL_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4;
const GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5;
const GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8;
const GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9;
const GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA;
const GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB;
const GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC;
const GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD;
const GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE;
const GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF;
const GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500;
const GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x9530;
const GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x9531;
const GL_SUBGROUP_SIZE_KHR = 0x9532;
const GL_SUBGROUP_SUPPORTED_STAGES_KHR = 0x9533;
const GL_SUBGROUP_SUPPORTED_FEATURES_KHR = 0x9534;
const GL_SUBGROUP_QUAD_ALL_STAGES_KHR = 0x9535;
const GL_SPIR_V_BINARY = 0x9552;
const GL_SPIR_V_BINARY_ARB = 0x9552;
const GL_SPIR_V_EXTENSIONS = 0x9553;
const GL_NUM_SPIR_V_EXTENSIONS = 0x9554;
const GL_TEXTURE_TILING_EXT = 0x9580;
const GL_DEDICATED_MEMORY_OBJECT_EXT = 0x9581;
const GL_NUM_TILING_TYPES_EXT = 0x9582;
const GL_TILING_TYPES_EXT = 0x9583;
const GL_OPTIMAL_TILING_EXT = 0x9584;
const GL_LINEAR_TILING_EXT = 0x9585;
const GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586;
const GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = 0x9587;
const GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = 0x9588;
const GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = 0x9589;
const GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = 0x958A;
const GL_HANDLE_TYPE_D3D11_IMAGE_EXT = 0x958B;
const GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x958C;
const GL_LAYOUT_GENERAL_EXT = 0x958D;
const GL_LAYOUT_COLOR_ATTACHMENT_EXT = 0x958E;
const GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = 0x958F;
const GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = 0x9590;
const GL_LAYOUT_SHADER_READ_ONLY_EXT = 0x9591;
const GL_LAYOUT_TRANSFER_SRC_EXT = 0x9592;
const GL_LAYOUT_TRANSFER_DST_EXT = 0x9593;
const GL_HANDLE_TYPE_D3D12_FENCE_EXT = 0x9594;
const GL_D3D12_FENCE_VALUE_EXT = 0x9595;
const GL_NUM_DEVICE_UUIDS_EXT = 0x9596;
const GL_DEVICE_UUID_EXT = 0x9597;
const GL_DRIVER_UUID_EXT = 0x9598;
const GL_DEVICE_LUID_EXT = 0x9599;
const GL_DEVICE_NODE_MASK_EXT = 0x959A;
const GL_PROTECTED_MEMORY_OBJECT_EXT = 0x959B;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = 0x9630;
const GL_MAX_VIEWS_OVR = 0x9631;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = 0x9632;
const GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = 0x9633;
const GL_GS_SHADER_BINARY_MTK = 0x9640;
const GL_GS_PROGRAM_BINARY_MTK = 0x9641;
const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT = 0x9650;
const GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT = 0x9651;
const GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT = 0x9652;
const GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM = 0x96A0;
const GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM = 0x96A2;
const GL_VALIDATE_SHADER_BINARY_QCOM = 0x96A3;
const GL_SHADING_RATE_QCOM = 0x96A4;
const GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM = 0x96A5;
const GL_SHADING_RATE_1X1_PIXELS_QCOM = 0x96A6;
const GL_SHADING_RATE_1X2_PIXELS_QCOM = 0x96A7;
const GL_SHADING_RATE_2X1_PIXELS_QCOM = 0x96A8;
const GL_SHADING_RATE_2X2_PIXELS_QCOM = 0x96A9;
const GL_SHADING_RATE_1X4_PIXELS_QCOM = 0x96AA;
const GL_SHADING_RATE_4X1_PIXELS_QCOM = 0x96AB;
const GL_SHADING_RATE_4X2_PIXELS_QCOM = 0x96AC;
const GL_SHADING_RATE_2X4_PIXELS_QCOM = 0x96AD;
const GL_SHADING_RATE_4X4_PIXELS_QCOM = 0x96AE;
const GL_SHADING_RATE_1X1_PIXELS_EXT = 0x96A6;
const GL_SHADING_RATE_1X2_PIXELS_EXT = 0x96A7;
const GL_SHADING_RATE_2X1_PIXELS_EXT = 0x96A8;
const GL_SHADING_RATE_2X2_PIXELS_EXT = 0x96A9;
const GL_SHADING_RATE_1X4_PIXELS_EXT = 0x96AA;
const GL_SHADING_RATE_4X1_PIXELS_EXT = 0x96AB;
const GL_SHADING_RATE_4X2_PIXELS_EXT = 0x96AC;
const GL_SHADING_RATE_2X4_PIXELS_EXT = 0x96AD;
const GL_SHADING_RATE_4X4_PIXELS_EXT = 0x96AE;
const GL_SURFACE_COMPRESSION_EXT = 0x96C0;
const GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT = 0x96C1;
const GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT = 0x96C2;
const GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT = 0x96C4;
const GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT = 0x96C5;
const GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT = 0x96C6;
const GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT = 0x96C7;
const GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT = 0x96C8;
const GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT = 0x96C9;
const GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT = 0x96CA;
const GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT = 0x96CB;
const GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT = 0x96CC;
const GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT = 0x96CD;
const GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT = 0x96CE;
const GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT = 0x96CF;
const GL_SHADING_RATE_EXT = 0x96D0;
const GL_SHADING_RATE_ATTACHMENT_EXT = 0x96D1;
const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT = 0x96D2;
const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT = 0x96D3;
const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT = 0x96D4;
const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT = 0x96D5;
const GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT = 0x96D6;
const GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = 0x96D7;
const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = 0x96D8;
const GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = 0x96D9;
const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = 0x96DA;
const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT = 0x96DB;
const GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT = 0x96DC;
const GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT = 0x96DD;
const GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT = 0x96DE;
const GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT = 0x96DF;
const GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262;
const GL_CULL_VERTEX_IBM = 103050;
const GL_ALL_STATIC_DATA_IBM = 103060;
const GL_STATIC_VERTEX_ARRAY_IBM = 103061;
const GL_VERTEX_ARRAY_LIST_IBM = 103070;
const GL_NORMAL_ARRAY_LIST_IBM = 103071;
const GL_COLOR_ARRAY_LIST_IBM = 103072;
const GL_INDEX_ARRAY_LIST_IBM = 103073;
const GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074;
const GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075;
const GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076;
const GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077;
const GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080;
const GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081;
const GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082;
const GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083;
const GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084;
const GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085;
const GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086;
const GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087;
const GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8;
const GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD;
const GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE;
const GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202;
const GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203;
const GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204;
const GL_ALWAYS_FAST_HINT_PGI = 0x1A20C;
const GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D;
const GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E;
const GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F;
const GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210;
const GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211;
const GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216;
const GL_STRICT_LIGHTING_HINT_PGI = 0x1A217;
const GL_STRICT_SCISSOR_HINT_PGI = 0x1A218;
const GL_FULL_STIPPLE_HINT_PGI = 0x1A219;
const GL_CLIP_NEAR_HINT_PGI = 0x1A220;
const GL_CLIP_FAR_HINT_PGI = 0x1A221;
const GL_WIDE_LINE_HINT_PGI = 0x1A222;
const GL_BACK_NORMALS_HINT_PGI = 0x1A223;
const GL_VERTEX_DATA_HINT_PGI = 0x1A22A;
const GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;
const GL_MAX_VERTEX_HINT_PGI = 0x1A22D;



extern fn void glAccum(GLenum op, GLfloat value);
extern fn void glAccumxOES(GLenum op, GLfixed value);
extern fn void glActiveProgramEXT(GLuint program);
extern fn void glActiveShaderProgram(GLuint pipeline, GLuint program);
extern fn void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
extern fn void glActiveStencilFaceEXT(GLenum face);
extern fn void glActiveTexture(GLenum texture);
extern fn void glActiveTextureARB(GLenum texture);
extern fn void glActiveVaryingNV(GLuint program, GLchar name);
extern fn void glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern fn void glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern fn void glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern fn void glAlphaFunc(GLenum func, GLfloat ref);
extern fn void glAlphaFuncQCOM(GLenum func, GLclampf ref);
extern fn void glAlphaFuncx(GLenum func, GLfixed ref);
extern fn void glAlphaFuncxOES(GLenum func, GLfixed ref);
extern fn void glAlphaToCoverageDitherControlNV(GLenum mode);
extern fn void glApplyFramebufferAttachmentCMAAINTEL();
extern fn void glApplyTextureEXT(GLenum mode);
extern fn void glArrayElement(GLint i);
extern fn void glArrayElementEXT(GLint i);
extern fn void glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern fn void glAsyncMarkerSGIX(GLuint marker);
extern fn void glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
extern fn void glAttachShader(GLuint program, GLuint shader);
extern fn void glBegin(GLenum mode);
extern fn void glBeginConditionalRender(GLuint id, GLenum mode);
extern fn void glBeginConditionalRenderNV(GLuint id, GLenum mode);
extern fn void glBeginConditionalRenderNVX(GLuint id);
extern fn void glBeginFragmentShaderATI();
extern fn void glBeginOcclusionQueryNV(GLuint id);
extern fn void glBeginPerfMonitorAMD(GLuint monitor);
extern fn void glBeginPerfQueryINTEL(GLuint queryHandle);
extern fn void glBeginQuery(GLenum target, GLuint id);
extern fn void glBeginQueryARB(GLenum target, GLuint id);
extern fn void glBeginQueryEXT(GLenum target, GLuint id);
extern fn void glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
extern fn void glBeginTransformFeedback(GLenum primitiveMode);
extern fn void glBeginTransformFeedbackEXT(GLenum primitiveMode);
extern fn void glBeginTransformFeedbackNV(GLenum primitiveMode);
extern fn void glBeginVertexShaderEXT();
extern fn void glBeginVideoCaptureNV(GLuint video_capture_slot);
extern fn void glBindAttribLocation(GLuint program, GLuint index, GLchar name);
extern fn void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, GLcharARB name);
extern fn void glBindBuffer(GLenum target, GLuint buffer);
extern fn void glBindBufferARB(GLenum target, GLuint buffer);
extern fn void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
extern fn void glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
extern fn void glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
extern fn void glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern fn void glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern fn void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glBindBuffersBase(GLenum target, GLuint first, GLsizei count, GLuint buffers);
extern fn void glBindBuffersRange(GLenum target, GLuint first, GLsizei count, GLuint buffers, GLintptr offsets, GLsizeiptr sizes);
extern fn void glBindFragDataLocation(GLuint program, GLuint color, GLchar name);
extern fn void glBindFragDataLocationEXT(GLuint program, GLuint color, GLchar name);
extern fn void glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, GLchar name);
extern fn void glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, GLchar name);
extern fn void glBindFragmentShaderATI(GLuint id);
extern fn void glBindFramebuffer(GLenum target, GLuint framebuffer);
extern fn void glBindFramebufferEXT(GLenum target, GLuint framebuffer);
extern fn void glBindFramebufferOES(GLenum target, GLuint framebuffer);
extern fn void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
extern fn void glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
extern fn void glBindImageTextures(GLuint first, GLsizei count, GLuint textures);
extern fn void glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
extern fn void glBindProgramARB(GLenum target, GLuint program);
extern fn void glBindProgramNV(GLenum target, GLuint id);
extern fn void glBindProgramPipeline(GLuint pipeline);
extern fn void glBindProgramPipelineEXT(GLuint pipeline);
extern fn void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
extern fn void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
extern fn void glBindRenderbufferOES(GLenum target, GLuint renderbuffer);
extern fn void glBindSampler(GLuint unit, GLuint sampler);
extern fn void glBindSamplers(GLuint first, GLsizei count, GLuint samplers);
extern fn void glBindShadingRateImageNV(GLuint texture);
extern fn void glBindTexture(GLenum target, GLuint texture);
extern fn void glBindTextureEXT(GLenum target, GLuint texture);
extern fn void glBindTextureUnit(GLuint unit, GLuint texture);
extern fn void glBindTextures(GLuint first, GLsizei count, GLuint textures);
extern fn void glBindTransformFeedback(GLenum target, GLuint id);
extern fn void glBindTransformFeedbackNV(GLenum target, GLuint id);
extern fn void glBindVertexArray(GLuint array);
extern fn void glBindVertexArrayAPPLE(GLuint array);
extern fn void glBindVertexArrayOES(GLuint array);
extern fn void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern fn void glBindVertexBuffers(GLuint first, GLsizei count, GLuint buffers, GLintptr offsets, GLsizei strides);
extern fn void glBindVertexShaderEXT(GLuint id);
extern fn void glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
extern fn void glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
extern fn void glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
extern fn void glBinormal3bvEXT(GLbyte v);
extern fn void glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
extern fn void glBinormal3dvEXT(GLdouble v);
extern fn void glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
extern fn void glBinormal3fvEXT(GLfloat v);
extern fn void glBinormal3iEXT(GLint bx, GLint by, GLint bz);
extern fn void glBinormal3ivEXT(GLint v);
extern fn void glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz);
extern fn void glBinormal3svEXT(GLshort v);
extern fn void glBinormalPointerEXT(GLenum type, GLsizei stride);
extern fn void glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte bitmap);
extern fn void glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, GLubyte bitmap);
extern fn void glBlendBarrier();
extern fn void glBlendBarrierKHR();
extern fn void glBlendBarrierNV();
extern fn void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern fn void glBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern fn void glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glBlendEquation(GLenum mode);
extern fn void glBlendEquationEXT(GLenum mode);
extern fn void glBlendEquationIndexedAMD(GLuint buf, GLenum mode);
extern fn void glBlendEquationOES(GLenum mode);
extern fn void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern fn void glBlendEquationi(GLuint buf, GLenum mode);
extern fn void glBlendEquationiARB(GLuint buf, GLenum mode);
extern fn void glBlendEquationiEXT(GLuint buf, GLenum mode);
extern fn void glBlendEquationiOES(GLuint buf, GLenum mode);
extern fn void glBlendFunc(GLenum sfactor, GLenum dfactor);
extern fn void glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
extern fn void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern fn void glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern fn void glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern fn void glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern fn void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
extern fn void glBlendFunciARB(GLuint buf, GLenum src, GLenum dst);
extern fn void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
extern fn void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
extern fn void glBlendParameteriNV(GLenum pname, GLint value);
extern fn void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBlitFramebufferLayerEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
extern fn void glBlitFramebufferLayersEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
extern fn void glBufferAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
extern fn void glBufferData(GLenum target, GLsizeiptr size, GLenum usage);
extern fn void glBufferDataARB(GLenum target, GLsizeiptrARB size, GLenum usage);
extern fn void glBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern fn void glBufferPageCommitmentMemNV(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
extern fn void glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
extern fn void glBufferStorage(GLenum target, GLsizeiptr size, GLbitfield flags);
extern fn void glBufferStorageEXT(GLenum target, GLsizeiptr size, GLbitfield flags);
extern fn void glBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
extern fn void glBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
extern fn void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size);
extern fn void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size);
extern fn void glCallCommandListNV(GLuint list);
extern fn void glCallList(GLuint list);
extern fn void glCallLists(GLsizei n, GLenum type);
extern fn void glClampColor(GLenum target, GLenum clamp);
extern fn void glClampColorARB(GLenum target, GLenum clamp);
extern fn void glClear(GLbitfield mask);
extern fn void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern fn void glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type);
extern fn void glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type);
extern fn void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern fn void glClearBufferfv(GLenum buffer, GLint drawbuffer, GLfloat value);
extern fn void glClearBufferiv(GLenum buffer, GLint drawbuffer, GLint value);
extern fn void glClearBufferuiv(GLenum buffer, GLint drawbuffer, GLuint value);
extern fn void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern fn void glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
extern fn void glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern fn void glClearColorx(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glClearDepth(GLdouble depth);
extern fn void glClearDepthdNV(GLdouble depth);
extern fn void glClearDepthf(GLfloat d);
extern fn void glClearDepthfOES(GLclampf depth);
extern fn void glClearDepthx(GLfixed depth);
extern fn void glClearDepthxOES(GLfixed depth);
extern fn void glClearIndex(GLfloat c);
extern fn void glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type);
extern fn void glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type);
extern fn void glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type);
extern fn void glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type);
extern fn void glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern fn void glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat value);
extern fn void glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLint value);
extern fn void glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLuint value);
extern fn void glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, GLuint values);
extern fn void glClearStencil(GLint s);
extern fn void glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type);
extern fn void glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type);
extern fn void glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glClientActiveTexture(GLenum texture);
extern fn void glClientActiveTextureARB(GLenum texture);
extern fn void glClientActiveVertexStreamATI(GLenum stream);
extern fn void glClientAttribDefaultEXT(GLbitfield mask);
extern fn void glClientWaitSemaphoreui64NVX(GLsizei fenceObjectCount, GLuint semaphoreArray, GLuint64 fenceValueArray);
extern fn void glClipControl(GLenum origin, GLenum depth);
extern fn void glClipControlEXT(GLenum origin, GLenum depth);
extern fn void glClipPlane(GLenum plane, GLdouble equation);
extern fn void glClipPlanef(GLenum p, GLfloat eqn);
extern fn void glClipPlanefIMG(GLenum p, GLfloat eqn);
extern fn void glClipPlanefOES(GLenum plane, GLfloat equation);
extern fn void glClipPlanex(GLenum plane, GLfixed equation);
extern fn void glClipPlanexIMG(GLenum p, GLfixed eqn);
extern fn void glClipPlanexOES(GLenum plane, GLfixed equation);
extern fn void glColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern fn void glColor3bv(GLbyte v);
extern fn void glColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern fn void glColor3dv(GLdouble v);
extern fn void glColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern fn void glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern fn void glColor3fVertex3fvSUN(GLfloat c, GLfloat v);
extern fn void glColor3fv(GLfloat v);
extern fn void glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern fn void glColor3hvNV(GLhalfNV v);
extern fn void glColor3i(GLint red, GLint green, GLint blue);
extern fn void glColor3iv(GLint v);
extern fn void glColor3s(GLshort red, GLshort green, GLshort blue);
extern fn void glColor3sv(GLshort v);
extern fn void glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern fn void glColor3ubv(GLubyte v);
extern fn void glColor3ui(GLuint red, GLuint green, GLuint blue);
extern fn void glColor3uiv(GLuint v);
extern fn void glColor3us(GLushort red, GLushort green, GLushort blue);
extern fn void glColor3usv(GLushort v);
extern fn void glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
extern fn void glColor3xvOES(GLfixed components);
extern fn void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
extern fn void glColor4bv(GLbyte v);
extern fn void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
extern fn void glColor4dv(GLdouble v);
extern fn void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern fn void glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glColor4fNormal3fVertex3fvSUN(GLfloat c, GLfloat n, GLfloat v);
extern fn void glColor4fv(GLfloat v);
extern fn void glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
extern fn void glColor4hvNV(GLhalfNV v);
extern fn void glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
extern fn void glColor4iv(GLint v);
extern fn void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
extern fn void glColor4sv(GLshort v);
extern fn void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
extern fn void glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
extern fn void glColor4ubVertex2fvSUN(GLubyte c, GLfloat v);
extern fn void glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern fn void glColor4ubVertex3fvSUN(GLubyte c, GLfloat v);
extern fn void glColor4ubv(GLubyte v);
extern fn void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern fn void glColor4uiv(GLuint v);
extern fn void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
extern fn void glColor4usv(GLushort v);
extern fn void glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern fn void glColor4xvOES(GLfixed components);
extern fn void glColorFormatNV(GLint size, GLenum type, GLsizei stride);
extern fn void glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern fn void glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern fn void glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern fn void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern fn void glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern fn void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern fn void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern fn void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern fn void glColorMaterial(GLenum face, GLenum mode);
extern fn void glColorP3ui(GLenum type, GLuint color);
extern fn void glColorP3uiv(GLenum type, GLuint color);
extern fn void glColorP4ui(GLenum type, GLuint color);
extern fn void glColorP4uiv(GLenum type, GLuint color);
extern fn void glColorPointer(GLint size, GLenum type, GLsizei stride);
extern fn void glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count);
extern fn void glColorPointerListIBM(GLint size, GLenum type, GLint stride, GLint ptrstride);
extern fn void glColorPointervINTEL(GLint size, GLenum type);
extern fn void glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type);
extern fn void glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type);
extern fn void glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type);
extern fn void glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type);
extern fn void glColorTableParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat params);
extern fn void glColorTableParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glColorTableParameterivSGI(GLenum target, GLenum pname, GLint params);
extern fn void glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type);
extern fn void glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern fn void glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
extern fn void glCombinerParameterfNV(GLenum pname, GLfloat param);
extern fn void glCombinerParameterfvNV(GLenum pname, GLfloat params);
extern fn void glCombinerParameteriNV(GLenum pname, GLint param);
extern fn void glCombinerParameterivNV(GLenum pname, GLint params);
extern fn void glCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat params);
extern fn void glCommandListSegmentsNV(GLuint list, GLuint segments);
extern fn void glCompileCommandListNV(GLuint list);
extern fn void glCompileShader(GLuint shader);
extern fn void glCompileShaderARB(GLhandleARB shaderObj);
extern fn void glCompileShaderIncludeARB(GLuint shader, GLsizei count, GLchar path, GLint length);
extern fn void glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize);
extern fn void glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize);
extern fn void glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize);
extern fn void glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize);
extern fn void glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize);
extern fn void glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize);
extern fn void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize);
extern fn void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize);
extern fn void glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize);
extern fn void glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize);
extern fn void glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize);
extern fn void glConservativeRasterParameterfNV(GLenum pname, GLfloat value);
extern fn void glConservativeRasterParameteriNV(GLenum pname, GLint param);
extern fn void glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type);
extern fn void glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type);
extern fn void glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
extern fn void glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glConvolutionParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glConvolutionParameteri(GLenum target, GLenum pname, GLint params);
extern fn void glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
extern fn void glConvolutionParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glConvolutionParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
extern fn void glConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern fn void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern fn void glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern fn void glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern fn void glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern fn void glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern fn void glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern fn void glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern fn void glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern fn void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern fn void glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern fn void glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern fn void glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern fn void glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern fn void glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern fn void glCopyPathNV(GLuint resultPath, GLuint srcPath);
extern fn void glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
extern fn void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern fn void glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern fn void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern fn void glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern fn void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern fn void glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern fn void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern fn void glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern fn void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
extern fn void glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern fn void glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern fn void glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat transformValues);
extern fn void glCoverFillPathNV(GLuint path, GLenum coverMode);
extern fn void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat transformValues);
extern fn void glCoverStrokePathNV(GLuint path, GLenum coverMode);
extern fn void glCoverageMaskNV(GLboolean mask);
extern fn void glCoverageModulationNV(GLenum components);
extern fn void glCoverageModulationTableNV(GLsizei n, GLfloat v);
extern fn void glCoverageOperationNV(GLenum operation);
extern fn void glCreateBuffers(GLsizei n, GLuint buffers);
extern fn void glCreateCommandListsNV(GLsizei n, GLuint lists);
extern fn void glCreateFramebuffers(GLsizei n, GLuint framebuffers);
extern fn void glCreateMemoryObjectsEXT(GLsizei n, GLuint memoryObjects);
extern fn void glCreatePerfQueryINTEL(GLuint queryId, GLuint queryHandle);
extern fn void glCreateProgramPipelines(GLsizei n, GLuint pipelines);
extern fn void glCreateQueries(GLenum target, GLsizei n, GLuint ids);
extern fn void glCreateRenderbuffers(GLsizei n, GLuint renderbuffers);
extern fn void glCreateSamplers(GLsizei n, GLuint samplers);
extern fn void glCreateSemaphoresNV(GLsizei n, GLuint semaphores);
extern fn void glCreateStatesNV(GLsizei n, GLuint states);
extern fn void glCreateTextures(GLenum target, GLsizei n, GLuint textures);
extern fn void glCreateTransformFeedbacks(GLsizei n, GLuint ids);
extern fn void glCreateVertexArrays(GLsizei n, GLuint arrays);
extern fn void glCullFace(GLenum mode);
extern fn void glCullParameterdvEXT(GLenum pname, GLdouble params);
extern fn void glCullParameterfvEXT(GLenum pname, GLfloat params);
extern fn void glCurrentPaletteMatrixARB(GLint index);
extern fn void glCurrentPaletteMatrixOES(GLuint matrixpaletteindex);
extern fn void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuint ids, GLboolean enabled);
extern fn void glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuint ids, GLboolean enabled);
extern fn void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuint ids, GLboolean enabled);
extern fn void glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, GLuint ids, GLboolean enabled);
extern fn void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLchar buf);
extern fn void glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, GLchar buf);
extern fn void glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLchar buf);
extern fn void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLchar buf);
extern fn void glDeformSGIX(GLbitfield mask);
extern fn void glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, GLdouble points);
extern fn void glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, GLfloat points);
extern fn void glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
extern fn void glDeleteBuffers(GLsizei n, GLuint buffers);
extern fn void glDeleteBuffersARB(GLsizei n, GLuint buffers);
extern fn void glDeleteCommandListsNV(GLsizei n, GLuint lists);
extern fn void glDeleteFencesAPPLE(GLsizei n, GLuint fences);
extern fn void glDeleteFencesNV(GLsizei n, GLuint fences);
extern fn void glDeleteFragmentShaderATI(GLuint id);
extern fn void glDeleteFramebuffers(GLsizei n, GLuint framebuffers);
extern fn void glDeleteFramebuffersEXT(GLsizei n, GLuint framebuffers);
extern fn void glDeleteFramebuffersOES(GLsizei n, GLuint framebuffers);
extern fn void glDeleteLists(GLuint list, GLsizei range);
extern fn void glDeleteMemoryObjectsEXT(GLsizei n, GLuint memoryObjects);
extern fn void glDeleteNamedStringARB(GLint namelen, GLchar name);
extern fn void glDeleteNamesAMD(GLenum identifier, GLuint num, GLuint names);
extern fn void glDeleteObjectARB(GLhandleARB obj);
extern fn void glDeleteOcclusionQueriesNV(GLsizei n, GLuint ids);
extern fn void glDeletePathsNV(GLuint path, GLsizei range);
extern fn void glDeletePerfMonitorsAMD(GLsizei n, GLuint monitors);
extern fn void glDeletePerfQueryINTEL(GLuint queryHandle);
extern fn void glDeleteProgram(GLuint program);
extern fn void glDeleteProgramPipelines(GLsizei n, GLuint pipelines);
extern fn void glDeleteProgramPipelinesEXT(GLsizei n, GLuint pipelines);
extern fn void glDeleteProgramsARB(GLsizei n, GLuint programs);
extern fn void glDeleteProgramsNV(GLsizei n, GLuint programs);
extern fn void glDeleteQueries(GLsizei n, GLuint ids);
extern fn void glDeleteQueriesARB(GLsizei n, GLuint ids);
extern fn void glDeleteQueriesEXT(GLsizei n, GLuint ids);
extern fn void glDeleteQueryResourceTagNV(GLsizei n, GLint tagIds);
extern fn void glDeleteRenderbuffers(GLsizei n, GLuint renderbuffers);
extern fn void glDeleteRenderbuffersEXT(GLsizei n, GLuint renderbuffers);
extern fn void glDeleteRenderbuffersOES(GLsizei n, GLuint renderbuffers);
extern fn void glDeleteSamplers(GLsizei count, GLuint samplers);
extern fn void glDeleteSemaphoresEXT(GLsizei n, GLuint semaphores);
extern fn void glDeleteShader(GLuint shader);
extern fn void glDeleteStatesNV(GLsizei n, GLuint states);
extern fn void glDeleteSync(GLsync sync);
extern fn void glDeleteSyncAPPLE(GLsync sync);
extern fn void glDeleteTextures(GLsizei n, GLuint textures);
extern fn void glDeleteTexturesEXT(GLsizei n, GLuint textures);
extern fn void glDeleteTransformFeedbacks(GLsizei n, GLuint ids);
extern fn void glDeleteTransformFeedbacksNV(GLsizei n, GLuint ids);
extern fn void glDeleteVertexArrays(GLsizei n, GLuint arrays);
extern fn void glDeleteVertexArraysAPPLE(GLsizei n, GLuint arrays);
extern fn void glDeleteVertexArraysOES(GLsizei n, GLuint arrays);
extern fn void glDeleteVertexShaderEXT(GLuint id);
extern fn void glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
extern fn void glDepthBoundsdNV(GLdouble zmin, GLdouble zmax);
extern fn void glDepthFunc(GLenum func);
extern fn void glDepthMask(GLboolean flag);
extern fn void glDepthRange(GLdouble n, GLdouble f);
extern fn void glDepthRangeArraydvNV(GLuint first, GLsizei count, GLdouble v);
extern fn void glDepthRangeArrayfvNV(GLuint first, GLsizei count, GLfloat v);
extern fn void glDepthRangeArrayfvOES(GLuint first, GLsizei count, GLfloat v);
extern fn void glDepthRangeArrayv(GLuint first, GLsizei count, GLdouble v);
extern fn void glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
extern fn void glDepthRangeIndexeddNV(GLuint index, GLdouble n, GLdouble f);
extern fn void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
extern fn void glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
extern fn void glDepthRangedNV(GLdouble zNear, GLdouble zFar);
extern fn void glDepthRangef(GLfloat n, GLfloat f);
extern fn void glDepthRangefOES(GLclampf n, GLclampf f);
extern fn void glDepthRangex(GLfixed n, GLfixed f);
extern fn void glDepthRangexOES(GLfixed n, GLfixed f);
extern fn void glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
extern fn void glDetachShader(GLuint program, GLuint shader);
extern fn void glDetailTexFuncSGIS(GLenum target, GLsizei n, GLfloat points);
extern fn void glDisable(GLenum cap);
extern fn void glDisableClientState(GLenum array);
extern fn void glDisableClientStateIndexedEXT(GLenum array, GLuint index);
extern fn void glDisableClientStateiEXT(GLenum array, GLuint index);
extern fn void glDisableDriverControlQCOM(GLuint driverControl);
extern fn void glDisableIndexedEXT(GLenum target, GLuint index);
extern fn void glDisableVariantClientStateEXT(GLuint id);
extern fn void glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
extern fn void glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
extern fn void glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
extern fn void glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
extern fn void glDisableVertexAttribArray(GLuint index);
extern fn void glDisableVertexAttribArrayARB(GLuint index);
extern fn void glDisablei(GLenum target, GLuint index);
extern fn void glDisableiEXT(GLenum target, GLuint index);
extern fn void glDisableiNV(GLenum target, GLuint index);
extern fn void glDisableiOES(GLenum target, GLuint index);
extern fn void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, GLenum attachments);
extern fn void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
extern fn void glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
extern fn void glDispatchComputeIndirect(GLintptr indirect);
extern fn void glDrawArrays(GLenum mode, GLint first, GLsizei count);
extern fn void glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
extern fn void glDrawArraysIndirect(GLenum mode);
extern fn void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
extern fn void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern fn void glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern fn void glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern fn void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern fn void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
extern fn void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern fn void glDrawBuffer(GLenum buf);
extern fn void glDrawBuffers(GLsizei n, GLenum bufs);
extern fn void glDrawBuffersARB(GLsizei n, GLenum bufs);
extern fn void glDrawBuffersATI(GLsizei n, GLenum bufs);
extern fn void glDrawBuffersEXT(GLsizei n, GLenum bufs);
extern fn void glDrawBuffersIndexedEXT(GLint n, GLenum location, GLint indices);
extern fn void glDrawBuffersNV(GLsizei n, GLenum bufs);
extern fn void glDrawCommandsAddressNV(GLenum primitiveMode, GLuint64 indirects, GLsizei sizes, GLuint count);
extern fn void glDrawCommandsNV(GLenum primitiveMode, GLuint buffer, GLintptr indirects, GLsizei sizes, GLuint count);
extern fn void glDrawCommandsStatesAddressNV(GLuint64 indirects, GLsizei sizes, GLuint states, GLuint fbos, GLuint count);
extern fn void glDrawCommandsStatesNV(GLuint buffer, GLintptr indirects, GLsizei sizes, GLuint states, GLuint fbos, GLuint count);
extern fn void glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
extern fn void glDrawElementArrayATI(GLenum mode, GLsizei count);
extern fn void glDrawElements(GLenum mode, GLsizei count, GLenum type);
extern fn void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawElementsIndirect(GLenum mode, GLenum type);
extern fn void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount);
extern fn void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, GLsizei primcount);
extern fn void glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, GLsizei primcount);
extern fn void glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLuint baseinstance);
extern fn void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLuint baseinstance);
extern fn void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLint basevertex);
extern fn void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern fn void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern fn void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLint basevertex);
extern fn void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, GLsizei instancecount, GLint basevertex);
extern fn void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, GLsizei primcount);
extern fn void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, GLsizei primcount);
extern fn void glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
extern fn void glDrawMeshTasksNV(GLuint first, GLuint count);
extern fn void glDrawMeshTasksIndirectNV(GLintptr indirect);
extern fn void glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
extern fn void glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
extern fn void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type);
extern fn void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLint basevertex);
extern fn void glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type);
extern fn void glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
extern fn void glDrawTexfvOES(GLfloat coords);
extern fn void glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
extern fn void glDrawTexivOES(GLint coords);
extern fn void glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
extern fn void glDrawTexsvOES(GLshort coords);
extern fn void glDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
extern fn void glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
extern fn void glDrawTexxvOES(GLfixed coords);
extern fn void glDrawTransformFeedback(GLenum mode, GLuint id);
extern fn void glDrawTransformFeedbackEXT(GLenum mode, GLuint id);
extern fn void glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
extern fn void glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount);
extern fn void glDrawTransformFeedbackNV(GLenum mode, GLuint id);
extern fn void glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
extern fn void glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
extern fn void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
extern fn void glEGLImageTargetTexStorageEXT(GLenum target, GLeglImageOES image, GLint attrib_list);
extern fn void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
extern fn void glEGLImageTargetTextureStorageEXT(GLuint texture, GLeglImageOES image, GLint attrib_list);
extern fn void glEdgeFlag(GLboolean flag);
extern fn void glEdgeFlagFormatNV(GLsizei stride);
extern fn void glEdgeFlagPointer(GLsizei stride);
extern fn void glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, GLboolean pointer);
extern fn void glEdgeFlagPointerListIBM(GLint stride, GLboolean pointer, GLint ptrstride);
extern fn void glEdgeFlagv(GLboolean flag);
extern fn void glElementPointerAPPLE(GLenum type);
extern fn void glElementPointerATI(GLenum type);
extern fn void glEnable(GLenum cap);
extern fn void glEnableClientState(GLenum array);
extern fn void glEnableClientStateIndexedEXT(GLenum array, GLuint index);
extern fn void glEnableClientStateiEXT(GLenum array, GLuint index);
extern fn void glEnableDriverControlQCOM(GLuint driverControl);
extern fn void glEnableIndexedEXT(GLenum target, GLuint index);
extern fn void glEnableVariantClientStateEXT(GLuint id);
extern fn void glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
extern fn void glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
extern fn void glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
extern fn void glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
extern fn void glEnableVertexAttribArray(GLuint index);
extern fn void glEnableVertexAttribArrayARB(GLuint index);
extern fn void glEnablei(GLenum target, GLuint index);
extern fn void glEnableiEXT(GLenum target, GLuint index);
extern fn void glEnableiNV(GLenum target, GLuint index);
extern fn void glEnableiOES(GLenum target, GLuint index);
extern fn void glEnd();
extern fn void glEndConditionalRender();
extern fn void glEndConditionalRenderNV();
extern fn void glEndConditionalRenderNVX();
extern fn void glEndFragmentShaderATI();
extern fn void glEndList();
extern fn void glEndOcclusionQueryNV();
extern fn void glEndPerfMonitorAMD(GLuint monitor);
extern fn void glEndPerfQueryINTEL(GLuint queryHandle);
extern fn void glEndQuery(GLenum target);
extern fn void glEndQueryARB(GLenum target);
extern fn void glEndQueryEXT(GLenum target);
extern fn void glEndQueryIndexed(GLenum target, GLuint index);
extern fn void glEndTilingQCOM(GLbitfield preserveMask);
extern fn void glEndTransformFeedback();
extern fn void glEndTransformFeedbackEXT();
extern fn void glEndTransformFeedbackNV();
extern fn void glEndVertexShaderEXT();
extern fn void glEndVideoCaptureNV(GLuint video_capture_slot);
extern fn void glEvalCoord1d(GLdouble u);
extern fn void glEvalCoord1dv(GLdouble u);
extern fn void glEvalCoord1f(GLfloat u);
extern fn void glEvalCoord1fv(GLfloat u);
extern fn void glEvalCoord1xOES(GLfixed u);
extern fn void glEvalCoord1xvOES(GLfixed coords);
extern fn void glEvalCoord2d(GLdouble u, GLdouble v);
extern fn void glEvalCoord2dv(GLdouble u);
extern fn void glEvalCoord2f(GLfloat u, GLfloat v);
extern fn void glEvalCoord2fv(GLfloat u);
extern fn void glEvalCoord2xOES(GLfixed u, GLfixed v);
extern fn void glEvalCoord2xvOES(GLfixed coords);
extern fn void glEvalMapsNV(GLenum target, GLenum mode);
extern fn void glEvalMesh1(GLenum mode, GLint i1, GLint i2);
extern fn void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
extern fn void glEvalPoint1(GLint i);
extern fn void glEvalPoint2(GLint i, GLint j);
extern fn void glEvaluateDepthValuesARB();
extern fn void glExecuteProgramNV(GLenum target, GLuint id, GLfloat params);
extern fn void glExtGetBufferPointervQCOM(GLenum target);
extern fn void glExtGetBuffersQCOM(GLuint buffers, GLint maxBuffers, GLint numBuffers);
extern fn void glExtGetFramebuffersQCOM(GLuint framebuffers, GLint maxFramebuffers, GLint numFramebuffers);
extern fn void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar source, GLint length);
extern fn void glExtGetProgramsQCOM(GLuint programs, GLint maxPrograms, GLint numPrograms);
extern fn void glExtGetRenderbuffersQCOM(GLuint renderbuffers, GLint maxRenderbuffers, GLint numRenderbuffers);
extern fn void glExtGetShadersQCOM(GLuint shaders, GLint maxShaders, GLint numShaders);
extern fn void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint params);
extern fn void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glExtGetTexturesQCOM(GLuint textures, GLint maxTextures, GLint numTextures);
extern fn void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
extern fn void glExtractComponentEXT(GLuint res, GLuint src, GLuint num);
extern fn void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat buffer);
extern fn void glFeedbackBufferxOES(GLsizei n, GLenum type, GLfixed buffer);
extern fn void glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern fn void glFinish();
extern fn void glFinishFenceAPPLE(GLuint fence);
extern fn void glFinishFenceNV(GLuint fence);
extern fn void glFinishObjectAPPLE(GLenum object, GLint name);
extern fn void glFinishTextureSUNX();
extern fn void glFlush();
extern fn void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
extern fn void glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
extern fn void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
extern fn void glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern fn void glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern fn void glFlushPixelDataRangeNV(GLenum target);
extern fn void glFlushRasterSGIX();
extern fn void glFlushStaticDataIBM(GLenum target);
extern fn void glFlushVertexArrayRangeAPPLE(GLsizei length);
extern fn void glFlushVertexArrayRangeNV();
extern fn void glFogCoordFormatNV(GLenum type, GLsizei stride);
extern fn void glFogCoordPointer(GLenum type, GLsizei stride);
extern fn void glFogCoordPointerEXT(GLenum type, GLsizei stride);
extern fn void glFogCoordPointerListIBM(GLenum type, GLint stride, GLint ptrstride);
extern fn void glFogCoordd(GLdouble coord);
extern fn void glFogCoorddEXT(GLdouble coord);
extern fn void glFogCoorddv(GLdouble coord);
extern fn void glFogCoorddvEXT(GLdouble coord);
extern fn void glFogCoordf(GLfloat coord);
extern fn void glFogCoordfEXT(GLfloat coord);
extern fn void glFogCoordfv(GLfloat coord);
extern fn void glFogCoordfvEXT(GLfloat coord);
extern fn void glFogCoordhNV(GLhalfNV fog);
extern fn void glFogCoordhvNV(GLhalfNV fog);
extern fn void glFogFuncSGIS(GLsizei n, GLfloat points);
extern fn void glFogf(GLenum pname, GLfloat param);
extern fn void glFogfv(GLenum pname, GLfloat params);
extern fn void glFogi(GLenum pname, GLint param);
extern fn void glFogiv(GLenum pname, GLint params);
extern fn void glFogx(GLenum pname, GLfixed param);
extern fn void glFogxOES(GLenum pname, GLfixed param);
extern fn void glFogxv(GLenum pname, GLfixed param);
extern fn void glFogxvOES(GLenum pname, GLfixed param);
extern fn void glFragmentColorMaterialSGIX(GLenum face, GLenum mode);
extern fn void glFragmentCoverageColorNV(GLuint color);
extern fn void glFragmentLightModelfSGIX(GLenum pname, GLfloat param);
extern fn void glFragmentLightModelfvSGIX(GLenum pname, GLfloat params);
extern fn void glFragmentLightModeliSGIX(GLenum pname, GLint param);
extern fn void glFragmentLightModelivSGIX(GLenum pname, GLint params);
extern fn void glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
extern fn void glFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat params);
extern fn void glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
extern fn void glFragmentLightivSGIX(GLenum light, GLenum pname, GLint params);
extern fn void glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
extern fn void glFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat params);
extern fn void glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
extern fn void glFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint params);
extern fn void glFrameTerminatorGREMEDY();
extern fn void glFrameZoomSGIX(GLint factor);
extern fn void glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
extern fn void glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, GLenum bufs);
extern fn void glFramebufferFetchBarrierEXT();
extern fn void glFramebufferFetchBarrierQCOM();
extern fn void glFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint providedFeatures);
extern fn void glFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
extern fn void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
extern fn void glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size);
extern fn void glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
extern fn void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern fn void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern fn void glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern fn void glFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, GLfloat v);
extern fn void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, GLfloat v);
extern fn void glFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, GLfloat values);
extern fn void glFramebufferShadingRateEXT(GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
extern fn void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern fn void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
extern fn void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
extern fn void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
extern fn void glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern fn void glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern fn void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern fn void glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern fn void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern fn void glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern fn void glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern fn void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern fn void glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern fn void glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern fn void glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
extern fn void glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
extern fn void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
extern fn void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern fn void glFreeObjectBufferATI(GLuint buffer);
extern fn void glFrontFace(GLenum mode);
extern fn void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern fn void glFrustumf(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern fn void glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern fn void glFrustumx(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern fn void glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern fn void glGenBuffers(GLsizei n, GLuint buffers);
extern fn void glGenBuffersARB(GLsizei n, GLuint buffers);
extern fn void glGenFencesAPPLE(GLsizei n, GLuint fences);
extern fn void glGenFencesNV(GLsizei n, GLuint fences);
extern fn void glGenFramebuffers(GLsizei n, GLuint framebuffers);
extern fn void glGenFramebuffersEXT(GLsizei n, GLuint framebuffers);
extern fn void glGenFramebuffersOES(GLsizei n, GLuint framebuffers);
extern fn void glGenNamesAMD(GLenum identifier, GLuint num, GLuint names);
extern fn void glGenOcclusionQueriesNV(GLsizei n, GLuint ids);
extern fn void glGenPerfMonitorsAMD(GLsizei n, GLuint monitors);
extern fn void glGenProgramPipelines(GLsizei n, GLuint pipelines);
extern fn void glGenProgramPipelinesEXT(GLsizei n, GLuint pipelines);
extern fn void glGenProgramsARB(GLsizei n, GLuint programs);
extern fn void glGenProgramsNV(GLsizei n, GLuint programs);
extern fn void glGenQueries(GLsizei n, GLuint ids);
extern fn void glGenQueriesARB(GLsizei n, GLuint ids);
extern fn void glGenQueriesEXT(GLsizei n, GLuint ids);
extern fn void glGenQueryResourceTagNV(GLsizei n, GLint tagIds);
extern fn void glGenRenderbuffers(GLsizei n, GLuint renderbuffers);
extern fn void glGenRenderbuffersEXT(GLsizei n, GLuint renderbuffers);
extern fn void glGenRenderbuffersOES(GLsizei n, GLuint renderbuffers);
extern fn void glGenSamplers(GLsizei count, GLuint samplers);
extern fn void glGenSemaphoresEXT(GLsizei n, GLuint semaphores);
extern fn void glGenTextures(GLsizei n, GLuint textures);
extern fn void glGenTexturesEXT(GLsizei n, GLuint textures);
extern fn void glGenTransformFeedbacks(GLsizei n, GLuint ids);
extern fn void glGenTransformFeedbacksNV(GLsizei n, GLuint ids);
extern fn void glGenVertexArrays(GLsizei n, GLuint arrays);
extern fn void glGenVertexArraysAPPLE(GLsizei n, GLuint arrays);
extern fn void glGenVertexArraysOES(GLsizei n, GLuint arrays);
extern fn void glGenerateMipmap(GLenum target);
extern fn void glGenerateMipmapEXT(GLenum target);
extern fn void glGenerateMipmapOES(GLenum target);
extern fn void glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
extern fn void glGenerateTextureMipmap(GLuint texture);
extern fn void glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
extern fn void glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint params);
extern fn void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLint size, GLenum type, GLchar name);
extern fn void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei length, GLint size, GLenum type, GLcharARB name);
extern fn void glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei length, GLchar name);
extern fn void glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei length, GLchar name);
extern fn void glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint values);
extern fn void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLint size, GLenum type, GLchar name);
extern fn void glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei length, GLint size, GLenum type, GLcharARB name);
extern fn void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei length, GLchar uniformBlockName);
extern fn void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint params);
extern fn void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei length, GLchar uniformName);
extern fn void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, GLuint uniformIndices, GLenum pname, GLint params);
extern fn void glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLsizei size, GLenum type, GLchar name);
extern fn void glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat params);
extern fn void glGetArrayObjectivATI(GLenum array, GLenum pname, GLint params);
extern fn void glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei count, GLhandleARB obj);
extern fn void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei count, GLuint shaders);
extern fn void glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean data);
extern fn void glGetBooleani_v(GLenum target, GLuint index, GLboolean data);
extern fn void glGetBooleanv(GLenum pname, GLboolean data);
extern fn void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 params);
extern fn void glGetBufferParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint params);
extern fn void glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT params);
extern fn void glGetBufferPointerv(GLenum target, GLenum pname);
extern fn void glGetBufferPointervARB(GLenum target, GLenum pname);
extern fn void glGetBufferPointervOES(GLenum target, GLenum pname);
extern fn void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size);
extern fn void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size);
extern fn void glGetClipPlane(GLenum plane, GLdouble equation);
extern fn void glGetClipPlanef(GLenum plane, GLfloat equation);
extern fn void glGetClipPlanefOES(GLenum plane, GLfloat equation);
extern fn void glGetClipPlanex(GLenum plane, GLfixed equation);
extern fn void glGetClipPlanexOES(GLenum plane, GLfixed equation);
extern fn void glGetColorTable(GLenum target, GLenum format, GLenum type);
extern fn void glGetColorTableEXT(GLenum target, GLenum format, GLenum type);
extern fn void glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetColorTableParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint params);
extern fn void glGetColorTableSGI(GLenum target, GLenum format, GLenum type);
extern fn void glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat params);
extern fn void glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint params);
extern fn void glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat params);
extern fn void glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint params);
extern fn void glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat params);
extern fn void glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod);
extern fn void glGetCompressedTexImage(GLenum target, GLint level);
extern fn void glGetCompressedTexImageARB(GLenum target, GLint level);
extern fn void glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize);
extern fn void glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod);
extern fn void glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize);
extern fn void glGetConvolutionFilter(GLenum target, GLenum format, GLenum type);
extern fn void glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type);
extern fn void glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetCoverageModulationTableNV(GLsizei bufSize, GLfloat v);
extern fn void glGetDetailTexFuncSGIS(GLenum target, GLfloat points);
extern fn void glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble data);
extern fn void glGetDoublei_v(GLenum target, GLuint index, GLdouble data);
extern fn void glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble params);
extern fn void glGetDoublev(GLenum pname, GLdouble data);
extern fn void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei length, GLchar driverControlString);
extern fn void glGetDriverControlsQCOM(GLint num, GLsizei size, GLuint driverControls);
extern fn void glGetFenceivNV(GLuint fence, GLenum pname, GLint params);
extern fn void glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat params);
extern fn void glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint params);
extern fn void glGetFirstPerfQueryIdINTEL(GLuint queryId);
extern fn void glGetFixedv(GLenum pname, GLfixed params);
extern fn void glGetFixedvOES(GLenum pname, GLfixed params);
extern fn void glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat data);
extern fn void glGetFloati_v(GLenum target, GLuint index, GLfloat data);
extern fn void glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat params);
extern fn void glGetFloati_vNV(GLenum target, GLuint index, GLfloat data);
extern fn void glGetFloati_vOES(GLenum target, GLuint index, GLfloat data);
extern fn void glGetFloatv(GLenum pname, GLfloat data);
extern fn void glGetFogFuncSGIS(GLfloat points);
extern fn void glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat params);
extern fn void glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint params);
extern fn void glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat params);
extern fn void glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint params);
extern fn void glGetFragmentShadingRatesEXT(GLsizei samples, GLsizei maxCount, GLsizei count, GLenum shadingRates);
extern fn void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint params);
extern fn void glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint params);
extern fn void glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint params);
extern fn void glGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat values);
extern fn void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint params);
extern fn void glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type);
extern fn void glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type);
extern fn void glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetHistogramParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint params);
extern fn void glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei length, GLcharARB infoLog);
extern fn void glGetInteger64i_v(GLenum target, GLuint index, GLint64 data);
extern fn void glGetInteger64v(GLenum pname, GLint64 data);
extern fn void glGetInteger64vAPPLE(GLenum pname, GLint64 params);
extern fn void glGetInteger64vEXT(GLenum pname, GLint64 data);
extern fn void glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint data);
extern fn void glGetIntegeri_v(GLenum target, GLuint index, GLint data);
extern fn void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint data);
extern fn void glGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT result);
extern fn void glGetIntegerui64vNV(GLenum value, GLuint64EXT result);
extern fn void glGetIntegerv(GLenum pname, GLint data);
extern fn void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint params);
extern fn void glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 params);
extern fn void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint params);
extern fn void glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean data);
extern fn void glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat data);
extern fn void glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint data);
extern fn void glGetLightfv(GLenum light, GLenum pname, GLfloat params);
extern fn void glGetLightiv(GLenum light, GLenum pname, GLint params);
extern fn void glGetLightxOES(GLenum light, GLenum pname, GLfixed params);
extern fn void glGetLightxv(GLenum light, GLenum pname, GLfixed params);
extern fn void glGetLightxvOES(GLenum light, GLenum pname, GLfixed params);
extern fn void glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat params);
extern fn void glGetListParameterivSGIX(GLuint list, GLenum pname, GLint params);
extern fn void glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean data);
extern fn void glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat data);
extern fn void glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint data);
extern fn void glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat params);
extern fn void glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint params);
extern fn void glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed);
extern fn void glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetMapParameterivNV(GLenum target, GLenum pname, GLint params);
extern fn void glGetMapdv(GLenum target, GLenum query, GLdouble v);
extern fn void glGetMapfv(GLenum target, GLenum query, GLfloat v);
extern fn void glGetMapiv(GLenum target, GLenum query, GLint v);
extern fn void glGetMapxvOES(GLenum target, GLenum query, GLfixed v);
extern fn void glGetMaterialfv(GLenum face, GLenum pname, GLfloat params);
extern fn void glGetMaterialiv(GLenum face, GLenum pname, GLint params);
extern fn void glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
extern fn void glGetMaterialxv(GLenum face, GLenum pname, GLfixed params);
extern fn void glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed params);
extern fn void glGetMemoryObjectDetachedResourcesuivNV(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint params);
extern fn void glGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint params);
extern fn void glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type);
extern fn void glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type);
extern fn void glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat params);
extern fn void glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble params);
extern fn void glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat params);
extern fn void glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint params);
extern fn void glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type);
extern fn void glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat params);
extern fn void glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint params);
extern fn void glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint params);
extern fn void glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat params);
extern fn void glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat val);
extern fn void glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat val);
extern fn void glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 params);
extern fn void glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint params);
extern fn void glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint params);
extern fn void glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT params);
extern fn void glGetNamedBufferPointerv(GLuint buffer, GLenum pname);
extern fn void glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname);
extern fn void glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat values);
extern fn void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint params);
extern fn void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint params);
extern fn void glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint param);
extern fn void glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint params);
extern fn void glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint params);
extern fn void glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint params);
extern fn void glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble params);
extern fn void glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat params);
extern fn void glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname);
extern fn void glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint params);
extern fn void glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint params);
extern fn void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint params);
extern fn void glGetNamedStringARB(GLint namelen, GLchar name, GLsizei bufSize, GLint stringlen, GLchar string);
extern fn void glGetNamedStringivARB(GLint namelen, GLchar name, GLenum pname, GLint params);
extern fn void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint nextQueryId);
extern fn void glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat params);
extern fn void glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint params);
extern fn void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei length, GLchar label);
extern fn void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei length, GLchar label);
extern fn void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei length, GLchar label);
extern fn void glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat params);
extern fn void glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint params);
extern fn void glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint params);
extern fn void glGetObjectPtrLabel(GLsizei bufSize, GLsizei length, GLchar label);
extern fn void glGetObjectPtrLabelKHR(GLsizei bufSize, GLsizei length, GLchar label);
extern fn void glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint params);
extern fn void glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint params);
extern fn void glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat value);
extern fn void glGetPathColorGenivNV(GLenum color, GLenum pname, GLint value);
extern fn void glGetPathCommandsNV(GLuint path, GLubyte commands);
extern fn void glGetPathCoordsNV(GLuint path, GLfloat coords);
extern fn void glGetPathDashArrayNV(GLuint path, GLfloat dashArray);
extern fn void glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat metrics);
extern fn void glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLsizei stride, GLfloat metrics);
extern fn void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat value);
extern fn void glGetPathParameterivNV(GLuint path, GLenum pname, GLint value);
extern fn void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat returnedSpacing);
extern fn void glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat value);
extern fn void glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint value);
extern fn void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar counterName, GLuint counterDescLength, GLchar counterDesc, GLuint counterOffset, GLuint counterDataSize, GLuint counterTypeEnum, GLuint counterDataTypeEnum, GLuint64 rawCounterMaxValue);
extern fn void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint data, GLint bytesWritten);
extern fn void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname);
extern fn void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei length, GLchar counterString);
extern fn void glGetPerfMonitorCountersAMD(GLuint group, GLint numCounters, GLint maxActiveCounters, GLsizei counterSize, GLuint counters);
extern fn void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei length, GLchar groupString);
extern fn void glGetPerfMonitorGroupsAMD(GLint numGroups, GLsizei groupsSize, GLuint groups);
extern fn void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLuint bytesWritten);
extern fn void glGetPerfQueryIdByNameINTEL(GLchar queryName, GLuint queryId);
extern fn void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar queryName, GLuint dataSize, GLuint noCounters, GLuint noInstances, GLuint capsMask);
extern fn void glGetPixelMapfv(GLenum map, GLfloat values);
extern fn void glGetPixelMapuiv(GLenum map, GLuint values);
extern fn void glGetPixelMapusv(GLenum map, GLushort values);
extern fn void glGetPixelMapxv(GLenum map, GLint size, GLfixed values);
extern fn void glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat params);
extern fn void glGetPixelTexGenParameterivSGIS(GLenum pname, GLint params);
extern fn void glGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetPointerIndexedvEXT(GLenum target, GLuint index);
extern fn void glGetPointeri_vEXT(GLenum pname, GLuint index);
extern fn void glGetPointerv(GLenum pname);
extern fn void glGetPointervEXT(GLenum pname);
extern fn void glGetPointervKHR(GLenum pname);
extern fn void glGetPolygonStipple(GLubyte mask);
extern fn void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei length, GLenum binaryFormat);
extern fn void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei length, GLenum binaryFormat);
extern fn void glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint params);
extern fn void glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint params);
extern fn void glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble params);
extern fn void glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat params);
extern fn void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei length, GLchar infoLog);
extern fn void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint params);
extern fn void glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint params);
extern fn void glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint params);
extern fn void glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble params);
extern fn void glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat params);
extern fn void glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, GLubyte name, GLdouble params);
extern fn void glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, GLubyte name, GLfloat params);
extern fn void glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble params);
extern fn void glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat params);
extern fn void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei length, GLchar infoLog);
extern fn void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei length, GLchar infoLog);
extern fn void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint params);
extern fn void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint params);
extern fn void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei length, GLchar name);
extern fn void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, GLenum props, GLsizei count, GLsizei length, GLfloat params);
extern fn void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, GLenum props, GLsizei count, GLsizei length, GLint params);
extern fn void glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint values);
extern fn void glGetProgramStringARB(GLenum target, GLenum pname);
extern fn void glGetProgramStringNV(GLuint id, GLenum pname, GLubyte program);
extern fn void glGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint param);
extern fn void glGetProgramiv(GLuint program, GLenum pname, GLint params);
extern fn void glGetProgramivARB(GLenum target, GLenum pname, GLint params);
extern fn void glGetProgramivNV(GLuint id, GLenum pname, GLint params);
extern fn void glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern fn void glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern fn void glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern fn void glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern fn void glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint params);
extern fn void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 params);
extern fn void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 params);
extern fn void glGetQueryObjectiv(GLuint id, GLenum pname, GLint params);
extern fn void glGetQueryObjectivARB(GLuint id, GLenum pname, GLint params);
extern fn void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint params);
extern fn void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 params);
extern fn void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 params);
extern fn void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint params);
extern fn void glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint params);
extern fn void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint params);
extern fn void glGetQueryiv(GLenum target, GLenum pname, GLint params);
extern fn void glGetQueryivARB(GLenum target, GLenum pname, GLint params);
extern fn void glGetQueryivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint params);
extern fn void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint params);
extern fn void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint params);
extern fn void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint params);
extern fn void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint params);
extern fn void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint params);
extern fn void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint params);
extern fn void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat params);
extern fn void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint params);
extern fn void glGetSemaphoreParameterivNV(GLuint semaphore, GLenum pname, GLint params);
extern fn void glGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 params);
extern fn void glGetSeparableFilter(GLenum target, GLenum format, GLenum type);
extern fn void glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type);
extern fn void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei length, GLchar infoLog);
extern fn void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint range, GLint precision);
extern fn void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei length, GLchar source);
extern fn void glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei length, GLcharARB source);
extern fn void glGetShaderiv(GLuint shader, GLenum pname, GLint params);
extern fn void glGetShadingRateImagePaletteNV(GLuint viewport, GLuint entry, GLenum rate);
extern fn void glGetShadingRateSampleLocationivNV(GLenum rate, GLuint samples, GLuint index, GLint location);
extern fn void glGetSharpenTexFuncSGIS(GLenum target, GLfloat points);
extern fn char* glGetString(GLenum name);
extern fn char* glGetStringi(GLenum name, GLuint index);
extern fn void glGetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei length, GLint values);
extern fn void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei count, GLsizei length, GLint values);
extern fn void glGetTexBumpParameterfvATI(GLenum pname, GLfloat param);
extern fn void glGetTexBumpParameterivATI(GLenum pname, GLint param);
extern fn void glGetTexEnvfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetTexEnviv(GLenum target, GLenum pname, GLint params);
extern fn void glGetTexEnvxv(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat weights);
extern fn void glGetTexGendv(GLenum coord, GLenum pname, GLdouble params);
extern fn void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat params);
extern fn void glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat params);
extern fn void glGetTexGeniv(GLenum coord, GLenum pname, GLint params);
extern fn void glGetTexGenivOES(GLenum coord, GLenum pname, GLint params);
extern fn void glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed params);
extern fn void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type);
extern fn void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat params);
extern fn void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint params);
extern fn void glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed params);
extern fn void glGetTexParameterIiv(GLenum target, GLenum pname, GLint params);
extern fn void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint params);
extern fn void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint params);
extern fn void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint params);
extern fn void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint params);
extern fn void glGetTexParameterPointervAPPLE(GLenum target, GLenum pname);
extern fn void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glGetTexParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glGetTexParameterxv(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type);
extern fn void glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat params);
extern fn void glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat params);
extern fn void glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint params);
extern fn void glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint params);
extern fn void glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint params);
extern fn void glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint params);
extern fn void glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint params);
extern fn void glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint params);
extern fn void glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat params);
extern fn void glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat params);
extern fn void glGetTextureParameteriv(GLuint texture, GLenum pname, GLint params);
extern fn void glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint params);
extern fn void glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint params);
extern fn void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLsizei size, GLenum type, GLchar name);
extern fn void glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLsizei size, GLenum type, GLchar name);
extern fn void glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint location);
extern fn void glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 param);
extern fn void glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint param);
extern fn void glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint param);
extern fn void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufSize, GLsizei length, GLchar source);
extern fn void glGetUniformIndices(GLuint program, GLsizei uniformCount, GLchar uniformNames, GLuint uniformIndices);
extern fn void glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint params);
extern fn void glGetUniformdv(GLuint program, GLint location, GLdouble params);
extern fn void glGetUniformfv(GLuint program, GLint location, GLfloat params);
extern fn void glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat params);
extern fn void glGetUniformi64vARB(GLuint program, GLint location, GLint64 params);
extern fn void glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT params);
extern fn void glGetUniformiv(GLuint program, GLint location, GLint params);
extern fn void glGetUniformivARB(GLhandleARB programObj, GLint location, GLint params);
extern fn void glGetUniformui64vARB(GLuint program, GLint location, GLuint64 params);
extern fn void glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT params);
extern fn void glGetUniformuiv(GLuint program, GLint location, GLuint params);
extern fn void glGetUniformuivEXT(GLuint program, GLint location, GLuint params);
extern fn void glGetUnsignedBytevEXT(GLenum pname, GLubyte data);
extern fn void glGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte data);
extern fn void glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat params);
extern fn void glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint params);
extern fn void glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean data);
extern fn void glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat data);
extern fn void glGetVariantIntegervEXT(GLuint id, GLenum value, GLint data);
extern fn void glGetVariantPointervEXT(GLuint id, GLenum value);
extern fn void glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 param);
extern fn void glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint param);
extern fn void glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint param);
extern fn void glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint param);
extern fn void glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname);
extern fn void glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname);
extern fn void glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint param);
extern fn void glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat params);
extern fn void glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint params);
extern fn void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint params);
extern fn void glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint params);
extern fn void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint params);
extern fn void glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint params);
extern fn void glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble params);
extern fn void glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble params);
extern fn void glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT params);
extern fn void glGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT params);
extern fn void glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT params);
extern fn void glGetVertexAttribPointerv(GLuint index, GLenum pname);
extern fn void glGetVertexAttribPointervARB(GLuint index, GLenum pname);
extern fn void glGetVertexAttribPointervNV(GLuint index, GLenum pname);
extern fn void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble params);
extern fn void glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble params);
extern fn void glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble params);
extern fn void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat params);
extern fn void glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat params);
extern fn void glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat params);
extern fn void glGetVertexAttribiv(GLuint index, GLenum pname, GLint params);
extern fn void glGetVertexAttribivARB(GLuint index, GLenum pname, GLint params);
extern fn void glGetVertexAttribivNV(GLuint index, GLenum pname, GLint params);
extern fn void glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble params);
extern fn void glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat params);
extern fn void glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint params);
extern fn void glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint params);
extern fn void glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT params);
extern fn void glGetVideoivNV(GLuint video_slot, GLenum pname, GLint params);
extern fn void glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT params);
extern fn void glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint params);
extern fn void glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize);
extern fn void glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize);
extern fn void glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble v);
extern fn void glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble v);
extern fn void glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat v);
extern fn void glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat v);
extern fn void glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint v);
extern fn void glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint v);
extern fn void glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat values);
extern fn void glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat values);
extern fn void glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint values);
extern fn void glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint values);
extern fn void glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort values);
extern fn void glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort values);
extern fn void glGetnPolygonStipple(GLsizei bufSize, GLubyte pattern);
extern fn void glGetnPolygonStippleARB(GLsizei bufSize, GLubyte pattern);
extern fn void glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLsizei columnBufSize);
extern fn void glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLsizei columnBufSize);
extern fn void glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble params);
extern fn void glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble params);
extern fn void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat params);
extern fn void glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat params);
extern fn void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat params);
extern fn void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat params);
extern fn void glGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 params);
extern fn void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint params);
extern fn void glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint params);
extern fn void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint params);
extern fn void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint params);
extern fn void glGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 params);
extern fn void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint params);
extern fn void glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint params);
extern fn void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint params);
extern fn void glGlobalAlphaFactorbSUN(GLbyte factor);
extern fn void glGlobalAlphaFactordSUN(GLdouble factor);
extern fn void glGlobalAlphaFactorfSUN(GLfloat factor);
extern fn void glGlobalAlphaFactoriSUN(GLint factor);
extern fn void glGlobalAlphaFactorsSUN(GLshort factor);
extern fn void glGlobalAlphaFactorubSUN(GLubyte factor);
extern fn void glGlobalAlphaFactoruiSUN(GLuint factor);
extern fn void glGlobalAlphaFactorusSUN(GLushort factor);
extern fn void glHint(GLenum target, GLenum mode);
extern fn void glHintPGI(GLenum target, GLint mode);
extern fn void glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern fn void glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern fn void glIglooInterfaceSGIX(GLenum pname);
extern fn void glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
extern fn void glImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat params);
extern fn void glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
extern fn void glImageTransformParameterivHP(GLenum target, GLenum pname, GLint params);
extern fn void glImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
extern fn void glImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType);
extern fn void glImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType);
extern fn void glImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd);
extern fn void glImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType);
extern fn void glImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType);
extern fn void glIndexFormatNV(GLenum type, GLsizei stride);
extern fn void glIndexFuncEXT(GLenum func, GLclampf ref);
extern fn void glIndexMask(GLuint mask);
extern fn void glIndexMaterialEXT(GLenum face, GLenum mode);
extern fn void glIndexPointer(GLenum type, GLsizei stride);
extern fn void glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count);
extern fn void glIndexPointerListIBM(GLenum type, GLint stride, GLint ptrstride);
extern fn void glIndexd(GLdouble c);
extern fn void glIndexdv(GLdouble c);
extern fn void glIndexf(GLfloat c);
extern fn void glIndexfv(GLfloat c);
extern fn void glIndexi(GLint c);
extern fn void glIndexiv(GLint c);
extern fn void glIndexs(GLshort c);
extern fn void glIndexsv(GLshort c);
extern fn void glIndexub(GLubyte c);
extern fn void glIndexubv(GLubyte c);
extern fn void glIndexxOES(GLfixed component);
extern fn void glIndexxvOES(GLfixed component);
extern fn void glInitNames();
extern fn void glInsertComponentEXT(GLuint res, GLuint src, GLuint num);
extern fn void glInsertEventMarkerEXT(GLsizei length, GLchar marker);
extern fn void glInstrumentsBufferSGIX(GLsizei size, GLint buffer);
extern fn void glInterleavedArrays(GLenum format, GLsizei stride);
extern fn void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
extern fn void glInvalidateBufferData(GLuint buffer);
extern fn void glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern fn void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, GLenum attachments);
extern fn void glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, GLenum attachments);
extern fn void glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, GLenum attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, GLenum attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glInvalidateTexImage(GLuint texture, GLint level);
extern fn void glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glLGPUInterlockNVX();
extern fn void glLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, GLchar label);
extern fn void glLightEnviSGIX(GLenum pname, GLint param);
extern fn void glLightModelf(GLenum pname, GLfloat param);
extern fn void glLightModelfv(GLenum pname, GLfloat params);
extern fn void glLightModeli(GLenum pname, GLint param);
extern fn void glLightModeliv(GLenum pname, GLint params);
extern fn void glLightModelx(GLenum pname, GLfixed param);
extern fn void glLightModelxOES(GLenum pname, GLfixed param);
extern fn void glLightModelxv(GLenum pname, GLfixed param);
extern fn void glLightModelxvOES(GLenum pname, GLfixed param);
extern fn void glLightf(GLenum light, GLenum pname, GLfloat param);
extern fn void glLightfv(GLenum light, GLenum pname, GLfloat params);
extern fn void glLighti(GLenum light, GLenum pname, GLint param);
extern fn void glLightiv(GLenum light, GLenum pname, GLint params);
extern fn void glLightx(GLenum light, GLenum pname, GLfixed param);
extern fn void glLightxOES(GLenum light, GLenum pname, GLfixed param);
extern fn void glLightxv(GLenum light, GLenum pname, GLfixed params);
extern fn void glLightxvOES(GLenum light, GLenum pname, GLfixed params);
extern fn void glLineStipple(GLint factor, GLushort pattern);
extern fn void glLineWidth(GLfloat width);
extern fn void glLineWidthx(GLfixed width);
extern fn void glLineWidthxOES(GLfixed width);
extern fn void glLinkProgram(GLuint program);
extern fn void glLinkProgramARB(GLhandleARB programObj);
extern fn void glListBase(GLuint base);
extern fn void glListDrawCommandsStatesClientNV(GLuint list, GLuint segment, GLsizei sizes, GLuint states, GLuint fbos, GLuint count);
extern fn void glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
extern fn void glListParameterfvSGIX(GLuint list, GLenum pname, GLfloat params);
extern fn void glListParameteriSGIX(GLuint list, GLenum pname, GLint param);
extern fn void glListParameterivSGIX(GLuint list, GLenum pname, GLint params);
extern fn void glLoadIdentity();
extern fn void glLoadIdentityDeformationMapSGIX(GLbitfield mask);
extern fn void glLoadMatrixd(GLdouble m);
extern fn void glLoadMatrixf(GLfloat m);
extern fn void glLoadMatrixx(GLfixed m);
extern fn void glLoadMatrixxOES(GLfixed m);
extern fn void glLoadName(GLuint name);
extern fn void glLoadPaletteFromModelViewMatrixOES();
extern fn void glLoadProgramNV(GLenum target, GLuint id, GLsizei len, GLubyte program);
extern fn void glLoadTransposeMatrixd(GLdouble m);
extern fn void glLoadTransposeMatrixdARB(GLdouble m);
extern fn void glLoadTransposeMatrixf(GLfloat m);
extern fn void glLoadTransposeMatrixfARB(GLfloat m);
extern fn void glLoadTransposeMatrixxOES(GLfixed m);
extern fn void glLockArraysEXT(GLint first, GLsizei count);
extern fn void glLogicOp(GLenum opcode);
extern fn void glMakeBufferNonResidentNV(GLenum target);
extern fn void glMakeBufferResidentNV(GLenum target, GLenum access);
extern fn void glMakeImageHandleNonResidentARB(GLuint64 handle);
extern fn void glMakeImageHandleNonResidentNV(GLuint64 handle);
extern fn void glMakeImageHandleResidentARB(GLuint64 handle, GLenum access);
extern fn void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
extern fn void glMakeNamedBufferNonResidentNV(GLuint buffer);
extern fn void glMakeNamedBufferResidentNV(GLuint buffer, GLenum access);
extern fn void glMakeTextureHandleNonResidentARB(GLuint64 handle);
extern fn void glMakeTextureHandleNonResidentNV(GLuint64 handle);
extern fn void glMakeTextureHandleResidentARB(GLuint64 handle);
extern fn void glMakeTextureHandleResidentNV(GLuint64 handle);
extern fn void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble points);
extern fn void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat points);
extern fn void glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
extern fn void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble points);
extern fn void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat points);
extern fn void glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
extern fn void * glMapBuffer(GLenum target, GLenum access);
extern fn void * glMapBufferARB(GLenum target, GLenum access);
extern fn void * glMapBufferOES(GLenum target, GLenum access);
extern fn void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern fn void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern fn void glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed);
extern fn void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
extern fn void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
extern fn void glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
extern fn void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
extern fn void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
extern fn void glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
extern fn void * glMapNamedBuffer(GLuint buffer, GLenum access);
extern fn void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
extern fn void * glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern fn void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern fn void * glMapObjectBufferATI(GLuint buffer);
extern fn void glMapParameterfvNV(GLenum target, GLenum pname, GLfloat params);
extern fn void glMapParameterivNV(GLenum target, GLenum pname, GLint params);
extern fn void * glMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint stride, GLenum layout);
extern fn void glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble points);
extern fn void glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat points);
extern fn void glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble points);
extern fn void glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat points);
extern fn void glMaterialf(GLenum face, GLenum pname, GLfloat param);
extern fn void glMaterialfv(GLenum face, GLenum pname, GLfloat params);
extern fn void glMateriali(GLenum face, GLenum pname, GLint param);
extern fn void glMaterialiv(GLenum face, GLenum pname, GLint params);
extern fn void glMaterialx(GLenum face, GLenum pname, GLfixed param);
extern fn void glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
extern fn void glMaterialxv(GLenum face, GLenum pname, GLfixed param);
extern fn void glMaterialxvOES(GLenum face, GLenum pname, GLfixed param);
extern fn void glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern fn void glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride);
extern fn void glMatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride);
extern fn void glMatrixIndexubvARB(GLint size, GLubyte indices);
extern fn void glMatrixIndexuivARB(GLint size, GLuint indices);
extern fn void glMatrixIndexusvARB(GLint size, GLushort indices);
extern fn void glMatrixLoad3x2fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixLoad3x3fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixLoadIdentityEXT(GLenum mode);
extern fn void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixLoadTransposedEXT(GLenum mode, GLdouble m);
extern fn void glMatrixLoadTransposefEXT(GLenum mode, GLfloat m);
extern fn void glMatrixLoaddEXT(GLenum mode, GLdouble m);
extern fn void glMatrixLoadfEXT(GLenum mode, GLfloat m);
extern fn void glMatrixMode(GLenum mode);
extern fn void glMatrixMult3x2fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixMult3x3fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixMultTranspose3x3fNV(GLenum matrixMode, GLfloat m);
extern fn void glMatrixMultTransposedEXT(GLenum mode, GLdouble m);
extern fn void glMatrixMultTransposefEXT(GLenum mode, GLfloat m);
extern fn void glMatrixMultdEXT(GLenum mode, GLdouble m);
extern fn void glMatrixMultfEXT(GLenum mode, GLfloat m);
extern fn void glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern fn void glMatrixPopEXT(GLenum mode);
extern fn void glMatrixPushEXT(GLenum mode);
extern fn void glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern fn void glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern fn void glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern fn void glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern fn void glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern fn void glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern fn void glMaxShaderCompilerThreadsKHR(GLuint count);
extern fn void glMaxShaderCompilerThreadsARB(GLuint count);
extern fn void glMemoryBarrier(GLbitfield barriers);
extern fn void glMemoryBarrierByRegion(GLbitfield barriers);
extern fn void glMemoryBarrierEXT(GLbitfield barriers);
extern fn void glMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint params);
extern fn void glMinSampleShading(GLfloat value);
extern fn void glMinSampleShadingARB(GLfloat value);
extern fn void glMinSampleShadingOES(GLfloat value);
extern fn void glMinmax(GLenum target, GLenum internalformat, GLboolean sink);
extern fn void glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
extern fn void glMultMatrixd(GLdouble m);
extern fn void glMultMatrixf(GLfloat m);
extern fn void glMultMatrixx(GLfixed m);
extern fn void glMultMatrixxOES(GLfixed m);
extern fn void glMultTransposeMatrixd(GLdouble m);
extern fn void glMultTransposeMatrixdARB(GLdouble m);
extern fn void glMultTransposeMatrixf(GLfloat m);
extern fn void glMultTransposeMatrixfARB(GLfloat m);
extern fn void glMultTransposeMatrixxOES(GLfixed m);
extern fn void glMultiDrawArrays(GLenum mode, GLint first, GLsizei count, GLsizei drawcount);
extern fn void glMultiDrawArraysEXT(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern fn void glMultiDrawArraysIndirect(GLenum mode, GLsizei drawcount, GLsizei stride);
extern fn void glMultiDrawArraysIndirectAMD(GLenum mode, GLsizei primcount, GLsizei stride);
extern fn void glMultiDrawArraysIndirectBindlessCountNV(GLenum mode, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
extern fn void glMultiDrawArraysIndirectBindlessNV(GLenum mode, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
extern fn void glMultiDrawArraysIndirectCount(GLenum mode, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern fn void glMultiDrawArraysIndirectCountARB(GLenum mode, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern fn void glMultiDrawArraysIndirectEXT(GLenum mode, GLsizei drawcount, GLsizei stride);
extern fn void glMultiDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern fn void glMultiDrawElements(GLenum mode, GLsizei count, GLenum type, GLsizei drawcount);
extern fn void glMultiDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, GLsizei drawcount, GLint basevertex);
extern fn void glMultiDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, GLsizei drawcount, GLint basevertex);
extern fn void glMultiDrawElementsEXT(GLenum mode, GLsizei count, GLenum type, GLsizei primcount);
extern fn void glMultiDrawElementsIndirect(GLenum mode, GLenum type, GLsizei drawcount, GLsizei stride);
extern fn void glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, GLsizei primcount, GLsizei stride);
extern fn void glMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
extern fn void glMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
extern fn void glMultiDrawElementsIndirectCount(GLenum mode, GLenum type, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern fn void glMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern fn void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, GLsizei drawcount, GLsizei stride);
extern fn void glMultiDrawMeshTasksIndirectNV(GLintptr indirect, GLsizei drawcount, GLsizei stride);
extern fn void glMultiDrawMeshTasksIndirectCountNV(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern fn void glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count, GLsizei primcount);
extern fn void glMultiModeDrawArraysIBM(GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLint modestride);
extern fn void glMultiModeDrawElementsIBM(GLenum mode, GLsizei count, GLenum type, GLsizei primcount, GLint modestride);
extern fn void glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glMultiTexCoord1bOES(GLenum texture, GLbyte s);
extern fn void glMultiTexCoord1bvOES(GLenum texture, GLbyte coords);
extern fn void glMultiTexCoord1d(GLenum target, GLdouble s);
extern fn void glMultiTexCoord1dARB(GLenum target, GLdouble s);
extern fn void glMultiTexCoord1dv(GLenum target, GLdouble v);
extern fn void glMultiTexCoord1dvARB(GLenum target, GLdouble v);
extern fn void glMultiTexCoord1f(GLenum target, GLfloat s);
extern fn void glMultiTexCoord1fARB(GLenum target, GLfloat s);
extern fn void glMultiTexCoord1fv(GLenum target, GLfloat v);
extern fn void glMultiTexCoord1fvARB(GLenum target, GLfloat v);
extern fn void glMultiTexCoord1hNV(GLenum target, GLhalfNV s);
extern fn void glMultiTexCoord1hvNV(GLenum target, GLhalfNV v);
extern fn void glMultiTexCoord1i(GLenum target, GLint s);
extern fn void glMultiTexCoord1iARB(GLenum target, GLint s);
extern fn void glMultiTexCoord1iv(GLenum target, GLint v);
extern fn void glMultiTexCoord1ivARB(GLenum target, GLint v);
extern fn void glMultiTexCoord1s(GLenum target, GLshort s);
extern fn void glMultiTexCoord1sARB(GLenum target, GLshort s);
extern fn void glMultiTexCoord1sv(GLenum target, GLshort v);
extern fn void glMultiTexCoord1svARB(GLenum target, GLshort v);
extern fn void glMultiTexCoord1xOES(GLenum texture, GLfixed s);
extern fn void glMultiTexCoord1xvOES(GLenum texture, GLfixed coords);
extern fn void glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
extern fn void glMultiTexCoord2bvOES(GLenum texture, GLbyte coords);
extern fn void glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
extern fn void glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
extern fn void glMultiTexCoord2dv(GLenum target, GLdouble v);
extern fn void glMultiTexCoord2dvARB(GLenum target, GLdouble v);
extern fn void glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
extern fn void glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
extern fn void glMultiTexCoord2fv(GLenum target, GLfloat v);
extern fn void glMultiTexCoord2fvARB(GLenum target, GLfloat v);
extern fn void glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
extern fn void glMultiTexCoord2hvNV(GLenum target, GLhalfNV v);
extern fn void glMultiTexCoord2i(GLenum target, GLint s, GLint t);
extern fn void glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);
extern fn void glMultiTexCoord2iv(GLenum target, GLint v);
extern fn void glMultiTexCoord2ivARB(GLenum target, GLint v);
extern fn void glMultiTexCoord2s(GLenum target, GLshort s, GLshort t);
extern fn void glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
extern fn void glMultiTexCoord2sv(GLenum target, GLshort v);
extern fn void glMultiTexCoord2svARB(GLenum target, GLshort v);
extern fn void glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
extern fn void glMultiTexCoord2xvOES(GLenum texture, GLfixed coords);
extern fn void glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
extern fn void glMultiTexCoord3bvOES(GLenum texture, GLbyte coords);
extern fn void glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern fn void glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern fn void glMultiTexCoord3dv(GLenum target, GLdouble v);
extern fn void glMultiTexCoord3dvARB(GLenum target, GLdouble v);
extern fn void glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern fn void glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern fn void glMultiTexCoord3fv(GLenum target, GLfloat v);
extern fn void glMultiTexCoord3fvARB(GLenum target, GLfloat v);
extern fn void glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern fn void glMultiTexCoord3hvNV(GLenum target, GLhalfNV v);
extern fn void glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
extern fn void glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
extern fn void glMultiTexCoord3iv(GLenum target, GLint v);
extern fn void glMultiTexCoord3ivARB(GLenum target, GLint v);
extern fn void glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
extern fn void glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
extern fn void glMultiTexCoord3sv(GLenum target, GLshort v);
extern fn void glMultiTexCoord3svARB(GLenum target, GLshort v);
extern fn void glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
extern fn void glMultiTexCoord3xvOES(GLenum texture, GLfixed coords);
extern fn void glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
extern fn void glMultiTexCoord4bvOES(GLenum texture, GLbyte coords);
extern fn void glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern fn void glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern fn void glMultiTexCoord4dv(GLenum target, GLdouble v);
extern fn void glMultiTexCoord4dvARB(GLenum target, GLdouble v);
extern fn void glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern fn void glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern fn void glMultiTexCoord4fv(GLenum target, GLfloat v);
extern fn void glMultiTexCoord4fvARB(GLenum target, GLfloat v);
extern fn void glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern fn void glMultiTexCoord4hvNV(GLenum target, GLhalfNV v);
extern fn void glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern fn void glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern fn void glMultiTexCoord4iv(GLenum target, GLint v);
extern fn void glMultiTexCoord4ivARB(GLenum target, GLint v);
extern fn void glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern fn void glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern fn void glMultiTexCoord4sv(GLenum target, GLshort v);
extern fn void glMultiTexCoord4svARB(GLenum target, GLshort v);
extern fn void glMultiTexCoord4x(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern fn void glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern fn void glMultiTexCoord4xvOES(GLenum texture, GLfixed coords);
extern fn void glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP1uiv(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP2uiv(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP3uiv(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordP4uiv(GLenum texture, GLenum type, GLuint coords);
extern fn void glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride);
extern fn void glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern fn void glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat params);
extern fn void glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern fn void glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
extern fn void glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble params);
extern fn void glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
extern fn void glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat params);
extern fn void glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
extern fn void glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint params);
extern fn void glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type);
extern fn void glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type);
extern fn void glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type);
extern fn void glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint params);
extern fn void glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern fn void glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat params);
extern fn void glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern fn void glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint params);
extern fn void glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
extern fn void glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type);
extern fn void glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glMulticastBarrierNV();
extern fn void glMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern fn void glMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern fn void glMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern fn void glMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, GLfloat v);
extern fn void glMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 params);
extern fn void glMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint params);
extern fn void glMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 params);
extern fn void glMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint params);
extern fn void glMulticastScissorArrayvNVX(GLuint gpu, GLuint first, GLsizei count, GLint v);
extern fn void glMulticastViewportArrayvNVX(GLuint gpu, GLuint first, GLsizei count, GLfloat v);
extern fn void glMulticastViewportPositionWScaleNVX(GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
extern fn void glMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask);
extern fn void glNamedBufferAttachMemoryNV(GLuint buffer, GLuint memory, GLuint64 offset);
extern fn void glNamedBufferData(GLuint buffer, GLsizeiptr size, GLenum usage);
extern fn void glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, GLenum usage);
extern fn void glNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern fn void glNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern fn void glNamedBufferPageCommitmentMemNV(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
extern fn void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, GLbitfield flags);
extern fn void glNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
extern fn void glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, GLbitfield flags);
extern fn void glNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
extern fn void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern fn void glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
extern fn void glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, GLenum bufs);
extern fn void glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
extern fn void glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
extern fn void glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
extern fn void glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern fn void glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern fn void glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, GLfloat v);
extern fn void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, GLfloat v);
extern fn void glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern fn void glNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, GLfloat values);
extern fn void glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern fn void glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern fn void glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern fn void glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern fn void glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern fn void glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern fn void glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, GLdouble params);
extern fn void glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, GLfloat params);
extern fn void glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern fn void glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, GLint params);
extern fn void glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern fn void glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, GLuint params);
extern fn void glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, GLfloat params);
extern fn void glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, GLint params);
extern fn void glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, GLuint params);
extern fn void glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len);
extern fn void glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedRenderbufferStorageMultisampleAdvancedAMD(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glNamedStringARB(GLenum type, GLint namelen, GLchar name, GLint stringlen, GLchar string);
extern fn void glNewList(GLuint list, GLenum mode);
extern fn void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
extern fn void glNormal3bv(GLbyte v);
extern fn void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
extern fn void glNormal3dv(GLdouble v);
extern fn void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
extern fn void glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glNormal3fVertex3fvSUN(GLfloat n, GLfloat v);
extern fn void glNormal3fv(GLfloat v);
extern fn void glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
extern fn void glNormal3hvNV(GLhalfNV v);
extern fn void glNormal3i(GLint nx, GLint ny, GLint nz);
extern fn void glNormal3iv(GLint v);
extern fn void glNormal3s(GLshort nx, GLshort ny, GLshort nz);
extern fn void glNormal3sv(GLshort v);
extern fn void glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz);
extern fn void glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
extern fn void glNormal3xvOES(GLfixed coords);
extern fn void glNormalFormatNV(GLenum type, GLsizei stride);
extern fn void glNormalP3ui(GLenum type, GLuint coords);
extern fn void glNormalP3uiv(GLenum type, GLuint coords);
extern fn void glNormalPointer(GLenum type, GLsizei stride);
extern fn void glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count);
extern fn void glNormalPointerListIBM(GLenum type, GLint stride, GLint ptrstride);
extern fn void glNormalPointervINTEL(GLenum type);
extern fn void glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
extern fn void glNormalStream3bvATI(GLenum stream, GLbyte coords);
extern fn void glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
extern fn void glNormalStream3dvATI(GLenum stream, GLdouble coords);
extern fn void glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
extern fn void glNormalStream3fvATI(GLenum stream, GLfloat coords);
extern fn void glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
extern fn void glNormalStream3ivATI(GLenum stream, GLint coords);
extern fn void glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
extern fn void glNormalStream3svATI(GLenum stream, GLshort coords);
extern fn void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, GLchar label);
extern fn void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, GLchar label);
extern fn void glObjectPtrLabel(GLsizei length, GLchar label);
extern fn void glObjectPtrLabelKHR(GLsizei length, GLchar label);
extern fn void glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern fn void glOrthof(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern fn void glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern fn void glOrthox(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern fn void glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern fn void glPNTrianglesfATI(GLenum pname, GLfloat param);
extern fn void glPNTrianglesiATI(GLenum pname, GLint param);
extern fn void glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
extern fn void glPassThrough(GLfloat token);
extern fn void glPassThroughxOES(GLfixed token);
extern fn void glPatchParameterfv(GLenum pname, GLfloat values);
extern fn void glPatchParameteri(GLenum pname, GLint value);
extern fn void glPatchParameteriEXT(GLenum pname, GLint value);
extern fn void glPatchParameteriOES(GLenum pname, GLint value);
extern fn void glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, GLfloat coeffs);
extern fn void glPathCommandsNV(GLuint path, GLsizei numCommands, GLubyte commands, GLsizei numCoords, GLenum coordType);
extern fn void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType);
extern fn void glPathCoverDepthFuncNV(GLenum func);
extern fn void glPathDashArrayNV(GLuint path, GLsizei dashCount, GLfloat dashArray);
extern fn void glPathFogGenNV(GLenum genMode);
extern fn void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern fn void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern fn void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
extern fn void glPathParameterfvNV(GLuint path, GLenum pname, GLfloat value);
extern fn void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
extern fn void glPathParameterivNV(GLuint path, GLenum pname, GLint value);
extern fn void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
extern fn void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
extern fn void glPathStringNV(GLuint path, GLenum format, GLsizei length);
extern fn void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, GLubyte commands, GLsizei numCoords, GLenum coordType);
extern fn void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType);
extern fn void glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, GLfloat coeffs);
extern fn void glPauseTransformFeedback();
extern fn void glPauseTransformFeedbackNV();
extern fn void glPixelDataRangeNV(GLenum target, GLsizei length);
extern fn void glPixelMapfv(GLenum map, GLsizei mapsize, GLfloat values);
extern fn void glPixelMapuiv(GLenum map, GLsizei mapsize, GLuint values);
extern fn void glPixelMapusv(GLenum map, GLsizei mapsize, GLushort values);
extern fn void glPixelMapx(GLenum map, GLint size, GLfixed values);
extern fn void glPixelStoref(GLenum pname, GLfloat param);
extern fn void glPixelStorei(GLenum pname, GLint param);
extern fn void glPixelStorex(GLenum pname, GLfixed param);
extern fn void glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
extern fn void glPixelTexGenParameterfvSGIS(GLenum pname, GLfloat params);
extern fn void glPixelTexGenParameteriSGIS(GLenum pname, GLint param);
extern fn void glPixelTexGenParameterivSGIS(GLenum pname, GLint params);
extern fn void glPixelTexGenSGIX(GLenum mode);
extern fn void glPixelTransferf(GLenum pname, GLfloat param);
extern fn void glPixelTransferi(GLenum pname, GLint param);
extern fn void glPixelTransferxOES(GLenum pname, GLfixed param);
extern fn void glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
extern fn void glPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat params);
extern fn void glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
extern fn void glPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glPixelZoom(GLfloat xfactor, GLfloat yfactor);
extern fn void glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
extern fn void glPointParameterf(GLenum pname, GLfloat param);
extern fn void glPointParameterfARB(GLenum pname, GLfloat param);
extern fn void glPointParameterfEXT(GLenum pname, GLfloat param);
extern fn void glPointParameterfSGIS(GLenum pname, GLfloat param);
extern fn void glPointParameterfv(GLenum pname, GLfloat params);
extern fn void glPointParameterfvARB(GLenum pname, GLfloat params);
extern fn void glPointParameterfvEXT(GLenum pname, GLfloat params);
extern fn void glPointParameterfvSGIS(GLenum pname, GLfloat params);
extern fn void glPointParameteri(GLenum pname, GLint param);
extern fn void glPointParameteriNV(GLenum pname, GLint param);
extern fn void glPointParameteriv(GLenum pname, GLint params);
extern fn void glPointParameterivNV(GLenum pname, GLint params);
extern fn void glPointParameterx(GLenum pname, GLfixed param);
extern fn void glPointParameterxOES(GLenum pname, GLfixed param);
extern fn void glPointParameterxv(GLenum pname, GLfixed params);
extern fn void glPointParameterxvOES(GLenum pname, GLfixed params);
extern fn void glPointSize(GLfloat size);
extern fn void glPointSizePointerOES(GLenum type, GLsizei stride);
extern fn void glPointSizex(GLfixed size);
extern fn void glPointSizexOES(GLfixed size);
extern fn void glPolygonMode(GLenum face, GLenum mode);
extern fn void glPolygonModeNV(GLenum face, GLenum mode);
extern fn void glPolygonOffset(GLfloat factor, GLfloat units);
extern fn void glPolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp);
extern fn void glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
extern fn void glPolygonOffsetEXT(GLfloat factor, GLfloat bias);
extern fn void glPolygonOffsetx(GLfixed factor, GLfixed units);
extern fn void glPolygonOffsetxOES(GLfixed factor, GLfixed units);
extern fn void glPolygonStipple(GLubyte mask);
extern fn void glPopAttrib();
extern fn void glPopClientAttrib();
extern fn void glPopDebugGroup();
extern fn void glPopDebugGroupKHR();
extern fn void glPopGroupMarkerEXT();
extern fn void glPopMatrix();
extern fn void glPopName();
extern fn void glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
extern fn void glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
extern fn void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern fn void glPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern fn void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern fn void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern fn void glPrimitiveRestartIndex(GLuint index);
extern fn void glPrimitiveRestartIndexNV(GLuint index);
extern fn void glPrimitiveRestartNV();
extern fn void glPrioritizeTextures(GLsizei n, GLuint textures, GLfloat priorities);
extern fn void glPrioritizeTexturesEXT(GLsizei n, GLuint textures, GLclampf priorities);
extern fn void glPrioritizeTexturesxOES(GLsizei n, GLuint textures, GLfixed priorities);
extern fn void glProgramBinary(GLuint program, GLenum binaryFormat, GLsizei length);
extern fn void glProgramBinaryOES(GLuint program, GLenum binaryFormat, GLint length);
extern fn void glProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, GLint params);
extern fn void glProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, GLuint params);
extern fn void glProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, GLfloat params);
extern fn void glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glProgramEnvParameter4dvARB(GLenum target, GLuint index, GLdouble params);
extern fn void glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glProgramEnvParameter4fvARB(GLenum target, GLuint index, GLfloat params);
extern fn void glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern fn void glProgramEnvParameterI4ivNV(GLenum target, GLuint index, GLint params);
extern fn void glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern fn void glProgramEnvParameterI4uivNV(GLenum target, GLuint index, GLuint params);
extern fn void glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, GLfloat params);
extern fn void glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, GLint params);
extern fn void glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, GLuint params);
extern fn void glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glProgramLocalParameter4dvARB(GLenum target, GLuint index, GLdouble params);
extern fn void glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glProgramLocalParameter4fvARB(GLenum target, GLuint index, GLfloat params);
extern fn void glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern fn void glProgramLocalParameterI4ivNV(GLenum target, GLuint index, GLint params);
extern fn void glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern fn void glProgramLocalParameterI4uivNV(GLenum target, GLuint index, GLuint params);
extern fn void glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, GLfloat params);
extern fn void glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, GLint params);
extern fn void glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, GLuint params);
extern fn void glProgramNamedParameter4dNV(GLuint id, GLsizei len, GLubyte name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glProgramNamedParameter4dvNV(GLuint id, GLsizei len, GLubyte name, GLdouble v);
extern fn void glProgramNamedParameter4fNV(GLuint id, GLsizei len, GLubyte name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glProgramNamedParameter4fvNV(GLuint id, GLsizei len, GLubyte name, GLfloat v);
extern fn void glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glProgramParameter4dvNV(GLenum target, GLuint index, GLdouble v);
extern fn void glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glProgramParameter4fvNV(GLenum target, GLuint index, GLfloat v);
extern fn void glProgramParameteri(GLuint program, GLenum pname, GLint value);
extern fn void glProgramParameteriARB(GLuint program, GLenum pname, GLint value);
extern fn void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
extern fn void glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, GLdouble v);
extern fn void glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, GLfloat v);
extern fn void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, GLfloat coeffs);
extern fn void glProgramStringARB(GLenum target, GLenum format, GLsizei len);
extern fn void glProgramSubroutineParametersuivNV(GLenum target, GLsizei count, GLuint params);
extern fn void glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
extern fn void glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
extern fn void glProgramUniform1dv(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
extern fn void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
extern fn void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform1i(GLuint program, GLint location, GLint v0);
extern fn void glProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x);
extern fn void glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
extern fn void glProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, GLint64 value);
extern fn void glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, GLint64EXT value);
extern fn void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
extern fn void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
extern fn void glProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x);
extern fn void glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
extern fn void glProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, GLuint64 value);
extern fn void glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, GLuint64EXT value);
extern fn void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
extern fn void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
extern fn void glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
extern fn void glProgramUniform2dv(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern fn void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern fn void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
extern fn void glProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y);
extern fn void glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
extern fn void glProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, GLint64 value);
extern fn void glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, GLint64EXT value);
extern fn void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
extern fn void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
extern fn void glProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y);
extern fn void glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
extern fn void glProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, GLuint64 value);
extern fn void glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, GLuint64EXT value);
extern fn void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
extern fn void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
extern fn void glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
extern fn void glProgramUniform3dv(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern fn void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern fn void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern fn void glProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
extern fn void glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern fn void glProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, GLint64 value);
extern fn void glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, GLint64EXT value);
extern fn void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern fn void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern fn void glProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
extern fn void glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern fn void glProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, GLuint64 value);
extern fn void glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, GLuint64EXT value);
extern fn void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern fn void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
extern fn void glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glProgramUniform4dv(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, GLdouble value);
extern fn void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern fn void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern fn void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, GLfloat value);
extern fn void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern fn void glProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
extern fn void glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern fn void glProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, GLint64 value);
extern fn void glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, GLint64EXT value);
extern fn void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern fn void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, GLint value);
extern fn void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern fn void glProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
extern fn void glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern fn void glProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, GLuint64 value);
extern fn void glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, GLuint64EXT value);
extern fn void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern fn void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, GLuint value);
extern fn void glProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
extern fn void glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value);
extern fn void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
extern fn void glProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, GLuint64 values);
extern fn void glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, GLuint64 values);
extern fn void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, GLuint64 values);
extern fn void glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
extern fn void glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, GLuint64EXT value);
extern fn void glProgramVertexLimitNV(GLenum target, GLint limit);
extern fn void glProvokingVertex(GLenum mode);
extern fn void glProvokingVertexEXT(GLenum mode);
extern fn void glPushAttrib(GLbitfield mask);
extern fn void glPushClientAttrib(GLbitfield mask);
extern fn void glPushClientAttribDefaultEXT(GLbitfield mask);
extern fn void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, GLchar message);
extern fn void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, GLchar message);
extern fn void glPushGroupMarkerEXT(GLsizei length, GLchar marker);
extern fn void glPushMatrix();
extern fn void glPushName(GLuint name);
extern fn void glQueryCounter(GLuint id, GLenum target);
extern fn void glQueryCounterEXT(GLuint id, GLenum target);
extern fn void glQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param);
extern fn void glQueryResourceTagNV(GLint tagId, GLchar tagString);
extern fn void glRasterPos2d(GLdouble x, GLdouble y);
extern fn void glRasterPos2dv(GLdouble v);
extern fn void glRasterPos2f(GLfloat x, GLfloat y);
extern fn void glRasterPos2fv(GLfloat v);
extern fn void glRasterPos2i(GLint x, GLint y);
extern fn void glRasterPos2iv(GLint v);
extern fn void glRasterPos2s(GLshort x, GLshort y);
extern fn void glRasterPos2sv(GLshort v);
extern fn void glRasterPos2xOES(GLfixed x, GLfixed y);
extern fn void glRasterPos2xvOES(GLfixed coords);
extern fn void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
extern fn void glRasterPos3dv(GLdouble v);
extern fn void glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
extern fn void glRasterPos3fv(GLfloat v);
extern fn void glRasterPos3i(GLint x, GLint y, GLint z);
extern fn void glRasterPos3iv(GLint v);
extern fn void glRasterPos3s(GLshort x, GLshort y, GLshort z);
extern fn void glRasterPos3sv(GLshort v);
extern fn void glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
extern fn void glRasterPos3xvOES(GLfixed coords);
extern fn void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glRasterPos4dv(GLdouble v);
extern fn void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glRasterPos4fv(GLfloat v);
extern fn void glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
extern fn void glRasterPos4iv(GLint v);
extern fn void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glRasterPos4sv(GLshort v);
extern fn void glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
extern fn void glRasterPos4xvOES(GLfixed coords);
extern fn void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
extern fn void glReadBuffer(GLenum src);
extern fn void glReadBufferIndexedEXT(GLenum src, GLint index);
extern fn void glReadBufferNV(GLenum mode);
extern fn void glReadInstrumentsSGIX(GLint marker);
extern fn void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize);
extern fn void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
extern fn void glRectdv(GLdouble v1, GLdouble v2);
extern fn void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
extern fn void glRectfv(GLfloat v1, GLfloat v2);
extern fn void glRecti(GLint x1, GLint y1, GLint x2, GLint y2);
extern fn void glRectiv(GLint v1, GLint v2);
extern fn void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
extern fn void glRectsv(GLshort v1, GLshort v2);
extern fn void glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
extern fn void glRectxvOES(GLfixed v1, GLfixed v2);
extern fn void glReferencePlaneSGIX(GLdouble equation);
extern fn void glReleaseShaderCompiler();
extern fn void glRenderGpuMaskNV(GLbitfield mask);
extern fn void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleAdvancedAMD(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glReplacementCodePointerSUN(GLenum type, GLsizei stride);
extern fn void glReplacementCodeubSUN(GLubyte code);
extern fn void glReplacementCodeubvSUN(GLubyte code);
extern fn void glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiColor3fVertex3fvSUN(GLuint rc, GLfloat c, GLfloat v);
extern fn void glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(GLuint rc, GLfloat c, GLfloat n, GLfloat v);
extern fn void glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiColor4ubVertex3fvSUN(GLuint rc, GLubyte c, GLfloat v);
extern fn void glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiNormal3fVertex3fvSUN(GLuint rc, GLfloat n, GLfloat v);
extern fn void glReplacementCodeuiSUN(GLuint code);
extern fn void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(GLuint rc, GLfloat tc, GLfloat c, GLfloat n, GLfloat v);
extern fn void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(GLuint rc, GLfloat tc, GLfloat n, GLfloat v);
extern fn void glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiTexCoord2fVertex3fvSUN(GLuint rc, GLfloat tc, GLfloat v);
extern fn void glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
extern fn void glReplacementCodeuiVertex3fvSUN(GLuint rc, GLfloat v);
extern fn void glReplacementCodeuivSUN(GLuint code);
extern fn void glReplacementCodeusSUN(GLushort code);
extern fn void glReplacementCodeusvSUN(GLushort code);
extern fn void glRequestResidentProgramsNV(GLsizei n, GLuint programs);
extern fn void glResetHistogram(GLenum target);
extern fn void glResetHistogramEXT(GLenum target);
extern fn void glResetMemoryObjectParameterNV(GLuint memory, GLenum pname);
extern fn void glResetMinmax(GLenum target);
extern fn void glResetMinmaxEXT(GLenum target);
extern fn void glResizeBuffersMESA();
extern fn void glResolveDepthValuesNV();
extern fn void glResolveMultisampleFramebufferAPPLE();
extern fn void glResumeTransformFeedback();
extern fn void glResumeTransformFeedbackNV();
extern fn void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern fn void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern fn void glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
extern fn void glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
extern fn void glSampleCoverage(GLfloat value, GLboolean invert);
extern fn void glSampleCoverageARB(GLfloat value, GLboolean invert);
extern fn void glSampleCoveragex(GLclampx value, GLboolean invert);
extern fn void glSampleCoveragexOES(GLclampx value, GLboolean invert);
extern fn void glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
extern fn void glSampleMaskEXT(GLclampf value, GLboolean invert);
extern fn void glSampleMaskIndexedNV(GLuint index, GLbitfield mask);
extern fn void glSampleMaskSGIS(GLclampf value, GLboolean invert);
extern fn void glSampleMaski(GLuint maskNumber, GLbitfield mask);
extern fn void glSamplePatternEXT(GLenum pattern);
extern fn void glSamplePatternSGIS(GLenum pattern);
extern fn void glSamplerParameterIiv(GLuint sampler, GLenum pname, GLint param);
extern fn void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint param);
extern fn void glSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint param);
extern fn void glSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint param);
extern fn void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint param);
extern fn void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint param);
extern fn void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
extern fn void glSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat param);
extern fn void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
extern fn void glSamplerParameteriv(GLuint sampler, GLenum pname, GLint param);
extern fn void glScaled(GLdouble x, GLdouble y, GLdouble z);
extern fn void glScalef(GLfloat x, GLfloat y, GLfloat z);
extern fn void glScalex(GLfixed x, GLfixed y, GLfixed z);
extern fn void glScalexOES(GLfixed x, GLfixed y, GLfixed z);
extern fn void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glScissorArrayv(GLuint first, GLsizei count, GLint v);
extern fn void glScissorArrayvNV(GLuint first, GLsizei count, GLint v);
extern fn void glScissorArrayvOES(GLuint first, GLsizei count, GLint v);
extern fn void glScissorExclusiveArrayvNV(GLuint first, GLsizei count, GLint v);
extern fn void glScissorExclusiveNV(GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern fn void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern fn void glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern fn void glScissorIndexedv(GLuint index, GLint v);
extern fn void glScissorIndexedvNV(GLuint index, GLint v);
extern fn void glScissorIndexedvOES(GLuint index, GLint v);
extern fn void glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern fn void glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
extern fn void glSecondaryColor3bv(GLbyte v);
extern fn void glSecondaryColor3bvEXT(GLbyte v);
extern fn void glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern fn void glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
extern fn void glSecondaryColor3dv(GLdouble v);
extern fn void glSecondaryColor3dvEXT(GLdouble v);
extern fn void glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern fn void glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
extern fn void glSecondaryColor3fv(GLfloat v);
extern fn void glSecondaryColor3fvEXT(GLfloat v);
extern fn void glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern fn void glSecondaryColor3hvNV(GLhalfNV v);
extern fn void glSecondaryColor3i(GLint red, GLint green, GLint blue);
extern fn void glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
extern fn void glSecondaryColor3iv(GLint v);
extern fn void glSecondaryColor3ivEXT(GLint v);
extern fn void glSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
extern fn void glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
extern fn void glSecondaryColor3sv(GLshort v);
extern fn void glSecondaryColor3svEXT(GLshort v);
extern fn void glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern fn void glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
extern fn void glSecondaryColor3ubv(GLubyte v);
extern fn void glSecondaryColor3ubvEXT(GLubyte v);
extern fn void glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
extern fn void glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
extern fn void glSecondaryColor3uiv(GLuint v);
extern fn void glSecondaryColor3uivEXT(GLuint v);
extern fn void glSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
extern fn void glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
extern fn void glSecondaryColor3usv(GLushort v);
extern fn void glSecondaryColor3usvEXT(GLushort v);
extern fn void glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
extern fn void glSecondaryColorP3ui(GLenum type, GLuint color);
extern fn void glSecondaryColorP3uiv(GLenum type, GLuint color);
extern fn void glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride);
extern fn void glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride);
extern fn void glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, GLint ptrstride);
extern fn void glSelectBuffer(GLsizei size, GLuint buffer);
extern fn void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint counterList);
extern fn void glSemaphoreParameterivNV(GLuint semaphore, GLenum pname, GLint params);
extern fn void glSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 params);
extern fn void glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glSetFenceAPPLE(GLuint fence);
extern fn void glSetFenceNV(GLuint fence, GLenum condition);
extern fn void glSetFragmentShaderConstantATI(GLuint dst, GLfloat value);
extern fn void glSetInvariantEXT(GLuint id, GLenum type);
extern fn void glSetLocalConstantEXT(GLuint id, GLenum type);
extern fn void glSetMultisamplefvAMD(GLenum pname, GLuint index, GLfloat val);
extern fn void glShadeModel(GLenum mode);
extern fn void glShaderBinary(GLsizei count, GLuint shaders, GLenum binaryFormat, GLsizei length);
extern fn void glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
extern fn void glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
extern fn void glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
extern fn void glShaderSource(GLuint shader, GLsizei count, GLchar string, GLint length);
extern fn void glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, GLcharARB string, GLint length);
extern fn void glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
extern fn void glShadingRateEXT(GLenum rate);
extern fn void glShadingRateCombinerOpsEXT(GLenum combinerOp0, GLenum combinerOp1);
extern fn void glShadingRateImageBarrierNV(GLboolean synchronize);
extern fn void glShadingRateQCOM(GLenum rate);
extern fn void glShadingRateImagePaletteNV(GLuint viewport, GLuint first, GLsizei count, GLenum rates);
extern fn void glShadingRateSampleOrderNV(GLenum order);
extern fn void glShadingRateSampleOrderCustomNV(GLenum rate, GLuint samples, GLint locations);
extern fn void glSharpenTexFuncSGIS(GLenum target, GLsizei n, GLfloat points);
extern fn void glSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, GLuint buffers, GLuint numTextureBarriers, GLuint textures, GLenum dstLayouts);
extern fn void glSignalSemaphoreui64NVX(GLuint signalGpu, GLsizei fenceObjectCount, GLuint semaphoreArray, GLuint64 fenceValueArray);
extern fn void glSpecializeShader(GLuint shader, GLchar pEntryPoint, GLuint numSpecializationConstants, GLuint pConstantIndex, GLuint pConstantValue);
extern fn void glSpecializeShaderARB(GLuint shader, GLchar pEntryPoint, GLuint numSpecializationConstants, GLuint pConstantIndex, GLuint pConstantValue);
extern fn void glSpriteParameterfSGIX(GLenum pname, GLfloat param);
extern fn void glSpriteParameterfvSGIX(GLenum pname, GLfloat params);
extern fn void glSpriteParameteriSGIX(GLenum pname, GLint param);
extern fn void glSpriteParameterivSGIX(GLenum pname, GLint params);
extern fn void glStartInstrumentsSGIX();
extern fn void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
extern fn void glStateCaptureNV(GLuint state, GLenum mode);
extern fn void glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
extern fn void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, GLfloat transformValues);
extern fn void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
extern fn void glStencilFunc(GLenum func, GLint ref, GLuint mask);
extern fn void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
extern fn void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
extern fn void glStencilMask(GLuint mask);
extern fn void glStencilMaskSeparate(GLenum face, GLuint mask);
extern fn void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
extern fn void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern fn void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern fn void glStencilOpValueAMD(GLenum face, GLuint value);
extern fn void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, GLfloat transformValues);
extern fn void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
extern fn void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, GLfloat transformValues);
extern fn void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
extern fn void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, GLfloat transformValues);
extern fn void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
extern fn void glStopInstrumentsSGIX(GLint marker);
extern fn void glStringMarkerGREMEDY(GLsizei len);
extern fn void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
extern fn void glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern fn void glSyncTextureINTEL(GLuint texture);
extern fn void glTagSampleBufferSGIX();
extern fn void glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
extern fn void glTangent3bvEXT(GLbyte v);
extern fn void glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
extern fn void glTangent3dvEXT(GLdouble v);
extern fn void glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
extern fn void glTangent3fvEXT(GLfloat v);
extern fn void glTangent3iEXT(GLint tx, GLint ty, GLint tz);
extern fn void glTangent3ivEXT(GLint v);
extern fn void glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
extern fn void glTangent3svEXT(GLshort v);
extern fn void glTangentPointerEXT(GLenum type, GLsizei stride);
extern fn void glTbufferMask3DFX(GLuint mask);
extern fn void glTessellationFactorAMD(GLfloat factor);
extern fn void glTessellationModeAMD(GLenum mode);
extern fn void glTexAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
extern fn void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTexBumpParameterfvATI(GLenum pname, GLfloat param);
extern fn void glTexBumpParameterivATI(GLenum pname, GLint param);
extern fn void glTexCoord1bOES(GLbyte s);
extern fn void glTexCoord1bvOES(GLbyte coords);
extern fn void glTexCoord1d(GLdouble s);
extern fn void glTexCoord1dv(GLdouble v);
extern fn void glTexCoord1f(GLfloat s);
extern fn void glTexCoord1fv(GLfloat v);
extern fn void glTexCoord1hNV(GLhalfNV s);
extern fn void glTexCoord1hvNV(GLhalfNV v);
extern fn void glTexCoord1i(GLint s);
extern fn void glTexCoord1iv(GLint v);
extern fn void glTexCoord1s(GLshort s);
extern fn void glTexCoord1sv(GLshort v);
extern fn void glTexCoord1xOES(GLfixed s);
extern fn void glTexCoord1xvOES(GLfixed coords);
extern fn void glTexCoord2bOES(GLbyte s, GLbyte t);
extern fn void glTexCoord2bvOES(GLbyte coords);
extern fn void glTexCoord2d(GLdouble s, GLdouble t);
extern fn void glTexCoord2dv(GLdouble v);
extern fn void glTexCoord2f(GLfloat s, GLfloat t);
extern fn void glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern fn void glTexCoord2fColor3fVertex3fvSUN(GLfloat tc, GLfloat c, GLfloat v);
extern fn void glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glTexCoord2fColor4fNormal3fVertex3fvSUN(GLfloat tc, GLfloat c, GLfloat n, GLfloat v);
extern fn void glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern fn void glTexCoord2fColor4ubVertex3fvSUN(GLfloat tc, GLubyte c, GLfloat v);
extern fn void glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern fn void glTexCoord2fNormal3fVertex3fvSUN(GLfloat tc, GLfloat n, GLfloat v);
extern fn void glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern fn void glTexCoord2fVertex3fvSUN(GLfloat tc, GLfloat v);
extern fn void glTexCoord2fv(GLfloat v);
extern fn void glTexCoord2hNV(GLhalfNV s, GLhalfNV t);
extern fn void glTexCoord2hvNV(GLhalfNV v);
extern fn void glTexCoord2i(GLint s, GLint t);
extern fn void glTexCoord2iv(GLint v);
extern fn void glTexCoord2s(GLshort s, GLshort t);
extern fn void glTexCoord2sv(GLshort v);
extern fn void glTexCoord2xOES(GLfixed s, GLfixed t);
extern fn void glTexCoord2xvOES(GLfixed coords);
extern fn void glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
extern fn void glTexCoord3bvOES(GLbyte coords);
extern fn void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
extern fn void glTexCoord3dv(GLdouble v);
extern fn void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
extern fn void glTexCoord3fv(GLfloat v);
extern fn void glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern fn void glTexCoord3hvNV(GLhalfNV v);
extern fn void glTexCoord3i(GLint s, GLint t, GLint r);
extern fn void glTexCoord3iv(GLint v);
extern fn void glTexCoord3s(GLshort s, GLshort t, GLshort r);
extern fn void glTexCoord3sv(GLshort v);
extern fn void glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
extern fn void glTexCoord3xvOES(GLfixed coords);
extern fn void glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
extern fn void glTexCoord4bvOES(GLbyte coords);
extern fn void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern fn void glTexCoord4dv(GLdouble v);
extern fn void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern fn void glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glTexCoord4fColor4fNormal3fVertex4fvSUN(GLfloat tc, GLfloat c, GLfloat n, GLfloat v);
extern fn void glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glTexCoord4fVertex4fvSUN(GLfloat tc, GLfloat v);
extern fn void glTexCoord4fv(GLfloat v);
extern fn void glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern fn void glTexCoord4hvNV(GLhalfNV v);
extern fn void glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
extern fn void glTexCoord4iv(GLint v);
extern fn void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
extern fn void glTexCoord4sv(GLshort v);
extern fn void glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern fn void glTexCoord4xvOES(GLfixed coords);
extern fn void glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
extern fn void glTexCoordP1ui(GLenum type, GLuint coords);
extern fn void glTexCoordP1uiv(GLenum type, GLuint coords);
extern fn void glTexCoordP2ui(GLenum type, GLuint coords);
extern fn void glTexCoordP2uiv(GLenum type, GLuint coords);
extern fn void glTexCoordP3ui(GLenum type, GLuint coords);
extern fn void glTexCoordP3uiv(GLenum type, GLuint coords);
extern fn void glTexCoordP4ui(GLenum type, GLuint coords);
extern fn void glTexCoordP4uiv(GLenum type, GLuint coords);
extern fn void glTexCoordPointer(GLint size, GLenum type, GLsizei stride);
extern fn void glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count);
extern fn void glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, GLint ptrstride);
extern fn void glTexCoordPointervINTEL(GLint size, GLenum type);
extern fn void glTexEnvf(GLenum target, GLenum pname, GLfloat param);
extern fn void glTexEnvfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glTexEnvi(GLenum target, GLenum pname, GLint param);
extern fn void glTexEnviv(GLenum target, GLenum pname, GLint params);
extern fn void glTexEnvx(GLenum target, GLenum pname, GLfixed param);
extern fn void glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
extern fn void glTexEnvxv(GLenum target, GLenum pname, GLfixed params);
extern fn void glTexEnvxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glTexEstimateMotionQCOM(GLuint ref, GLuint target, GLuint output);
extern fn void glTexEstimateMotionRegionsQCOM(GLuint ref, GLuint target, GLuint output, GLuint mask);
extern fn void glExtrapolateTex2DQCOM(GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
extern fn void glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, GLfloat weights);
extern fn void glTexGend(GLenum coord, GLenum pname, GLdouble param);
extern fn void glTexGendv(GLenum coord, GLenum pname, GLdouble params);
extern fn void glTexGenf(GLenum coord, GLenum pname, GLfloat param);
extern fn void glTexGenfOES(GLenum coord, GLenum pname, GLfloat param);
extern fn void glTexGenfv(GLenum coord, GLenum pname, GLfloat params);
extern fn void glTexGenfvOES(GLenum coord, GLenum pname, GLfloat params);
extern fn void glTexGeni(GLenum coord, GLenum pname, GLint param);
extern fn void glTexGeniOES(GLenum coord, GLenum pname, GLint param);
extern fn void glTexGeniv(GLenum coord, GLenum pname, GLint params);
extern fn void glTexGenivOES(GLenum coord, GLenum pname, GLint params);
extern fn void glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
extern fn void glTexGenxvOES(GLenum coord, GLenum pname, GLfixed params);
extern fn void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type);
extern fn void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type);
extern fn void glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern fn void glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern fn void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type);
extern fn void glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type);
extern fn void glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern fn void glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern fn void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type);
extern fn void glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type);
extern fn void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern fn void glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern fn void glTexPageCommitmentMemNV(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
extern fn void glTexParameterIiv(GLenum target, GLenum pname, GLint params);
extern fn void glTexParameterIivEXT(GLenum target, GLenum pname, GLint params);
extern fn void glTexParameterIivOES(GLenum target, GLenum pname, GLint params);
extern fn void glTexParameterIuiv(GLenum target, GLenum pname, GLuint params);
extern fn void glTexParameterIuivEXT(GLenum target, GLenum pname, GLuint params);
extern fn void glTexParameterIuivOES(GLenum target, GLenum pname, GLuint params);
extern fn void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
extern fn void glTexParameterfv(GLenum target, GLenum pname, GLfloat params);
extern fn void glTexParameteri(GLenum target, GLenum pname, GLint param);
extern fn void glTexParameteriv(GLenum target, GLenum pname, GLint params);
extern fn void glTexParameterx(GLenum target, GLenum pname, GLfixed param);
extern fn void glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
extern fn void glTexParameterxv(GLenum target, GLenum pname, GLfixed params);
extern fn void glTexParameterxvOES(GLenum target, GLenum pname, GLfixed params);
extern fn void glTexRenderbufferNV(GLenum target, GLuint renderbuffer);
extern fn void glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern fn void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern fn void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern fn void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern fn void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern fn void glTexStorageAttribs2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLint attrib_list);
extern fn void glTexStorageAttribs3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint attrib_list);
extern fn void glTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
extern fn void glTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
extern fn void glTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern fn void glTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
extern fn void glTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern fn void glTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern fn void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type);
extern fn void glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type);
extern fn void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type);
extern fn void glTextureAttachMemoryNV(GLuint texture, GLuint memory, GLuint64 offset);
extern fn void glTextureBarrier();
extern fn void glTextureBarrierNV();
extern fn void glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
extern fn void glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
extern fn void glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern fn void glTextureFoveationParametersQCOM(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
extern fn void glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type);
extern fn void glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type);
extern fn void glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern fn void glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern fn void glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type);
extern fn void glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern fn void glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern fn void glTextureLightEXT(GLenum pname);
extern fn void glTextureMaterialEXT(GLenum face, GLenum mode);
extern fn void glTextureNormalEXT(GLenum mode);
extern fn void glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern fn void glTexturePageCommitmentMemNV(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
extern fn void glTextureParameterIiv(GLuint texture, GLenum pname, GLint params);
extern fn void glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint params);
extern fn void glTextureParameterIuiv(GLuint texture, GLenum pname, GLuint params);
extern fn void glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint params);
extern fn void glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
extern fn void glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
extern fn void glTextureParameterfv(GLuint texture, GLenum pname, GLfloat param);
extern fn void glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat params);
extern fn void glTextureParameteri(GLuint texture, GLenum pname, GLint param);
extern fn void glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
extern fn void glTextureParameteriv(GLuint texture, GLenum pname, GLint param);
extern fn void glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint params);
extern fn void glTextureRangeAPPLE(GLenum target, GLsizei length);
extern fn void glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
extern fn void glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
extern fn void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern fn void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern fn void glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern fn void glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern fn void glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern fn void glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern fn void glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern fn void glTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
extern fn void glTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
extern fn void glTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern fn void glTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
extern fn void glTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern fn void glTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern fn void glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type);
extern fn void glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type);
extern fn void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type);
extern fn void glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type);
extern fn void glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern fn void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern fn void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern fn void glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
extern fn void glTransformFeedbackAttribsNV(GLsizei count, GLint attribs, GLenum bufferMode);
extern fn void glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
extern fn void glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern fn void glTransformFeedbackStreamAttribsNV(GLsizei count, GLint attribs, GLsizei nbuffers, GLint bufstreams, GLenum bufferMode);
extern fn void glTransformFeedbackVaryings(GLuint program, GLsizei count, GLchar varyings, GLenum bufferMode);
extern fn void glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, GLchar varyings, GLenum bufferMode);
extern fn void glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, GLint locations, GLenum bufferMode);
extern fn void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, GLfloat transformValues);
extern fn void glTranslated(GLdouble x, GLdouble y, GLdouble z);
extern fn void glTranslatef(GLfloat x, GLfloat y, GLfloat z);
extern fn void glTranslatex(GLfixed x, GLfixed y, GLfixed z);
extern fn void glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
extern fn void glUniform1d(GLint location, GLdouble x);
extern fn void glUniform1dv(GLint location, GLsizei count, GLdouble value);
extern fn void glUniform1f(GLint location, GLfloat v0);
extern fn void glUniform1fARB(GLint location, GLfloat v0);
extern fn void glUniform1fv(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform1fvARB(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform1i(GLint location, GLint v0);
extern fn void glUniform1i64ARB(GLint location, GLint64 x);
extern fn void glUniform1i64NV(GLint location, GLint64EXT x);
extern fn void glUniform1i64vARB(GLint location, GLsizei count, GLint64 value);
extern fn void glUniform1i64vNV(GLint location, GLsizei count, GLint64EXT value);
extern fn void glUniform1iARB(GLint location, GLint v0);
extern fn void glUniform1iv(GLint location, GLsizei count, GLint value);
extern fn void glUniform1ivARB(GLint location, GLsizei count, GLint value);
extern fn void glUniform1ui(GLint location, GLuint v0);
extern fn void glUniform1ui64ARB(GLint location, GLuint64 x);
extern fn void glUniform1ui64NV(GLint location, GLuint64EXT x);
extern fn void glUniform1ui64vARB(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniform1ui64vNV(GLint location, GLsizei count, GLuint64EXT value);
extern fn void glUniform1uiEXT(GLint location, GLuint v0);
extern fn void glUniform1uiv(GLint location, GLsizei count, GLuint value);
extern fn void glUniform1uivEXT(GLint location, GLsizei count, GLuint value);
extern fn void glUniform2d(GLint location, GLdouble x, GLdouble y);
extern fn void glUniform2dv(GLint location, GLsizei count, GLdouble value);
extern fn void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
extern fn void glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
extern fn void glUniform2fv(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform2fvARB(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform2i(GLint location, GLint v0, GLint v1);
extern fn void glUniform2i64ARB(GLint location, GLint64 x, GLint64 y);
extern fn void glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
extern fn void glUniform2i64vARB(GLint location, GLsizei count, GLint64 value);
extern fn void glUniform2i64vNV(GLint location, GLsizei count, GLint64EXT value);
extern fn void glUniform2iARB(GLint location, GLint v0, GLint v1);
extern fn void glUniform2iv(GLint location, GLsizei count, GLint value);
extern fn void glUniform2ivARB(GLint location, GLsizei count, GLint value);
extern fn void glUniform2ui(GLint location, GLuint v0, GLuint v1);
extern fn void glUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y);
extern fn void glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
extern fn void glUniform2ui64vARB(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniform2ui64vNV(GLint location, GLsizei count, GLuint64EXT value);
extern fn void glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
extern fn void glUniform2uiv(GLint location, GLsizei count, GLuint value);
extern fn void glUniform2uivEXT(GLint location, GLsizei count, GLuint value);
extern fn void glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
extern fn void glUniform3dv(GLint location, GLsizei count, GLdouble value);
extern fn void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern fn void glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern fn void glUniform3fv(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform3fvARB(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
extern fn void glUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z);
extern fn void glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern fn void glUniform3i64vARB(GLint location, GLsizei count, GLint64 value);
extern fn void glUniform3i64vNV(GLint location, GLsizei count, GLint64EXT value);
extern fn void glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
extern fn void glUniform3iv(GLint location, GLsizei count, GLint value);
extern fn void glUniform3ivARB(GLint location, GLsizei count, GLint value);
extern fn void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern fn void glUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
extern fn void glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern fn void glUniform3ui64vARB(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniform3ui64vNV(GLint location, GLsizei count, GLuint64EXT value);
extern fn void glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern fn void glUniform3uiv(GLint location, GLsizei count, GLuint value);
extern fn void glUniform3uivEXT(GLint location, GLsizei count, GLuint value);
extern fn void glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glUniform4dv(GLint location, GLsizei count, GLdouble value);
extern fn void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern fn void glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern fn void glUniform4fv(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform4fvARB(GLint location, GLsizei count, GLfloat value);
extern fn void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern fn void glUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
extern fn void glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern fn void glUniform4i64vARB(GLint location, GLsizei count, GLint64 value);
extern fn void glUniform4i64vNV(GLint location, GLsizei count, GLint64EXT value);
extern fn void glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern fn void glUniform4iv(GLint location, GLsizei count, GLint value);
extern fn void glUniform4ivARB(GLint location, GLsizei count, GLint value);
extern fn void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern fn void glUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
extern fn void glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern fn void glUniform4ui64vARB(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniform4ui64vNV(GLint location, GLsizei count, GLuint64EXT value);
extern fn void glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern fn void glUniform4uiv(GLint location, GLsizei count, GLuint value);
extern fn void glUniform4uivEXT(GLint location, GLsizei count, GLuint value);
extern fn void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
extern fn void glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
extern fn void glUniformHandleui64ARB(GLint location, GLuint64 value);
extern fn void glUniformHandleui64IMG(GLint location, GLuint64 value);
extern fn void glUniformHandleui64NV(GLint location, GLuint64 value);
extern fn void glUniformHandleui64vARB(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniformHandleui64vIMG(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniformHandleui64vNV(GLint location, GLsizei count, GLuint64 value);
extern fn void glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, GLdouble value);
extern fn void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, GLfloat value);
extern fn void glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, GLuint indices);
extern fn void glUniformui64NV(GLint location, GLuint64EXT value);
extern fn void glUniformui64vNV(GLint location, GLsizei count, GLuint64EXT value);
extern fn void glUnlockArraysEXT();
extern fn void glUnmapObjectBufferATI(GLuint buffer);
extern fn void glUnmapTexture2DINTEL(GLuint texture, GLint level);
extern fn void glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, GLenum preserve);
extern fn void glUploadGpuMaskNVX(GLbitfield mask);
extern fn void glUseProgram(GLuint program);
extern fn void glUseProgramObjectARB(GLhandleARB programObj);
extern fn void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
extern fn void glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
extern fn void glUseShaderProgramEXT(GLenum type, GLuint program);
extern fn void glVDPAUFiniNV();
extern fn void glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei length, GLint values);
extern fn void glVDPAUInitNV();
extern fn void glVDPAUMapSurfacesNV(GLsizei numSurfaces, GLvdpauSurfaceNV surfaces);
extern fn void glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
extern fn void glVDPAUUnmapSurfacesNV(GLsizei numSurface, GLvdpauSurfaceNV surfaces);
extern fn void glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
extern fn void glValidateProgram(GLuint program);
extern fn void glValidateProgramARB(GLhandleARB programObj);
extern fn void glValidateProgramPipeline(GLuint pipeline);
extern fn void glValidateProgramPipelineEXT(GLuint pipeline);
extern fn void glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern fn void glVariantPointerEXT(GLuint id, GLenum type, GLuint stride);
extern fn void glVariantbvEXT(GLuint id, GLbyte addr);
extern fn void glVariantdvEXT(GLuint id, GLdouble addr);
extern fn void glVariantfvEXT(GLuint id, GLfloat addr);
extern fn void glVariantivEXT(GLuint id, GLint addr);
extern fn void glVariantsvEXT(GLuint id, GLshort addr);
extern fn void glVariantubvEXT(GLuint id, GLubyte addr);
extern fn void glVariantuivEXT(GLuint id, GLuint addr);
extern fn void glVariantusvEXT(GLuint id, GLushort addr);
extern fn void glVertex2bOES(GLbyte x, GLbyte y);
extern fn void glVertex2bvOES(GLbyte coords);
extern fn void glVertex2d(GLdouble x, GLdouble y);
extern fn void glVertex2dv(GLdouble v);
extern fn void glVertex2f(GLfloat x, GLfloat y);
extern fn void glVertex2fv(GLfloat v);
extern fn void glVertex2hNV(GLhalfNV x, GLhalfNV y);
extern fn void glVertex2hvNV(GLhalfNV v);
extern fn void glVertex2i(GLint x, GLint y);
extern fn void glVertex2iv(GLint v);
extern fn void glVertex2s(GLshort x, GLshort y);
extern fn void glVertex2sv(GLshort v);
extern fn void glVertex2xOES(GLfixed x);
extern fn void glVertex2xvOES(GLfixed coords);
extern fn void glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
extern fn void glVertex3bvOES(GLbyte coords);
extern fn void glVertex3d(GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertex3dv(GLdouble v);
extern fn void glVertex3f(GLfloat x, GLfloat y, GLfloat z);
extern fn void glVertex3fv(GLfloat v);
extern fn void glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern fn void glVertex3hvNV(GLhalfNV v);
extern fn void glVertex3i(GLint x, GLint y, GLint z);
extern fn void glVertex3iv(GLint v);
extern fn void glVertex3s(GLshort x, GLshort y, GLshort z);
extern fn void glVertex3sv(GLshort v);
extern fn void glVertex3xOES(GLfixed x, GLfixed y);
extern fn void glVertex3xvOES(GLfixed coords);
extern fn void glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
extern fn void glVertex4bvOES(GLbyte coords);
extern fn void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertex4dv(GLdouble v);
extern fn void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glVertex4fv(GLfloat v);
extern fn void glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern fn void glVertex4hvNV(GLhalfNV v);
extern fn void glVertex4i(GLint x, GLint y, GLint z, GLint w);
extern fn void glVertex4iv(GLint v);
extern fn void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glVertex4sv(GLshort v);
extern fn void glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
extern fn void glVertex4xvOES(GLfixed coords);
extern fn void glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern fn void glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern fn void glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern fn void glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern fn void glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
extern fn void glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
extern fn void glVertexArrayRangeAPPLE(GLsizei length);
extern fn void glVertexArrayRangeNV(GLsizei length);
extern fn void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern fn void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
extern fn void glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern fn void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
extern fn void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern fn void glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern fn void glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, GLuint buffers, GLintptr offsets, GLsizei strides);
extern fn void glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern fn void glVertexAttrib1d(GLuint index, GLdouble x);
extern fn void glVertexAttrib1dARB(GLuint index, GLdouble x);
extern fn void glVertexAttrib1dNV(GLuint index, GLdouble x);
extern fn void glVertexAttrib1dv(GLuint index, GLdouble v);
extern fn void glVertexAttrib1dvARB(GLuint index, GLdouble v);
extern fn void glVertexAttrib1dvNV(GLuint index, GLdouble v);
extern fn void glVertexAttrib1f(GLuint index, GLfloat x);
extern fn void glVertexAttrib1fARB(GLuint index, GLfloat x);
extern fn void glVertexAttrib1fNV(GLuint index, GLfloat x);
extern fn void glVertexAttrib1fv(GLuint index, GLfloat v);
extern fn void glVertexAttrib1fvARB(GLuint index, GLfloat v);
extern fn void glVertexAttrib1fvNV(GLuint index, GLfloat v);
extern fn void glVertexAttrib1hNV(GLuint index, GLhalfNV x);
extern fn void glVertexAttrib1hvNV(GLuint index, GLhalfNV v);
extern fn void glVertexAttrib1s(GLuint index, GLshort x);
extern fn void glVertexAttrib1sARB(GLuint index, GLshort x);
extern fn void glVertexAttrib1sNV(GLuint index, GLshort x);
extern fn void glVertexAttrib1sv(GLuint index, GLshort v);
extern fn void glVertexAttrib1svARB(GLuint index, GLshort v);
extern fn void glVertexAttrib1svNV(GLuint index, GLshort v);
extern fn void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
extern fn void glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
extern fn void glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
extern fn void glVertexAttrib2dv(GLuint index, GLdouble v);
extern fn void glVertexAttrib2dvARB(GLuint index, GLdouble v);
extern fn void glVertexAttrib2dvNV(GLuint index, GLdouble v);
extern fn void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
extern fn void glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
extern fn void glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
extern fn void glVertexAttrib2fv(GLuint index, GLfloat v);
extern fn void glVertexAttrib2fvARB(GLuint index, GLfloat v);
extern fn void glVertexAttrib2fvNV(GLuint index, GLfloat v);
extern fn void glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
extern fn void glVertexAttrib2hvNV(GLuint index, GLhalfNV v);
extern fn void glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
extern fn void glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
extern fn void glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
extern fn void glVertexAttrib2sv(GLuint index, GLshort v);
extern fn void glVertexAttrib2svARB(GLuint index, GLshort v);
extern fn void glVertexAttrib2svNV(GLuint index, GLshort v);
extern fn void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexAttrib3dv(GLuint index, GLdouble v);
extern fn void glVertexAttrib3dvARB(GLuint index, GLdouble v);
extern fn void glVertexAttrib3dvNV(GLuint index, GLdouble v);
extern fn void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern fn void glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern fn void glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern fn void glVertexAttrib3fv(GLuint index, GLfloat v);
extern fn void glVertexAttrib3fvARB(GLuint index, GLfloat v);
extern fn void glVertexAttrib3fvNV(GLuint index, GLfloat v);
extern fn void glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern fn void glVertexAttrib3hvNV(GLuint index, GLhalfNV v);
extern fn void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
extern fn void glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
extern fn void glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
extern fn void glVertexAttrib3sv(GLuint index, GLshort v);
extern fn void glVertexAttrib3svARB(GLuint index, GLshort v);
extern fn void glVertexAttrib3svNV(GLuint index, GLshort v);
extern fn void glVertexAttrib4Nbv(GLuint index, GLbyte v);
extern fn void glVertexAttrib4NbvARB(GLuint index, GLbyte v);
extern fn void glVertexAttrib4Niv(GLuint index, GLint v);
extern fn void glVertexAttrib4NivARB(GLuint index, GLint v);
extern fn void glVertexAttrib4Nsv(GLuint index, GLshort v);
extern fn void glVertexAttrib4NsvARB(GLuint index, GLshort v);
extern fn void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern fn void glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern fn void glVertexAttrib4Nubv(GLuint index, GLubyte v);
extern fn void glVertexAttrib4NubvARB(GLuint index, GLubyte v);
extern fn void glVertexAttrib4Nuiv(GLuint index, GLuint v);
extern fn void glVertexAttrib4NuivARB(GLuint index, GLuint v);
extern fn void glVertexAttrib4Nusv(GLuint index, GLushort v);
extern fn void glVertexAttrib4NusvARB(GLuint index, GLushort v);
extern fn void glVertexAttrib4bv(GLuint index, GLbyte v);
extern fn void glVertexAttrib4bvARB(GLuint index, GLbyte v);
extern fn void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexAttrib4dv(GLuint index, GLdouble v);
extern fn void glVertexAttrib4dvARB(GLuint index, GLdouble v);
extern fn void glVertexAttrib4dvNV(GLuint index, GLdouble v);
extern fn void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glVertexAttrib4fv(GLuint index, GLfloat v);
extern fn void glVertexAttrib4fvARB(GLuint index, GLfloat v);
extern fn void glVertexAttrib4fvNV(GLuint index, GLfloat v);
extern fn void glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern fn void glVertexAttrib4hvNV(GLuint index, GLhalfNV v);
extern fn void glVertexAttrib4iv(GLuint index, GLint v);
extern fn void glVertexAttrib4ivARB(GLuint index, GLint v);
extern fn void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glVertexAttrib4sv(GLuint index, GLshort v);
extern fn void glVertexAttrib4svARB(GLuint index, GLshort v);
extern fn void glVertexAttrib4svNV(GLuint index, GLshort v);
extern fn void glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern fn void glVertexAttrib4ubv(GLuint index, GLubyte v);
extern fn void glVertexAttrib4ubvARB(GLuint index, GLubyte v);
extern fn void glVertexAttrib4ubvNV(GLuint index, GLubyte v);
extern fn void glVertexAttrib4uiv(GLuint index, GLuint v);
extern fn void glVertexAttrib4uivARB(GLuint index, GLuint v);
extern fn void glVertexAttrib4usv(GLuint index, GLushort v);
extern fn void glVertexAttrib4usvARB(GLuint index, GLushort v);
extern fn void glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
extern fn void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
extern fn void glVertexAttribDivisor(GLuint index, GLuint divisor);
extern fn void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
extern fn void glVertexAttribDivisorARB(GLuint index, GLuint divisor);
extern fn void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
extern fn void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
extern fn void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern fn void glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
extern fn void glVertexAttribI1i(GLuint index, GLint x);
extern fn void glVertexAttribI1iEXT(GLuint index, GLint x);
extern fn void glVertexAttribI1iv(GLuint index, GLint v);
extern fn void glVertexAttribI1ivEXT(GLuint index, GLint v);
extern fn void glVertexAttribI1ui(GLuint index, GLuint x);
extern fn void glVertexAttribI1uiEXT(GLuint index, GLuint x);
extern fn void glVertexAttribI1uiv(GLuint index, GLuint v);
extern fn void glVertexAttribI1uivEXT(GLuint index, GLuint v);
extern fn void glVertexAttribI2i(GLuint index, GLint x, GLint y);
extern fn void glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
extern fn void glVertexAttribI2iv(GLuint index, GLint v);
extern fn void glVertexAttribI2ivEXT(GLuint index, GLint v);
extern fn void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
extern fn void glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
extern fn void glVertexAttribI2uiv(GLuint index, GLuint v);
extern fn void glVertexAttribI2uivEXT(GLuint index, GLuint v);
extern fn void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
extern fn void glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
extern fn void glVertexAttribI3iv(GLuint index, GLint v);
extern fn void glVertexAttribI3ivEXT(GLuint index, GLint v);
extern fn void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
extern fn void glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
extern fn void glVertexAttribI3uiv(GLuint index, GLuint v);
extern fn void glVertexAttribI3uivEXT(GLuint index, GLuint v);
extern fn void glVertexAttribI4bv(GLuint index, GLbyte v);
extern fn void glVertexAttribI4bvEXT(GLuint index, GLbyte v);
extern fn void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern fn void glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern fn void glVertexAttribI4iv(GLuint index, GLint v);
extern fn void glVertexAttribI4ivEXT(GLuint index, GLint v);
extern fn void glVertexAttribI4sv(GLuint index, GLshort v);
extern fn void glVertexAttribI4svEXT(GLuint index, GLshort v);
extern fn void glVertexAttribI4ubv(GLuint index, GLubyte v);
extern fn void glVertexAttribI4ubvEXT(GLuint index, GLubyte v);
extern fn void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern fn void glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern fn void glVertexAttribI4uiv(GLuint index, GLuint v);
extern fn void glVertexAttribI4uivEXT(GLuint index, GLuint v);
extern fn void glVertexAttribI4usv(GLuint index, GLushort v);
extern fn void glVertexAttribI4usvEXT(GLuint index, GLushort v);
extern fn void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribL1d(GLuint index, GLdouble x);
extern fn void glVertexAttribL1dEXT(GLuint index, GLdouble x);
extern fn void glVertexAttribL1dv(GLuint index, GLdouble v);
extern fn void glVertexAttribL1dvEXT(GLuint index, GLdouble v);
extern fn void glVertexAttribL1i64NV(GLuint index, GLint64EXT x);
extern fn void glVertexAttribL1i64vNV(GLuint index, GLint64EXT v);
extern fn void glVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
extern fn void glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
extern fn void glVertexAttribL1ui64vARB(GLuint index, GLuint64EXT v);
extern fn void glVertexAttribL1ui64vNV(GLuint index, GLuint64EXT v);
extern fn void glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
extern fn void glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
extern fn void glVertexAttribL2dv(GLuint index, GLdouble v);
extern fn void glVertexAttribL2dvEXT(GLuint index, GLdouble v);
extern fn void glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
extern fn void glVertexAttribL2i64vNV(GLuint index, GLint64EXT v);
extern fn void glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
extern fn void glVertexAttribL2ui64vNV(GLuint index, GLuint64EXT v);
extern fn void glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexAttribL3dv(GLuint index, GLdouble v);
extern fn void glVertexAttribL3dvEXT(GLuint index, GLdouble v);
extern fn void glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern fn void glVertexAttribL3i64vNV(GLuint index, GLint64EXT v);
extern fn void glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern fn void glVertexAttribL3ui64vNV(GLuint index, GLuint64EXT v);
extern fn void glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexAttribL4dv(GLuint index, GLdouble v);
extern fn void glVertexAttribL4dvEXT(GLuint index, GLdouble v);
extern fn void glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern fn void glVertexAttribL4i64vNV(GLuint index, GLint64EXT v);
extern fn void glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern fn void glVertexAttribL4ui64vNV(GLuint index, GLuint64EXT v);
extern fn void glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern fn void glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride);
extern fn void glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern fn void glVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
extern fn void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
extern fn void glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
extern fn void glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride);
extern fn void glVertexAttribs1dvNV(GLuint index, GLsizei count, GLdouble v);
extern fn void glVertexAttribs1fvNV(GLuint index, GLsizei count, GLfloat v);
extern fn void glVertexAttribs1hvNV(GLuint index, GLsizei n, GLhalfNV v);
extern fn void glVertexAttribs1svNV(GLuint index, GLsizei count, GLshort v);
extern fn void glVertexAttribs2dvNV(GLuint index, GLsizei count, GLdouble v);
extern fn void glVertexAttribs2fvNV(GLuint index, GLsizei count, GLfloat v);
extern fn void glVertexAttribs2hvNV(GLuint index, GLsizei n, GLhalfNV v);
extern fn void glVertexAttribs2svNV(GLuint index, GLsizei count, GLshort v);
extern fn void glVertexAttribs3dvNV(GLuint index, GLsizei count, GLdouble v);
extern fn void glVertexAttribs3fvNV(GLuint index, GLsizei count, GLfloat v);
extern fn void glVertexAttribs3hvNV(GLuint index, GLsizei n, GLhalfNV v);
extern fn void glVertexAttribs3svNV(GLuint index, GLsizei count, GLshort v);
extern fn void glVertexAttribs4dvNV(GLuint index, GLsizei count, GLdouble v);
extern fn void glVertexAttribs4fvNV(GLuint index, GLsizei count, GLfloat v);
extern fn void glVertexAttribs4hvNV(GLuint index, GLsizei n, GLhalfNV v);
extern fn void glVertexAttribs4svNV(GLuint index, GLsizei count, GLshort v);
extern fn void glVertexAttribs4ubvNV(GLuint index, GLsizei count, GLubyte v);
extern fn void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
extern fn void glVertexBlendARB(GLint count);
extern fn void glVertexBlendEnvfATI(GLenum pname, GLfloat param);
extern fn void glVertexBlendEnviATI(GLenum pname, GLint param);
extern fn void glVertexFormatNV(GLint size, GLenum type, GLsizei stride);
extern fn void glVertexP2ui(GLenum type, GLuint value);
extern fn void glVertexP2uiv(GLenum type, GLuint value);
extern fn void glVertexP3ui(GLenum type, GLuint value);
extern fn void glVertexP3uiv(GLenum type, GLuint value);
extern fn void glVertexP4ui(GLenum type, GLuint value);
extern fn void glVertexP4uiv(GLenum type, GLuint value);
extern fn void glVertexPointer(GLint size, GLenum type, GLsizei stride);
extern fn void glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count);
extern fn void glVertexPointerListIBM(GLint size, GLenum type, GLint stride, GLint ptrstride);
extern fn void glVertexPointervINTEL(GLint size, GLenum type);
extern fn void glVertexStream1dATI(GLenum stream, GLdouble x);
extern fn void glVertexStream1dvATI(GLenum stream, GLdouble coords);
extern fn void glVertexStream1fATI(GLenum stream, GLfloat x);
extern fn void glVertexStream1fvATI(GLenum stream, GLfloat coords);
extern fn void glVertexStream1iATI(GLenum stream, GLint x);
extern fn void glVertexStream1ivATI(GLenum stream, GLint coords);
extern fn void glVertexStream1sATI(GLenum stream, GLshort x);
extern fn void glVertexStream1svATI(GLenum stream, GLshort coords);
extern fn void glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
extern fn void glVertexStream2dvATI(GLenum stream, GLdouble coords);
extern fn void glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
extern fn void glVertexStream2fvATI(GLenum stream, GLfloat coords);
extern fn void glVertexStream2iATI(GLenum stream, GLint x, GLint y);
extern fn void glVertexStream2ivATI(GLenum stream, GLint coords);
extern fn void glVertexStream2sATI(GLenum stream, GLshort x, GLshort y);
extern fn void glVertexStream2svATI(GLenum stream, GLshort coords);
extern fn void glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
extern fn void glVertexStream3dvATI(GLenum stream, GLdouble coords);
extern fn void glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
extern fn void glVertexStream3fvATI(GLenum stream, GLfloat coords);
extern fn void glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
extern fn void glVertexStream3ivATI(GLenum stream, GLint coords);
extern fn void glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
extern fn void glVertexStream3svATI(GLenum stream, GLshort coords);
extern fn void glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glVertexStream4dvATI(GLenum stream, GLdouble coords);
extern fn void glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glVertexStream4fvATI(GLenum stream, GLfloat coords);
extern fn void glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
extern fn void glVertexStream4ivATI(GLenum stream, GLint coords);
extern fn void glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glVertexStream4svATI(GLenum stream, GLshort coords);
extern fn void glVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride);
extern fn void glVertexWeightfEXT(GLfloat weight);
extern fn void glVertexWeightfvEXT(GLfloat weight);
extern fn void glVertexWeighthNV(GLhalfNV weight);
extern fn void glVertexWeighthvNV(GLhalfNV weight);
extern fn void glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble params);
extern fn void glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat params);
extern fn void glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint params);
extern fn void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
extern fn void glViewportArrayv(GLuint first, GLsizei count, GLfloat v);
extern fn void glViewportArrayvNV(GLuint first, GLsizei count, GLfloat v);
extern fn void glViewportArrayvOES(GLuint first, GLsizei count, GLfloat v);
extern fn void glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern fn void glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern fn void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern fn void glViewportIndexedfv(GLuint index, GLfloat v);
extern fn void glViewportIndexedfvOES(GLuint index, GLfloat v);
extern fn void glViewportIndexedfvNV(GLuint index, GLfloat v);
extern fn void glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
extern fn void glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
extern fn void glWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, GLuint buffers, GLuint numTextureBarriers, GLuint textures, GLenum srcLayouts);
extern fn void glWaitSemaphoreui64NVX(GLuint waitGpu, GLsizei fenceObjectCount, GLuint semaphoreArray, GLuint64 fenceValueArray);
extern fn void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern fn void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern fn void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, GLuint paths, GLfloat weights);
extern fn void glWeightPointerARB(GLint size, GLenum type, GLsizei stride);
extern fn void glWeightPointerOES(GLint size, GLenum type, GLsizei stride);
extern fn void glWeightbvARB(GLint size, GLbyte weights);
extern fn void glWeightdvARB(GLint size, GLdouble weights);
extern fn void glWeightfvARB(GLint size, GLfloat weights);
extern fn void glWeightivARB(GLint size, GLint weights);
extern fn void glWeightsvARB(GLint size, GLshort weights);
extern fn void glWeightubvARB(GLint size, GLubyte weights);
extern fn void glWeightuivARB(GLint size, GLuint weights);
extern fn void glWeightusvARB(GLint size, GLushort weights);
extern fn void glWindowPos2d(GLdouble x, GLdouble y);
extern fn void glWindowPos2dARB(GLdouble x, GLdouble y);
extern fn void glWindowPos2dMESA(GLdouble x, GLdouble y);
extern fn void glWindowPos2dv(GLdouble v);
extern fn void glWindowPos2dvARB(GLdouble v);
extern fn void glWindowPos2dvMESA(GLdouble v);
extern fn void glWindowPos2f(GLfloat x, GLfloat y);
extern fn void glWindowPos2fARB(GLfloat x, GLfloat y);
extern fn void glWindowPos2fMESA(GLfloat x, GLfloat y);
extern fn void glWindowPos2fv(GLfloat v);
extern fn void glWindowPos2fvARB(GLfloat v);
extern fn void glWindowPos2fvMESA(GLfloat v);
extern fn void glWindowPos2i(GLint x, GLint y);
extern fn void glWindowPos2iARB(GLint x, GLint y);
extern fn void glWindowPos2iMESA(GLint x, GLint y);
extern fn void glWindowPos2iv(GLint v);
extern fn void glWindowPos2ivARB(GLint v);
extern fn void glWindowPos2ivMESA(GLint v);
extern fn void glWindowPos2s(GLshort x, GLshort y);
extern fn void glWindowPos2sARB(GLshort x, GLshort y);
extern fn void glWindowPos2sMESA(GLshort x, GLshort y);
extern fn void glWindowPos2sv(GLshort v);
extern fn void glWindowPos2svARB(GLshort v);
extern fn void glWindowPos2svMESA(GLshort v);
extern fn void glWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
extern fn void glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
extern fn void glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
extern fn void glWindowPos3dv(GLdouble v);
extern fn void glWindowPos3dvARB(GLdouble v);
extern fn void glWindowPos3dvMESA(GLdouble v);
extern fn void glWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
extern fn void glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
extern fn void glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
extern fn void glWindowPos3fv(GLfloat v);
extern fn void glWindowPos3fvARB(GLfloat v);
extern fn void glWindowPos3fvMESA(GLfloat v);
extern fn void glWindowPos3i(GLint x, GLint y, GLint z);
extern fn void glWindowPos3iARB(GLint x, GLint y, GLint z);
extern fn void glWindowPos3iMESA(GLint x, GLint y, GLint z);
extern fn void glWindowPos3iv(GLint v);
extern fn void glWindowPos3ivARB(GLint v);
extern fn void glWindowPos3ivMESA(GLint v);
extern fn void glWindowPos3s(GLshort x, GLshort y, GLshort z);
extern fn void glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
extern fn void glWindowPos3sMESA(GLshort x, GLshort y, GLshort z);
extern fn void glWindowPos3sv(GLshort v);
extern fn void glWindowPos3svARB(GLshort v);
extern fn void glWindowPos3svMESA(GLshort v);
extern fn void glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern fn void glWindowPos4dvMESA(GLdouble v);
extern fn void glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern fn void glWindowPos4fvMESA(GLfloat v);
extern fn void glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
extern fn void glWindowPos4ivMESA(GLint v);
extern fn void glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
extern fn void glWindowPos4svMESA(GLshort v);
extern fn void glWindowRectanglesEXT(GLenum mode, GLsizei count, GLint box);
extern fn void glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern fn void glDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
extern fn void glWaitVkSemaphoreNV(GLuint64 vkSemaphore);
extern fn void glSignalVkSemaphoreNV(GLuint64 vkSemaphore);
extern fn void glSignalVkFenceNV(GLuint64 vkFence);
extern fn void glFramebufferParameteriMESA(GLenum target, GLenum pname, GLint param);
extern fn void glGetFramebufferParameterivMESA(GLenum target, GLenum pname, GLint params);

